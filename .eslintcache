[{"F:\\Konvo Model\\src\\index.js":"1","F:\\Konvo Model\\src\\reportWebVitals.js":"2","F:\\Konvo Model\\src\\App.js":"3","F:\\Konvo Model\\src\\components\\Sidebar.js":"4","F:\\Konvo Model\\src\\components\\Circle.jsx":"5","F:\\Konvo Model\\src\\components\\Layer.jsx":"6","F:\\Konvo Model\\src\\components\\BarChart.jsx":"7","F:\\Konvo Model\\src\\components\\UNCCanvas.jsx":"8","F:\\Konvo Model\\src\\components\\KonvaShape.jsx":"9","F:\\Konvo Model\\src\\components\\ShapsKonva.jsx":"10","F:\\Konvo Model\\src\\components\\FileUpload.jsx":"11","F:\\Konvo Model\\src\\components\\UNCDynamicText.jsx":"12","F:\\Konvo Model\\src\\components\\UNCText.jsx":"13","F:\\Konvo Model\\src\\components\\CanvasUtils.js":"14","F:\\Konvo Model\\src\\components\\JSONUtil.js":"15","F:\\Konvo Model\\src\\components\\XmlToJson.es6.js":"16","F:\\Konvo Model\\src\\data\\shapesData.js":"17","F:\\Konvo Model\\src\\components\\UNCRectangle.jsx":"18","F:\\Konvo Model\\src\\components\\UNCEllipse.jsx":"19","F:\\Konvo Model\\src\\components\\UNCPipe.jsx":"20","F:\\Konvo Model\\src\\components\\UNCLabel.jsx":"21","F:\\Konvo Model\\src\\components\\UNCLine.jsx":"22","F:\\Konvo Model\\src\\components\\UNCButton.jsx":"23","F:\\Konvo Model\\src\\components\\UNCPolygon.jsx":"24","F:\\Konvo Model\\src\\components\\preFunctions.jsx":"25","F:\\Konvo Model\\src\\components\\APIUtil.jsx":"26","F:\\Konvo Model\\src\\components\\Utils.jsx":"27"},{"size":1040,"mtime":1628847961850,"results":"28","hashOfConfig":"29"},{"size":362,"mtime":499162500000,"results":"30","hashOfConfig":"29"},{"size":491,"mtime":1641477141934,"results":"31","hashOfConfig":"29"},{"size":1538,"mtime":1626469920000,"results":"32","hashOfConfig":"29"},{"size":160,"mtime":1626469920000,"results":"33","hashOfConfig":"29"},{"size":218,"mtime":1626469920000,"results":"34","hashOfConfig":"29"},{"size":2936,"mtime":1626469920000,"results":"35","hashOfConfig":"29"},{"size":26112,"mtime":1641480310766,"results":"36","hashOfConfig":"29"},{"size":9612,"mtime":1626469920000,"results":"37","hashOfConfig":"29"},{"size":3722,"mtime":1628668640000,"results":"38","hashOfConfig":"29"},{"size":2457,"mtime":1626469920000,"results":"39","hashOfConfig":"29"},{"size":1645,"mtime":1634711792000,"results":"40","hashOfConfig":"29"},{"size":11461,"mtime":1630167360000,"results":"41","hashOfConfig":"29"},{"size":5154,"mtime":1628622124000,"results":"42","hashOfConfig":"29"},{"size":25937,"mtime":1629225158000,"results":"43","hashOfConfig":"29"},{"size":4974,"mtime":1626469920000,"results":"44","hashOfConfig":"29"},{"size":54542,"mtime":1615969843623,"results":"45","hashOfConfig":"29"},{"size":22465,"mtime":1630356368000,"results":"46","hashOfConfig":"29"},{"size":18114,"mtime":1630176374000,"results":"47","hashOfConfig":"29"},{"size":6954,"mtime":1638257788000,"results":"48","hashOfConfig":"29"},{"size":11162,"mtime":1630167322000,"results":"49","hashOfConfig":"29"},{"size":732,"mtime":1638257788000,"results":"50","hashOfConfig":"29"},{"size":2607,"mtime":1629223788000,"results":"51","hashOfConfig":"29"},{"size":10042,"mtime":1630167360000,"results":"52","hashOfConfig":"29"},{"size":7295,"mtime":1637318664000,"results":"53","hashOfConfig":"29"},{"size":2614,"mtime":1626469920000,"results":"54","hashOfConfig":"29"},{"size":2801,"mtime":1641480725461,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},"1z677i",{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"59"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"59"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"59"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":58,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"59"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"59"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"59"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"59"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"59"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":96,"fixableErrorCount":0,"fixableWarningCount":7,"source":"92","usedDeprecatedRules":"59"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"59"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":48,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"59"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"59"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":80,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"59"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":72,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"59"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"59"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":106,"fixableErrorCount":0,"fixableWarningCount":7,"source":"115","usedDeprecatedRules":"59"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"59"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":43,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"59"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"59"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"59"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\Konvo Model\\src\\index.js",["132","133","134","135","136","137","138","139"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport BarChart from \"./components/BarChart\";\nimport Circle from \"./components/Circle\";\nimport SvgLayer from \"./components/Layer\";\n\nimport ShapesKonva from \"./components/ShapsKonva\";\nimport KonvaShaps from \"./components/KonvaShape\";\nimport UNCCanvas from \"./components/UNCCanvas\";\nimport FileUpload from \"./components/FileUpload\";\nimport Sidebar from \"./components/Sidebar\";\n\nReactDOM.render(\n  <React.StrictMode>\n   <App/>\n \n    {/* <SvgLayer height=\"1000\" width=\"600\" >\n      <Circle ></Circle>\n    </SvgLayer> */}\n\n    {/* <KonvaShaps/> */}\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["140","141"],"F:\\Konvo Model\\src\\reportWebVitals.js",[],"F:\\Konvo Model\\src\\App.js",["142","143"],"import logo from './logo.svg';\nimport './App.css';\nimport {BrowserRouter as Router,Route,Switch} from 'react-router-dom'\nimport Sidebar from './components/Sidebar';\nimport UNCCanvas from './components/UNCCanvas';\nimport React from 'react';\n\nfunction App() {\n  return (\n  \n    <React.Fragment>\n      <Router>\n      {/* <Sidebar/> */}\n      <Switch>\n        <Route exact path='/' component={UNCCanvas}></Route>\n      </Switch>\n      </Router>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","F:\\Konvo Model\\src\\components\\Sidebar.js",["144","145","146","147"],"import React,{Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport SideNav, { Toggle, Nav, NavItem, NavIcon, NavText } from '@trendmicro/react-sidenav';\n\n// Be sure to include styles at some point, probably during your bootstraping\nimport '@trendmicro/react-sidenav/dist/react-sidenav.css';\n\n\n\n/* import {BrowserRouter as Router ,Route,Switch} from 'react-router-dom'; */\n\n\nclass Sidebar extends React.Component{\n    \n    render(){\n\n        return(\n            <SideNav\n    onSelect={(selected) => {\n        // Add your code here\n    }}\n>\n    <SideNav.Toggle />\n    <SideNav.Nav defaultSelected=\"home\">\n        <NavItem eventKey=\"home\">\n            <NavIcon>\n                <i className=\"fa fa-fw fa-home\" style={{ fontSize: '1.75em' }} />\n            </NavIcon>\n            <NavText>\n                Home\n            </NavText>\n        </NavItem>\n        <NavItem eventKey=\"charts\">\n            <NavIcon>\n                <i className=\"fa fa-fw fa-line-chart\" style={{ fontSize: '1.75em' }} />\n            </NavIcon>\n            <NavText>\n                Charts\n            </NavText>\n            <NavItem eventKey=\"charts/linechart\">\n                <NavText>\n                    Line Chart\n                </NavText>\n            </NavItem>\n            <NavItem eventKey=\"charts/barchart\">\n                <NavText>\n                    Bar Chart\n                </NavText>\n            </NavItem>\n        </NavItem>\n    </SideNav.Nav>\n</SideNav>\n            \n\n            \n        );\n    }\n}\n    export default Sidebar;","F:\\Konvo Model\\src\\components\\Circle.jsx",[],"F:\\Konvo Model\\src\\components\\Layer.jsx",[],"F:\\Konvo Model\\src\\components\\BarChart.jsx",["148","149","150","151"],"import React, {Component} from 'react';\nimport * as d3 from \"d3\";\nimport ShapesData from \"../data/shapesData\"\n\nclass BarChart extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {ShapesData};\n        this.dataset = [100, 200, 300, 400, 500];\n      }\n    \n    \n    componentDidMount() {\n      this.drawChart();\n    }\n      \n    drawChart() {\n      \n        let eccanvas= d3.select(\"body\").attr(\"style\", \"border: 2px solid gold\");//main body\n\n        let svg = eccanvas\n        .append('svg')\n        .attr('width', parseFloat(ShapesData.hmipage.width))\n        .attr('height', parseFloat(ShapesData.hmipage.height));\n\n        ShapesData.hmipage.component_instances.map((obj,i) =>  {\n          \n    svg.append('rect')\n      .attr('x', parseFloat(obj.x1))\n      .attr('y',parseFloat(obj.y1))\n      .attr('width', parseFloat(obj.x2))\n      .attr('height',parseFloat(obj.y2))\n      .attr('fill',\"white\")\n      .attr('stroke',\"10\")\n\n\n      obj.shape.filter(x=>x).map((shapeObject)=>{\n        switch(shapeObject.type)\n        {\n            case \"Rectangle\":\n                svg.append('rect')\n      .attr('x', parseFloat(shapeObject.rectangle.x1)+parseFloat(obj.x1))\n      .attr('y', parseFloat(shapeObject.rectangle.y1)+parseFloat(obj.y1))\n      .attr('width', parseFloat(shapeObject.rectangle.x2))\n      .attr('height', parseFloat(shapeObject.rectangle.y2))\n      .attr('fill', shapeObject.fill.fill)\n      .attr('stroke', parseFloat(shapeObject.line.line_width))\n        break;\n        }\n    })\n\n        }\n        \n\n        );\n        \n       \n//         let size = 500;\n//    let svg = eccanvas\n//                .append('svg')\n//                .attr('width', size)\n//                .attr('height', size);\n\n\n//                let rect_width = 95;\n//    svg.selectAll('rect')\n//       .data(this.dataset)\n//       .enter()\n//       .append('rect')\n//       .attr('x', (d, i) => 5 + i*(rect_width + 5))\n//       .attr('y', d => size- d)\n//       .attr('width', rect_width)\n//       .attr('height', d => d)\n//       .attr('fill', 'teal');\n\n    }\n    \n    getShapeObject(shapeObject,parentObj)\n    {\n        var obj=\"\";\n\n        switch(shapeObject.type)\n        {\n            case \"Rectangle\":\n                obj.append('rect')\n      .attr('x', parseFloat(shapeObject.rectangle.x1)+parseFloat(parentObj.x1))\n      .attr('y', parseFloat(shapeObject.rectangle.y1)+parseFloat(parentObj.y1))\n      .attr('width', parseFloat(shapeObject.rectangle.x2))\n      .attr('height', parseFloat(shapeObject.rectangle.y2))\n      .attr('fill', shapeObject.fill.fill)\n      .attr('stroke', parseFloat(shapeObject.line.line_width));\n                break;\n        }\n\n\n    }\n\n    render(){\n\n        return(\n        // <svg id=\"ecscadaCanvas\" viewBox=\"0 0 100 50\" style={{\n        //     border: \"2px solid gold\"\n        //   }} />\n        <div id=\"ecscadaCavas\"></div>\n          )\n    }\n  }\n      \n  export default BarChart;","F:\\Konvo Model\\src\\components\\UNCCanvas.jsx",["152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209"],"  import React, { Component } from \"react\";\n  import listReactFiles from 'list-react-files'\n  import { getRectPointX, getRectPointY } from \"./CanvasUtils.js\";\n  import { useState } from 'react'\n  import {\n    Stage,\n    Polyline,\n    Shape,\n    Layer,\n    Rect,\n    Ellipse,\n    Text,\n    Circle,\n    Line,\n    Group,\n    Arc,\n    Image\n  } from \"react-konva\";\n  import { Navbar, Nav, NavItem, NavDropdown, MenuItem, Form, FormControl, Button } from 'react-bootstrap';\n  import { getPloyPoints } from \"./JSONUtil.js\";\n  import UNCRectangle from \"./UNCRectangle\";\n  import preFunctions from \"./preFunctions\";\n  import UNCEllipse from \"./UNCEllipse\";\n  import UNCPipe from \"./UNCPipe\";\n  import UNCLine from \"./UNCLine\";\n  import UNCPolygon from \"./UNCPolygon\";\n  import UNCLabel from \"./UNCLabel\";\n  import UNCButton from \"./UNCButton\";\n  import ShapesData from \"../data/shapesData\";\n  import { XmlToJson } from \"./XmlToJson.es6\";\n  import { getStateObject, ShapeObjects } from \"./JSONUtil\";\n  import axios from 'axios';\n  import XMLData from './templates/xmlFiles/template_4.pagex';\n  import UNCDynamicText from \"./UNCDynamicText.jsx\";\n  import { style } from \"d3-selection\";\n  import UNCText from \"./UNCText.jsx\";\n  import { geoGnomonic } from \"d3\";\n  import { isDOMComponentElement } from \"react-dom/cjs/react-dom-test-utils.production.min\";\n\n  import { androidToRgba,hextoRGBA,lineStyle} from './Utils';\n\n\n  class UNCCanvas extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        shapes: [],\n        lables: [],\n        stageScale: 1,\n        stageX: 0,\n        ProjectId: null,\n        stageY: 0,\n        loading: false,\n        currentXml: \"\",\n        imagesArray: [],\n        display_on_off_value: false,\n        randomValue: 0,\n        xmlsList: [],\n        tagValue: {},\n        templateData: null,\n        image: null,\n        windowheight: null,\n        windowwidth: null,\n        windowColor: \"grey\"\n      };\n      this.myRef = React.createRef();\n      this.App = React.createRef();\n    }\n\n    \n    componentDidMount() {\n\n      const image = new window.Image();\n      image.src = \"assets/ecs.png\";\n\n      image.onload = () => {\n        this.setState({\n          image: image\n        });\n      };\n      //Default Index Xml- HomePage----\n      this.handleSubmit(\"Home_Page\");\n      //Importing Xmls-------\n      this.importingXmls()\n    }\n\n    //Dynamic Importing of Xmls------------------------\n    importingXmls() {\n      function importAll(r) {\n        return r.keys().map(r);\n      }\n      var images = importAll(require.context('./Xml', false, /\\.(pagex)$/));\n      // //console.log(images)\n      this.setState({\n        xmlsList: images\n      }, () => {\n        //   //console.log(this.state.xmlsList)\n      })\n    }\n\n    //This Loads  User Selected Xml \n    async handleSubmit(event) {\n      console.log(event)\n      this.setState({\n        loading: true,\n        currentXml: event\n      })\n      ////console.log(event)\n      var parser = require('fast-xml-parser');\n      var he = require('he');\n      var options = {\n        attributeNamePrefix: \"\",\n        //attrNodeName: false,\n        //textNodeName : \"#text\",\n        ignoreAttributes: false,\n        ignoreNameSpace: false,\n        // attributeNamePrefix : \"\",\n        // attrNodeName: \"attr\", //default is 'false'\n        // textNodeName : \"\",\n        // ignoreAttributes : true,\n        // ignoreNameSpace : true,\n        // allowBooleanAttributes : false,\n        // parseNodeValue : true,\n        // parseAttributeValue : false,\n        // trimValues: true,\n        cdataTagName: \"__cdata\", //default is 'false'\n        cdataPositionChar: \"\\c\",\n        // parseTrueNumberOnly: false,\n        // arrayMode: false, //\"strict\"\n        // attrValueProcessor: (val, attrName) => he.decode(val, {isAttributeValue: true}),//default is a=>a\n        // tagValueProcessor : (val, tagName) => he.decode(val), //default is a=>a\n        // stopNodes: [\"parse-me-as-string\"]\n      };\n\n      console.log('./Xml/' + event + '.pagex')\n      try {\n        var value = require('./Xml/' + event + '.pagex');\n      } catch {\n\n      }\n\n       console.log(value)\n      var data = [];\n      \n      await axios.get(value.default, {\n        \"Content-Type\": \"application/xml; charset=utf-8\"\n      }).then((response) => {\n        // //console.log(response)\n        data = response.data;\n        //console.log(data)\n      }).catch(error => {\n        ////console.log(error.response)\n      });\n\n\n      // Page Convertion---------------------------------------------------------------------\n      var tObj = parser.getTraversalObj(data, options);\n      var jsonObj = parser.convertToJson(tObj, options);\n      //console.log(\"jsonPage--------------------------------------------------------------\")\n      console.log(jsonObj)\n\n      this.setState({\n        ProjectId: jsonObj.hmipage?.id\n      })\n\n      var v = hextoRGBA(jsonObj.hmipage.color);\n      ////console.log(v)\n\n      this.setState({ windowColor: v ?? null })\n      this.setState({ windowheight: jsonObj.hmipage.height ?? \"1050\" })\n      this.setState({ windowwidth: jsonObj.hmipage.width ?? \"1890\" })\n\n      var pageShape = ShapeObjects(jsonObj);\n      console.log(\"PageShapes ------------------------------------------------------------------\")\n      console.log(pageShape);\n\n      //console.log(jsonObj.hmipage.template_id)\n\n      if (jsonObj.hmipage.template_id != \"\") {\n        //console.log(\"-------------------------JsonTemplateID-----------------------------\")\n            //console.log(jsonObj.hmipage.template_id)\n\n        var templateShapes = [];\n        // require('../' + this.props.termsAndCondition.pdfDocument);\n\n        try {\n          var value = require('./templates/' + jsonObj.hmipage.template_id + '.pagex');\n        } catch {\n\n        }\n\n        // //console.log(value)\n        if (value != undefined) {\n        //console.log(\"Entered If \"+value.default)\n          await axios.get(value.default, {\n            \"Content-Type\": \"application/xml; charset=utf-8\"\n          }).then((response) => {\n            //  //console.log(response)\n            // //console.log('Your xml file as string', response.data);\n            this.setState({ templateData: response.data }, () => {\n              // //console.log(this.state.templateData)\n              //Template Convertion-----------------------------------------------------------------------\n              var template = parser.getTraversalObj(this.state.templateData, options)\n              var templateJson = parser.convertToJson(template, options);\n              //console.log(\"jsonTemplateObj--------------------------------------------------------------\")\n              //console.log(templateJson)\n\n              templateShapes = ShapeObjects(templateJson)\n              console.log(\"TemplateShapes ------------------------------------------------------------------\")\n              console.log(templateShapes);\n            })\n          })\n        } else {\n          // //console.log(\"NO File Detected!\")\n        }\n\n        pageShape.map((val) => {\n          templateShapes.push(val)\n        })\n\n        this.setState({\n          shapes: templateShapes\n        }, () => {\n          //  //console.log(this.state.shapes)\n          this.setState({\n            loading: false\n          })\n        })\n      } else {\n        this.setState({\n          shapes: pageShape\n        }, () => {    \n      console.log(this.state.shapes)\n          this.setState({\n            loading: false\n          })\n        })\n      }\n    }\n\n    //Render Images---------------------------------------------------------------------\n    renderImages(image, obj) {\n      return <Image x={parseFloat(image.x)} y={parseFloat(image.y)}\n        image={this.state.image}\n        height={parseFloat(image.box.bottom)}\n        width={parseFloat(image.box.right)} />\n    }\n\n    renderparams(shape)\n    {\n    // console.log(\"Params----------------------\")\n    // console.log(shape)\n    \n    //   if(shape.param.length == undefined)\n    //   {\n    //     console.log(shape.param)\n    //   }else\n    //   {\n    //     shape.param.map((param)=>{\n    // console.log(param)\n    //     });\n    //   }\n      \n    }\n\n    //Render Shapes --------------------------------\n    renderShapes(shape, parentX, parentY) {\n      // //console.log(parentX)\n      // //console.log(parentY)\n\n      if (shape) {\n        if (shape.type != undefined) {\n          switch (shape.type) {\n            case \"Rectangle\":\n              return <UNCRectangle shape={shape} parentX={parentX} parentY={parentY} />;\n            case \"Ellipse\":\n              return <UNCEllipse shape={shape} parentX={parentX} parentY={parentY} />;\n            case \"Pipe\":\n              return <UNCPipe shape={shape} parentX={parentX} parentY={parentY} />;\n            case \"Line\":\n              return <UNCLine shape={shape} parentX={parentX} parentY={parentY} />;\n            case \"Polygon\":\n              return <UNCPolygon shape={shape} parentX={parentX} parentY={parentY} />;\n            case \"Button\":\n\n            // return <UNCButton shape={shape} parentX={parentX} parentY={parentY} ProjectId={this.state.ProjectId} />\n            \n            return   <Group>\n            <Rect\n              id={\"Button\" + shape.object.object_id + shape.object.object_number}\n              x={parseFloat(parentX) + parseFloat(shape.box.axis_offset_left) + ((parseFloat(shape.box.left)) / 2)}\n              y={parseFloat(parentY) + parseFloat(shape.box.axis_offset_top) + ((parseFloat(shape.box.top)) / 2)}\n              width={parseFloat(shape.box.right)}\n              height={parseFloat(shape.box.bottom)}\n              fill={shape.button?.fill_color_up != undefined ? hextoRGBA(shape.button.fill_color_up) : \"grey\"}\n              //Default Configuration \n              strokeWidth={1.5}\n              stroke={\"#eaeaea\"}\n              shadowColor={\"grey\"}\n              shadowBlur={4}\n              shadowOffsetX={3}\n              shadowOffsetY={3}\n              showOpacity={0.8}\n              shadowBlur={3}\n              draggable={false}\n              dashEnabled={true}\n              dash={lineStyle(shape.line.style)}\n      \n              onClick={() => {\n              this.buttonOnclick(shape)\n                \n              }}\n      \n      \n            />\n            <Text\n              align={\"center\"}\n              width={parseFloat(shape.box.right)}\n              height={parseFloat(shape.box.bottom)}\n              fontSize={parseFloat(shape.button?.buttontext?.font_size) ?? 15}\n              fill={shape.button != undefined ? hextoRGBA(shape.button?.buttontext?.color) : \"\"}\n              x={parseFloat(parentX) + (parseFloat(shape.box.axis_offset_left) + (parseFloat(shape.box.left)) + parseFloat(0) / 2)}\n              y={parseFloat(parentY) + parseFloat(shape.box.axis_offset_top) + ((parseFloat(shape.box.top)) + parseFloat(shape.box.bottom) / 2)}\n              text={shape.button != undefined ? this.buttonText(shape.button.buttontext.text)   :  \"Button\"}\n              draggable={false}\n              onClick={() => {\n                this.buttonOnclick(shape)\n              }}\n      \n            ></Text>\n          </Group>\n\n        \n            }\n        }\n      }\n    }\n\n    buttonText(buttonTitle){\n\n  var text = buttonTitle;\n  text = text.replace(\"&#xa;\",\" \");\n      return text;\n    }\n\n\n    buttonOnclick(shape){\n      if(shape.input_touch != undefined)\n      {\n        //console.log(shape?.input_touch?.up?.command.__cdata)\n        var cdata = shape?.input_touch?.up?.command.__cdata;\n        cdata = cdata.split(\"(\");\n      \n        if(cdata[0]==\"openPage\")\n        {\n          var targetPage = cdata[1].replace(\")\",\"\");\n        targetPage = targetPage.replace(\";\",\"\");\n        //console.log(\"targetPage : \"+targetPage)\n              try {\n          var value = require('./Xml/' + targetPage + '.pagex');\n        } catch {\n        }\n        if(value?.default != undefined)\n        {\n          this.handleSubmit(targetPage.toString());\n\n        }else{\n          alert(targetPage + \" Not Found !\");\n        }\n      \n\n      \n\n        }\n      }else{\n        //console.log(shape?.button?.buttontext?.text)\n      }\n\n    }\n\n\n\n\n    //Render Group-------------------------------------------------\n    renderGroupsMian(shape, Obj) {\n      // //console.log(shape)\n      // //console.log(Obj)\n\n      if (shape.group) {\n        ////console.log(\"-0-group\")\n        if (shape.group.length != undefined) {\n          return shape.group.map((group) =>\n            this.renderGroupsMian(group, Obj))\n        } else {\n          return this.renderGroupsMian(shape.group, Obj)\n\n        }\n      }\n\n      if (shape.text) {\n        ////console.log(\"-0-text\")\n        if (shape.text.length != undefined) {\n          return shape.text.map((text) => this.renderGrouptext(text, Obj))\n        }\n        else {\n          return this.renderGrouptext(shape.text, Obj)\n        }\n      }\n\n      if (shape.shape) {\n        //   //console.log(Obj.group)\n        // //console.log(Obj.x1)\n        // //console.log(Obj.y1)\n        if (shape.shape.length != undefined) {\n          return shape.shape.map((shape) =>\n            this.renderShapes(shape, Obj.x1, Obj.y1))\n        } else {\n\n          return this.renderShapes(shape.shape, Obj, Obj.y1)\n        }\n      }\n\n      \n      if (shape.params) {\n        //   //console.log(Obj.group)\n        // //console.log(Obj.x1)\n        // //console.log(Obj.y1)\n        console.log(\"Params--------------------------------\")\n        // if (shape.shape.length != undefined) {\n        //   return shape.shape.map((shape) =>\n        //     this.renderShapes(shape, Obj.x1, Obj.y1))\n        // } else {\n\n        //   return this.renderShapes(shape.shape, Obj, Obj.y1)\n        // }\n      }\n    }\n\n\n    //Direct Text-------------------\n    rendertext(text, parentX, parentY) {\n  // console.log(text)\n      return <UNCText text={text} parentX={parentX} parentY={parentY} />;\n    }\n\n\n\n    //Group Text-------------------\n    renderGrouptext(text, obj) {\n    // var val = \"\";\n    //  val = text.static_text;\n      ////console.log(\"groupText\");\n      ////console.log(val)\n\n      //Display Numeric----------------------------------------------\n      // if (text.display_numeric != undefined) {\n      //   val = text.display_numeric.expression.__cdata;\n      //   //val = val.split(\"(\");\n      //   // //console.log(val)\n      // }\n\n      //Display_on_off-----------------------------------------------\n      // else if (text.display_on_off != undefined) {\n      //   var cdataValue = text.display_on_off.__cdata;\n      //   //this.timer = setInterval(() => this.displayOutput(),1000)  \n      // }\n\n\n      return <Text fontFamily={text.font_family}\n      align={\"center\"}\n        fontSize={text.font_size}\n        fill={hextoRGBA(text.color)}\n        // text={text.display_on_off != undefined ?\n        //   this.state.display_on_off_value == true ? text.display_on_off.text_on : text.display_on_off.text_off :\n        //   val}\n        //draggable={true}\n        text={text.static_text}\n\n        x={parseFloat(obj.x1 ?? 0) -5+ parseFloat(text.box.axis_offset_left) + parseFloat(text.box.axis_anchor) + (parseFloat(text.box.left)) + parseFloat(10)}\n        y={parseFloat(obj.y1 ?? 0) + 5  + parseFloat(text.box.axis_offset_top) + parseFloat(text.box.axis_anchor) + ((parseFloat(text.box.top)) + parseFloat(20))}\n      //  x={ parseFloat(obj.x1)+ parseFloat(text.box.axis_anchor)+parseFloat(text.box.axis_offset_left)+((parseFloat(text.box.left))/2)}\n      //  y={ parseFloat(obj.y1)+parseFloat(text.box.axis_anchor)+parseFloat(text.box.axis_offset_top)+((parseFloat(text.box.top))/2)}\n      />\n    }\n\n    //Labels Text ------------------------------------------------------------------\n    renderLabels(text, obj) {\n      return <UNCLabel text={text} />;\n    }\n\n    //Render--------------------------------------------------------------------------------------------------------------------------------------------\n    render() {\n      const { shapes, lables } = this.state;\n    \n      return (\n\n        <div id=\"stageContainer\" width={this.state.windowwidth}\n          height={this.state.windowheight} style={{ backgroundColor: this.state.windowColor }} >\n          <Navbar bg=\"dark\" variant=\"dark\">\n            <Navbar.Brand href=\"#home\">\n              <img\n                src=\"assets/ecs.png\"\n                width=\"80\"\n                height=\"40\"\n                className=\"d-inline-block align-top\"\n              /></Navbar.Brand>\n            <Nav className=\"mr-auto\">\n              <Nav.Link href=\"#\" onClick={() => this.handleSubmit(\"Home_Page\")}>Home</Nav.Link>\n\n              {/* Dynamic Retriving of Xmls from the Folder -----------------------------------------------------------   */}\n              <NavDropdown title=\"Xml's\" style={{ backgroundolor: 'white' }} >\n                {\n                  this.state.xmlsList.map((xml, i) => {\n                    var name = xml.default.replace(\"/static/media/\", \"\");\n                    name = name.replace(\".pagex\", \"\");\n                    name = name.split(\".\");\n\n                    return <NavDropdown.Item className={i + 1} href=\"#\" onClick={() => this.handleSubmit(name[0])}>{name[0]}</NavDropdown.Item>\n                  }\n                  )\n                }\n              </NavDropdown>\n              {/* <Button variant=\"primary\">{this.state.ProjectId}</Button>{' '} */}\n            </Nav>\n            <Form inline>\n              {/* <Button variant=\"outline-info\">LatestAlarms</Button>{' '}\n              <Button variant=\"outline-info\">LatestEvents</Button>{' '}\n              <Button variant=\"outline-info\">Login</Button> */}\n            </Form>\n          </Navbar>\n          <center><div style={{ display: this.state.loading ? \"block\" : \"none\" }}>\n            <label>Loading...</label>\n          </div></center>\n          \n          {this.state.currentXml === \"Home_Page\" ?\n\n      //Home Page----------------------------------\n        <div className=\"page\" style={{width:this.state.windowwidth, height:window.height,  background:\"#004C99\" }}>\n        <br/>\n        \n      \n        <div >\n            <center><h3 style={{color:'white'}}>Welcome To ECSCADA Design Studio</h3></center>\n        </div>\n        <br/>   \n        <br/>   \n        <br/>   \n    \n      \n        <div class=\"container\">\n                <div class=\"row\">\n                    \n          {this.state.xmlsList.map((page)=>{\n          var pageName = page.default.split(\"/\")\n          pageName = pageName[3].split(\".\")\n          pageName = pageName[0]\n\n          \n          return   <div  class=\"col-md-3 text-center\"  style={{\n            paddingBottom: '30px',\n          \n          }}> \n          \n          \n          \n          <Button style={{width: \"100%\"}} onClick={()=> this.handleSubmit(pageName)} variant=\"btn btn-secondary btn-lg\">\n        <p  style={{fontSize: \"15px\"}}>\n      {pageName}\n      </p>\n  \n            </Button>\n            \n            </div>\n\n        })}\n        \n      </div></div>\n        </div>\n        : \n\n          <Stage\n            id=\"konvaStage\"\n            ref={this.myRef}\n            width={this.state.windowwidth}\n            height={this.state.windowheight}\n            containerId={\"stageContainer\"}\n            //  style={{marginLeft:\"250px\", backgroundColor:\"Grey\"}}\n\n            style={{ display: this.state.loading ? \"none\" : \"block\", backgroundColor:this.state.windowColor }}\n          >\n\n            <Layer>\n              {shapes.length != undefined ? shapes.map((obj, i) => obj != undefined ?\n                (\n\n                  <Group\n                    key={\"Grp_\" + obj.objectNumber + i}\n\n                    // id={obj.objectNumber}\n                    x={0}\n                    y={0}\n                  // width={parseFloat(obj.x2 == undefined ? 0 : obj.x2)}\n                  // height={parseFloat(obj.y2 == undefined ? 0 : obj.y2)}\n                  // fill={\"blue\"}\n                  //draggable={true}\n                  >\n\n                    {/* obj.shape--------------------------------------------------------- */}\n                    {obj.shape === undefined ? (\n                      <Group />\n                    ) : (\n                      obj.shape.length != undefined ?\n                        obj.shape.map((shape) =>\n                          this.renderShapes(shape, obj.x1, obj.y1)\n                        ) : this.renderShapes(obj.shape, obj.x1, obj.y1)\n                    )}\n\n\n                    {/* obj.shapes--------------------------------------------------------- */}\n                    {obj.shapes === undefined ? (\n                      <Group />\n                    ) : (\n                      obj.shapes.map((shape) =>\n                        this.renderShapes(shape, obj.x1, obj.y1)\n                      )\n                    )}\n\n                    {obj.params === undefined ? (\n                      <Group />\n                    ) : (\n                      // obj.params.length != undefined ?\n                      // obj.params.map((shape) =>\n                    //   this.renderparams(shape)\n                    // ): \n                      this.renderparams(obj)\n                    )}\n\n\n\n                    {/* Obj.text----------------------------------------------------------- */}\n\n                    {/* {obj.text === undefined ?(\n                    <Group />\n                  ):\n                  obj.text.length != undefined ? \n                  obj.text.map((value) => {\n\n                    //console.log(\"*****************************************************************************\")\n                    return  <UNCDynamicText shape={value} parentX={obj.x1} parentY={obj.y1} />\n                  }\n                    ):   <UNCDynamicText shape={obj.text} parentX={obj.x1} parentY={obj.y1} />\n                  } */}\n\n                    {obj.text === undefined ? (\n                      <Group />\n                    ) :\n                      obj.text.length != undefined ?\n                        obj.text.map((value) => this.rendertext(value, obj.x1, obj.y1)\n                        ) : this.rendertext(obj.text, obj.x1, obj.y1)\n                    }\n                    \n\n                    {/* //Obj.Labels---------------------------------------------------- */}\n                    {obj.labels === undefined ? (\n                      <Group />\n                    ) : (\n                      //MainLabels length Validation\n                      obj.labels.length != undefined ?\n                        //if\n                        obj.labels.map((text, i) =>\n\n                          text.text.length != undefined ?\n\n                            text.text.map((text) =>\n\n                              this.renderLabels(text, obj))\n\n                            : this.renderLabels(text.text, obj))\n                        //else\n                        : obj.labels.text.length != undefined ?\n\n                          obj.labels.text.map((text, i) =>\n                            this.renderLabels(text, obj)\n                          )\n                          : this.renderLabels(obj.labels.text, obj)\n                    )}\n\n                    {/* //obj.groups-------------------------------------------------------- */}\n\n                    {\n\n                      obj.group === undefined ? (\n                        <Group />\n                      ) : (\n                        //if--1--------------------\n\n                        obj.group.length != undefined ?\n                          obj.group.map((val) => {\n                            //console.log(\"--GroupS in  UNCCanvas\")\n                            //console.log(obj)\n                            if (val.text) {\n                              //   //console.log(\"-0-text\")\n                              //  //console.log(obj)\n                              if (val.text.length != undefined) {\n                                return val.text.map((text) =>  this.rendertext(val.text, obj.x1, obj.y1))\n\n                              }\n                              else {\n                                return this.rendertext(val.text, obj.x1, obj.y1)\n                              }\n                            }\n\n                            if (val.group) {\n                              ////console.log(\"-0-group\")\n                              if (val.group.length != undefined) {\n                                //  //console.log(\"Calling\");\n                                return val.group.map((group) => this.renderGroupsMian(group, obj))\n                              }\n                              else {\n                                return this.renderGroupsMian(val.group, obj)\n                              }\n\n                            }\n                            if (val.shape) {\n                              //console.log(\"-0-shape\")\n                              //console.log(obj.group.x1, obj.group.y1)\n                              //console.log(val.x1, val.y1)\n\n\n                              if (val.shape.length != undefined) {\n                                return val.shape.map((shape) =>\n                                  this.renderShapes(shape, obj.x1, obj.y1))\n                              }\n                              else {\n                                return this.renderShapes(val.shape, obj.x1, obj.y1)\n\n                              }\n                            }\n                          }\n                          ) : this.renderGroupsMian(obj.group, obj)\n                      )}\n\n\n                    {/* //obj.images-------------------------------------------------------- */}\n\n                    {obj.image === undefined ? (\n                      <Group />\n                    ) : (\n                      obj.image.length != undefined ?\n                        obj.image.map((image) =>\n                          this.renderImages(image, obj)\n                        ) : this.renderImages(obj.image, obj)\n                    )}\n\n                  </Group>\n                ) : null) : null}\n\n            </Layer>\n          </Stage>\n    }\n        </div>\n      );\n    }\n  }\n\n  export default UNCCanvas;","F:\\Konvo Model\\src\\components\\KonvaShape.jsx",["210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230"],"import Konva from 'konva';\nimport React, { Component } from 'react'\nimport ReactDOM from \"react-dom\";\nimport { render } from 'react-dom';\nimport { Stage, Polyline, Shape,Layer, Rect,Ellipse, Text, Circle, Line,Group,Arc } from 'react-konva';\nimport ShapesData from \"../data/shapesData\"\n \n\nexport default class KonvaShaps extends  Component{\n    \n    constructor(props) {\n      super(props);\n      this.myRef = React.createRef();\n      this.state = {color:1};\n      this.shapesObjData=[]\n      \n    }\n\n      \n    componentDidMount() {\n        this.LoadShapes();\n      }\n\n      LoadShapes()\n      {\n        var shapeData=ShapesData.hmipage.shapes.shape\n        this.shapesObjData.push(shapeData)\n        let ciData= ShapesData.hmipage.component_instances.map((ci=> ci))\n        this.shapesObjData.push(ciData.map(xx=>xx.shap))\n        console.log(this.myRef.current.find(\"#4293782504\"))\n        this.setAnimation(this.myRef.current.find(\"#4293782504\"))\n\n      }\n\n\n      setAnimation(shape)\n      {\n         this.setState((x)=>x.id=2) \n        shape.to({\n            fi: shape.x,\n            fillLinearGradientStartPointY: shape.y,\n            duration: 0.5\n          });\n          this.setState.color++;\n         }\n\n   \n\n\n      getXPoint(shape)\n      {\n        switch(shape.type)\n        {\n            case \"Rectangle\":\n            return (parseFloat(shape.rectangle.x1)+parseFloat(shape.box.axis_offset_left));\n            case \"Ellipse\":\n                return (parseFloat(shape.ellipse.x1)+parseFloat(shape.box.axis_offset_left)+((parseFloat(shape.box.left)+parseFloat(shape.box.right))/2));\n        }\n\n      }\n\n      getYPoint(shape)\n      {\n        switch(shape.type)\n        {\n            case \"Rectangle\":\n            return (parseFloat(shape.rectangle.y1)+parseFloat(shape.box.axis_offset_top));\n            case \"Ellipse\":\n            return (parseFloat(shape.ellipse.y1)+parseFloat(shape.box.axis_offset_top)+((parseFloat(shape.box.top)+parseFloat(shape.box.bottom))/2));\n\n        }\n      }\n\n      getPloyPoints(shape,parentX,parentY)\n      {\n        var ptx=[]\n        console.log(shape.type);\n        switch(shape.type)\n        {\n            case \"Pipe\":\n            ptx=shape.pipe.points.map(o => ({x: o.x, y: o.y}))\n            break;\n            case \"Polygon\":\n            ptx=shape.polyline.points.map(o => ({x: o.x, y: o.y}))\n            break;\n\n        }\n        let ptArray=[]\n        ptx.forEach(element => {\n            ptArray.push(parseFloat(element.x)+parseFloat(parentX)+parseFloat(shape.box.axis_offset_left)+((parseFloat(shape.box.left))/2))\n            ptArray.push(parseFloat(element.y)+parseFloat(parentY)+parseFloat(shape.box.axis_offset_top)+((parseFloat(shape.box.top))/2))\n        });\n      \n       return ptArray;\n      }\n\n\n\n      renderLables(text,obj)\n      {\n        if(obj===null)\n        {\n            console.log(text)\n            obj={ \"zIndex\": \"0\",\n            \"objectNumber\": \"0\",\n            \"x1\": \"0\",\n            \"y1\": \"0\",\n            \"x2\": \"0\",\n            \"y2\": \"0\",\n            \"objectId\": \"\"}\n        }\n\n        return  <Text fontFamily={text.font_family} \n            fontSize={text.font_size}\n            fill={text.color}\n            text={text.static_text}\n            x={parseFloat(text.box.axis_offset_left)+((parseFloat(text.box.left))/2)}\n            y={parseFloat(text.box.axis_offset_top)+((parseFloat(text.box.top))/2)}\n        />\n      }\n\n      renderShapes(shape,obj)\n      {\n       \n        if(obj===null)\n        {\n            console.log(shape)\n            obj={ \"zIndex\": \"0\",\n            \"objectNumber\": \"0\",\n            \"x1\": \"0\",\n            \"y1\": \"0\",\n            \"x2\": \"0\",\n            \"y2\": \"0\",\n            \"objectId\": \"\"}\n        }\n            switch(shape.type)\n            {\n                case \"Rectangle\":\n                   return <Rect\n                    key={shape.object.object_id+Math.random()+\"_\"+obj.id}\n                    id={shape.object.object_id+Math.random()+\"_\"+obj.id}\n                    x={this.getXPoint(shape)+parseFloat(obj.x1)}\n                    y={this.getYPoint(shape)+parseFloat(obj.y1)}\n                    width={parseFloat(shape.rectangle.x2)}\n                    height={parseFloat(shape.rectangle.y2)}\n                    fill={shape.fill.fill}\n                    strokeWidth={parseFloat(shape.line.line_width)}\n                    shadowBlur={10}\n                    zIndex={parseFloat(shape.box.z_index)}\n                    fillLinearGradientStartPointX={this.getXPoint(shape)+parseFloat(obj.x1)}\n                    fillLinearGradientStartPointY={this.getYPoint(shape)+parseFloat(obj.y1)}\n                    fillLinearGradientColorStops={1,shape.gradient===undefined?\"nofill\":shape.gradient.gradient_color}\n                    cornerRadius= {parseFloat(shape.rectangle.corner_radius)}\n                    />\n                    \n\n\n                    break;\n\n                    case \"Ellipse\":\n                      return  <Ellipse\n                        key={shape.object.object_id+\"_Ellipse_\"+obj.key}\n                        id={shape.object.object_id+\"_\"+shape.ellipse.x2+\"c\"+obj.key}\n                        x={this.getXPoint(shape)+parseFloat(obj.x1)}\n                        y={this.getYPoint(shape)+parseFloat(obj.y1)}\n                        width={parseFloat(shape.ellipse.x2)}\n                        height={parseFloat(shape.ellipse.y2)}\n                        fill={shape.fill.fill}\n                        shadowBlur={10}\n                        strokeWidth={parseFloat(shape.line.line_width)}\n                        zIndex={parseFloat(shape.box.z_index)}\n                        //fillLinearGradientStartPointX={this.getXPoint(shape)+parseFloat(obj.x1)}\n                        //fillLinearGradientStartPointY={this.getYPoint(shape)+parseFloat(obj.y1)}\n                       // fillLinearGradientColorStops={1,shape.gradient===undefined?\"nofill\":shape.gradient.gradient_color}\n                        />\n                        break;\n\n                        case \"Polygon\":\n                       \n                        return    <Line key={\"Polygon_\"+obj.key}\n                    points={this.getPloyPoints(shape,obj.x1,obj.y1)} \n                    fill={shape.fill==undefined?\"nofill\":shape.fill.fill}\n                    stroke={shape.line.color}\n                    strokeWidth={shape.line.line_width}\n                    closed={parseInt(shape.polyline.closed)}\n                    // fillLinearGradientStartPointX={this.getXPoint(shape)+parseFloat(obj.x1)}\n                    // fillLinearGradientStartPointY={this.getYPoint(shape)+parseFloat(obj.y1)}\n                    // fillLinearGradientColorStops={1,shape.gradient===undefined?\"nofill\":shape.gradient.gradient_color}\n                    ></Line>\n\n\n                    case \"Pipe\":\n                       \n                        return    <Line id={\"Pipe_\"+Math.random()}\n                    points={this.getPloyPoints(shape,obj.x1,obj.y1)} \n                    fill={shape.fill==undefined?\"nofill\":shape.fill.fill}\n                    stroke={shape.line.color}\n                    strokeWidth={shape.line.line_width}\n                    draggable={true}\n                    closed={false}\n                    // fillLinearGradientStartPointX={this.getXPoint(shape)+parseFloat(obj.x1)}\n                    // fillLinearGradientStartPointY={this.getYPoint(shape)+parseFloat(obj.y1)}\n                    fillLinearGradientColorStops={1,shape.gradient===undefined?\"nofill\":shape.gradient.gradient_color}\n                    ></Line>\n\n                    case \"Line\":\n                       \n                        return    <Line id={\"Line_\"+Math.random()}\n                    points={this.getPloyPoints(shape,obj.x1,obj.y1)} \n                    fill={shape.fill==undefined?\"nofill\":shape.fill.fill}\n                    stroke={shape.line.color}\n                    strokeWidth={shape.line.line_width}\n                    draggable={true}\n                    ></Line>\n                    break;\n\n                    case \"text\":\n                        return <Text text=\"hello\" />\n                        break;\n\n            }\n      }\n\n    render() { \n\n        return(\n            <div id=\"stageContainer\">\n        <Stage id=\"konvaStage_11\" ref={this.myRef} width={1024} height={800}\n            containerId={\"stageContainer\"}>\n            <Layer>\n               \n                {ShapesData.hmipage.shapes.map((obj,i) => ( \n                    \n                     this.renderShapes(obj,null)   \n                  \n                ))\n                }\n                {\n                    ShapesData.hmipage.labels.map((obj,i) => ( \n                    \n                        this.renderLables(obj,null)  \n                 \n               ))  \n                }\n\n              \n            \n                {ShapesData.hmipage.component_instances.map((obj,i) => ( \n                 <Group\n                 id={obj.objectNumber}\n                key={obj+\"_Group_\"+i}\n                x={0}\n                x={0}\n                width={parseFloat(obj.x2)}\n                height={parseFloat(obj.y2)}\n                zIndex={i}\n                fill={\"#00D2FF\"} \n                draggable={true}\n                >\n                    {\n                        obj.shape.sort((a, b) => parseInt(a.z_index) > parseInt(b.z_index) ? 1 : -1).map((shape)=>(\n                                this.renderShapes(shape,obj)\n                        ))\n                    }\n                    </Group>\n                ))\n                }\n            </Layer>\n      </Stage>  \n      </div>\n        )\n    }\n}\n \n\n\n\n","F:\\Konvo Model\\src\\components\\ShapsKonva.jsx",["231","232","233","234","235","236","237","238","239","240","241"],"import React, { Component } from 'react'\nimport ReactDOM from \"react-dom\";\nimport { render } from 'react-dom';\nimport { Stage, Shape,Layer, Rect,Ellipse, Text, Circle, Line,Group,Arc } from 'react-konva';\nimport ShapesData from \"../data/shapesData\"\n\nexport default class ShapesKonva extends  Component{\n    constructor(props) {\n      super(props);\n      this.state = {};\n    }\n\n    render() { \n        let rectOjects = {};\n        let eleObjects = {};\n        //console.log(ShapesData.hmipage.component_instances.map); \n        return ( \n            <Stage width={parseFloat(ShapesData.hmipage.width)} height={parseFloat(ShapesData.hmipage.height)}>\n            <Layer>\n            \n                {/* <Line\n                stroke=\"red\"\n                strokeWidth={10}\n                lineJoin= 'round'\n                points= {\n                    [272,239,362,238,364,302,366,451]\n                }\n                fill=\"red\"\n                >\n                </Line> */}\n\n\n            {ShapesData.hmipage.component_instances.map((obj,i) => ( \n\n                  <Group\n                  key={obj+\"_Group_\"+i}\n                  x={parseFloat(obj.x1)}\n                  x={parseFloat(obj.y1)}\n                  width={parseFloat(obj.x2)}\n                  height={parseFloat(obj.y2)}\n                  z_index={i}\n                  draggable={true}\n                  >\n                {/* {obj.shape.filter(x=>x.type===\"Rectangle\").map((gio)=>(\n                <Rect\n                id={gio.object.object_id+i}\n                x={parseFloat(gio.rectangle.x1)+parseFloat(obj.x1)}\n                y={parseFloat(gio.rectangle.y1)+parseFloat(obj.y1)}\n                width={parseFloat(gio.rectangle.x2)}\n                height={parseFloat(gio.rectangle.y2)}\n                fill={gio.fill.fill}\n                strokeWidth={parseFloat(gio.line.line_width)}\n                stroke={gio.line.color}\n                shadowBlur={10}\n                draggable={true}\n                offset={20,6}\n              \n          \n\n          zindex={parseFloat(gio.box.z_index)}\n      \n              />\n\n\n              \n                ))} */}\n                  {obj.shape.filter(x=>x.type===\"Ellipse\").map((gio,j)=>(\n                <Ellipse\n                key={gio.object.object_id+\"_Ellipse_\"+j}\n                id={gio.object.object_id+\"_\"+gio.ellipse.x2+\"c\"+j}\n                x={parseFloat(gio.ellipse.x1)+parseFloat(obj.x1)}\n                y={parseFloat(gio.ellipse.y1)+parseFloat(obj.y1)}\n                width={parseFloat(gio.ellipse.x2)}\n                height={parseFloat(gio.ellipse.y2)}\n                fill={gio.fill.fill}\n                shadowBlur={10}\n                strokeWidth={parseFloat(gio.line.line_width)}\n                zindex={parseFloat(gio.box.z_index)}\n                offsetX={parseFloat(gio.box.axis_offset_left)}  //*-1-parseFloat(gio.box.left)+parseFloat(gio.box.right)-parseFloat(gio.box.axis_offset_right)}\n                offsety={parseFloat(gio.box.axis_offset_top)}\n              />\n                )\n                )\n                }\n\n{obj.shape.filter(x=>x.type===\"Polygon\").map((gio,p)=>(\n                  <Shape\n                  key={gio.object.object_id+\"_Shape\"+p}\n                  stroke=\"red\"\n                  strokeWidth={10}\n                  lineJoin= 'round'\n                  points={\n                    gio.polyline.points.map((pt)=> ((parseFloat(pt.x)+parseFloat(obj.x1)),(parseFloat(pt.y)+parseFloat(obj.y1))))\n                  } \n                                   \n                  fill=\"red\"\n                  >\n                  </Shape>\n                ))}\n                </Group>\n            ))}\n\n            </Layer>\n          </Stage>\n         );\n    }\n}\n \n\n\n\n","F:\\Konvo Model\\src\\components\\FileUpload.jsx",["242","243","244","245","246"],"import React, { Component } from \"react\";\nimport ShapesData from \"../data/shapesData\";\nimport { ShapeComponets, LableComponets } from \"./APIUtil\";\n\nclass FileUpload extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.App = React.createRef();\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    console.log(event);\n    const file = this.App.files[0];\n    const reader = new FileReader();\n    reader.readAsText(file);\n    reader.onloadend = (evt) => {\n      const readerData = evt.target.result;\n      const parser = new DOMParser();\n      const xml = parser.parseFromString(readerData, \"text/xml\");\n      this.ShapesData = this.xmlToJson(xml.documentElement);\n      console.log(this.ShapesData);\n    };\n  }\n\n  xmlToJson(xml) {\n    // Create the return object\n    var obj = {};\n\n    if (xml.nodeType == 1) {\n      // element\n      // do attributes\n      if (xml.attributes.length > 0) {\n        obj[\"\"] = {};\n        for (var j = 0; j < xml.attributes.length; j++) {\n          var attribute = xml.attributes.item(j);\n          obj[attribute.nodeName] = attribute.nodeValue;\n        }\n      }\n    } else if (xml.nodeType == 3) {\n      // text\n      obj = xml.nodeValue;\n    }\n\n    // do children\n    if (xml.hasChildNodes()) {\n      for (var i = 0; i < xml.childNodes.length; i++) {\n        var item = xml.childNodes.item(i);\n        var nodeName = item.nodeName;\n        if (typeof obj[nodeName] == \"undefined\") {\n          obj[nodeName] = this.xmlToJson(item);\n        } else {\n          if (typeof obj[nodeName].push == \"undefined\") {\n            var old = obj[nodeName];\n            obj[nodeName] = [];\n            obj[nodeName].push(old);\n          }\n          obj[nodeName].push(this.xmlToJson(item));\n        }\n      }\n    }\n    return obj;\n  }\n  render() {\n    return (\n      <div\n        className=\"App\"\n        width={200}\n        height={300}\n        style={{ width: \"800px\", margin: \"auto\" }}\n      >\n        <p className=\"App-intro\">\n          Please Upload your XML file at the button below\n        </p>\n        <form onSubmit={(e) => this.handleSubmit(e)}>\n          <label>\n            Upload file:\n            <input\n              type=\"file\"\n              ref={(input) => {\n                this.App = input;\n              }}\n            />\n          </label>\n          <br />\n          <button type=\"submit\">Submit</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default FileUpload;\n","F:\\Konvo Model\\src\\components\\UNCDynamicText.jsx",["247","248","249","250","251","252","253","254","255","256","257","258","259"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Stage,\n  Polyline,\n  Shape,\n  Layer,\n  Rect,\n  Ellipse,\n  Text,\n  Circle,\n  Line,\n  Group,\n  Arc,\n  Image\n} from \"react-konva\";\n\nconst UNCDynamicText = (shapeElement) => {\n  const { shape, parentX, parentY } = shapeElement;\n\n  //console.log(shapeElement)\n  //   const [hasError, setErrors] = useState(false); \n  //   const [tagValues, setTagValues] = useState({});\n\n  //   useEffect(() => {\n  //     async function fetchData() {\n  //       const res = await fetch(\"http://worldclockapi.com/api/json/est/now\");\n  //       res\n  //         .json()\n  //         .then(res => setTagValues(res))\n  //         .catch(err => setErrors(err));\n  //     }\n\n  //     fetchData();\n  //   });\n\n\n  //   if(obj===null)\n  //   {\n  //       //console.log(text)\n  //       obj={ \"zIndex\": \"0\",\n  //       \"objectNumber\": \"0\",\n  //       \"x1\": \"0\",\n  //       \"y1\": \"0\",\n  //       \"x2\": \"0\",\n  //       \"y2\": \"0\",\n  //       \"objectId\": \"\"}\n  //   }\n  //   else  {\n  //     // //console.log(\"obj is not null\")\n  //   }\n\n  //console.log(shape.static_text)\n\n  return (\n    <Text\n      fontFamily={shape.font_family}\n\n      fontSize={shape.font_size}\n\n      fill={\"black\"}\n      // text={JSON.stringify(tagValues['currentFileTime'])}\n\n      text={shape.static_text}\n\n\n      x={parseFloat(parentX) + parseFloat(shape.box.axis_anchor) + parseFloat(shape.box.axis_offset_left) + ((parseFloat(shape.box.left)) / 2)}\n      y={parseFloat(parentY) + parseFloat(shape.box.axis_anchor) + parseFloat(shape.box.axis_offset_top) + ((parseFloat(shape.box.top)) / 2)}\n    />\n  );\n};\n\n\n\nexport default UNCDynamicText\n\n","F:\\Konvo Model\\src\\components\\UNCText.jsx",["260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355"],"import { Text } from \"react-konva\";\nimport { getPloyPoints } from \"./JSONUtil.js\";\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { getTagValueApi,androidToRgba ,hextoRGBA,intervalUpdate } from './Utils';\n\n\nconst UNCText = (shapeProps) => {\n  //visible\n  const [hide, setHidden] = useState(true);\n  //text\n  const [display_value, setDisplayValue] = useState(0);\n  \n  // const [display_on_off_text, setOnOffText] = useState('');\n  // const [display_numeric, setDisplayNumericValue] = useState({});\n  // const [display_array, setDisplayArray] = useState();\n\n  const { text, parentX, parentY } = shapeProps;\n\n  var value = \" \";\n\n  value = text.static_text.toString()\n  value = value.replace(/&amp;/g, '')\n  value = value.replace(/#xa;/g, '')\n  value = value.replace(/&/g, '')\n  value = value.replace(/#x9;/g, '')\n  value = value.replace(/  /g, '')\n\n  useEffect(() => {\n    const  interval = setInterval(() => {\n       dynamciAssociation();\n     }, intervalUpdate);\n     return ()=>{\n      window.clearInterval(interval)\n    }\n   });\n \n\n   function dynamciAssociation() {\n     // //Display------------------------------------\n     //Display Numeric-----------------------------------------------------------------------------------------------------------\n     if (text.display_numeric !== undefined) {\n       value = text.display_numeric.expression.__cdata;\n       if (value) {\n         //Removing DataTypes ---Float,\n         value = value.replace(\"static\", \"\");\n         value = value.replace(\"int\", \"\");\n         value = value.replace(\"float\", \"\");\n         value = value.replace(\"double\", \"\");\n         value = value.replace(\"bool\", \"\");\n         value = value.replace(\"boolean\", \"\");\n         value = value.replace(/\\r\\n|\\n|\\r/gm, \"$\");\n         value = value + \"$;\";\n         axios({\n           method: 'post',\n           url: getTagValueApi,\n           data: {\n             InputScript: value, // This is the body part\n           }\n         }).then((res) => {\n           // console.log(res)\n           if (res.data.error == \"false\") {\n             //      var names = {};\n             //    names = display_numeric;\n             //    //console.log(names);\n             //  names[value] =res.data;\n             setDisplayValue(res.data.data);\n           }\n         });\n       } else {\n         value = text.static_text.toString()\n         value = value.replace(/&amp;/g, '')\n         value = value.replace(/#xa;/g, '')\n         value = value.replace(/&/g, '')\n         value = value.replace(/#x9;/g, '')\n         value = value.replace(/  /g, '')\n       }\n     }\n \n     //Display_on_off-------------------------------------------------------------------------------------------------------\n     if (text.display_on_off !== undefined) {\n       value = text.display_on_off.__cdata;\n       if (value) {\n         //Removing DataTypes ---Float,\n         value = value.replace(\"static\", \"\");\n         value = value.replace(\"int\", \"\");\n         value = value.replace(\"float\", \"\");\n         value = value.replace(\"double\", \"\");\n         value = value.replace(\"bool\", \"\");\n         value = value.replace(\"boolean\", \"\");\n \n         value = value.replace(/\\r\\n|\\n|\\r/gm, \"$\");\n \n         value = value + \"$;\";\n         //console.log(value)\n         axios({\n           method: 'post',\n           url: getTagValueApi,\n           headers: {},\n           data: {\n             InputScript: value, // This is the body part\n           }\n         }).then((res) => {\n           if (res.data.error == \"false\") {\n             if (res.data.data == \"True\") {\n               \n               setDisplayValue(text.display_on_off.text_on);\n             } else if (res.data.data == \"False\") {\n               setDisplayValue(text.display_on_off.text_off);\n             }\n           }\n         });\n       } else {\n         value = text.static_text.toString()\n         value = value.replace(/&amp;/g, '')\n         value = value.replace(/#xa;/g, '')\n         value = value.replace(/&/g, '')\n         value = value.replace(/#x9;/g, '')\n         value = value.replace(/  /g, '')\n       }\n     }\n \n \n     //Display_array-----------------------------------------------------------------------------------------------------------\n     if (text.display_array !== undefined) {\n       var value = text.display_array?.index_expression?.__cdata;\n       var arrayData = text.display_array?.array_text?.__cdata;\n       if (value) {\n         value = value.replace(\"static\", \"\");\n         value = value.replace(\"int\", \"\");\n         value = value.replace(\"float\", \"\");\n         value = value.replace(\"double\", \"\");\n         value = value.replace(\"bool\", \"\");\n         value = value.replace(\"boolean\", \"\");\n         value = value.replace(/\\r\\n|\\n|\\r/gm, \"$\");\n         value = value + \"$;\";\n \n         axios({\n           method: 'post',\n           url: getTagValueApi,\n           data: {\n             InputScript: value, // This is the body part\n           }\n         }).then((res) => {\n           //    console.log(res)\n           if (res.data.data !== \"\") {\n             arrayData.map((singleDataPoint, i) => {\n               // console.log(singleDataPoint)\n               if (i == parseInt(res.data.data)) {\n                 setDisplayValue(singleDataPoint)\n               }\n             });\n           }\n         })\n       } else {\n         value = text.static_text.toString()\n         value = value.replace(/&amp;/g, '')\n         value = value.replace(/#xa;/g, '')\n         value = value.replace(/&/g, '')\n         value = value.replace(/#x9;/g, '')\n         value = value.replace(/  /g, '')\n       }\n     }\n \n \n     //MultiState-------------------------------------------------------------------------------------------------\n     if (text.display_multi_state !== undefined) {\n       var conditions = text.display_multi_state?.conditions?.__cdata;\n       var stateText = text.display_multi_state?.state_text?.__cdata;\n       // console.log(\"Multi State Data----------\")\n       // console.log(stateText);\n       var body1 = conditions[0];\n       body1 = body1.replace(\"static\", \"\");\n       body1 = body1.replace(\"int\", \"\");\n       body1 = body1.replace(\"float\", \"\");\n       body1 = body1.replace(\"double\", \"\");\n       body1 = body1.replace(\"bool\", \"\");\n       body1 = body1.replace(\"boolean\", \"\");\n       body1 = body1.replace(/\\r\\n|\\n|\\r/gm, \"$\");\n       body1 = body1 + \"$;\";\n       var body2 = conditions[1];\n       body2 = body2.replace(\"static\", \"\");\n       body2 = body2.replace(\"int\", \"\");\n       body2 = body2.replace(\"float\", \"\");\n       body2 = body2.replace(\"double\", \"\");\n       body2 = body2.replace(\"bool\", \"\");\n       body2 = body2.replace(\"boolean\", \"\");\n       body2 = body2.replace(/\\r\\n|\\n|\\r/gm, \"$\");\n       body2 = body2 + \"$;\";\n       if (conditions !== null) {\n         //Condition A\n         axios({\n           method: 'post',\n           url: getTagValueApi,\n           headers: {},\n           data: {\n             InputScript: body1, // This is the body part\n           }\n         }).then((condition1Responce) => {\n           //Condition B\n \n           axios({\n             method: 'post',\n             url: getTagValueApi,\n             headers: {},\n             data: {\n               InputScript: body2, // This is the body part\n             }\n           }).then((condition2Responce) => {\n \n             if (condition1Responce.data.error == \"false\" && condition2Responce.data.error == \"false\") {\n \n               //0-0\n               if (condition1Responce.data.data == \"False\" && condition2Responce.data.data == \"False\") {\n \n                 setDisplayValue(stateText[0])\n               }//0-1\n               else if (condition1Responce.data.data == \"False\" && condition2Responce.data.data == \"True\") {\n \n                 setDisplayValue(stateText[1])\n               }//1-0\n               else if (condition1Responce.data.data == \"True\" && condition2Responce.data.data == \"False\") {\n \n                 setDisplayValue(stateText[2])\n               }//1-1\n               else if (condition1Responce.data.data == \"True\" && condition2Responce.data.data == \"True\") {\n \n                 setDisplayValue(stateText[3])\n               }\n             }\n           })\n         })\n         //   mutiState()\n       } else {\n         value = text.static_text.toString()\n         value = value.replace(/&amp;/g, '')\n         value = value.replace(/#xa;/g, '')\n         value = value.replace(/&/g, '')\n         value = value.replace(/#x9;/g, '')\n         value = value.replace(/  /g, '')\n       }\n     }\n \n     //Visibility------------------------------------\n     //Hiddden_When-------------------------------------------------------------------------------------------------------------\n     if (text.object.security !== undefined) {\n       var value = text.object.security?.hidden_when?.__cdata;\n       //Removing DataTypes ---Float,\n       value = value.replace(\"static\", \"\");\n       value = value.replace(\"int\", \"\");\n       value = value.replace(\"float\", \"\");\n       value = value.replace(\"double\", \"\");\n       value = value.replace(\"bool\", \"\");\n       value = value.replace(\"boolean\", \"\");\n       value = value.replace(/\\r\\n|\\n|\\r/gm, \"$\");\n       value = value + \"$;\";\n       // console.log(value)\n       if (value) {\n         axios({\n           method: 'post',\n           url: getTagValueApi,\n           headers: {},\n           data: {\n             InputScript: value, // This is the body part\n           }\n         }).then((res) => {\n           //    console.log(res)\n           if (res.data.error === \"false\") {\n             if (res.data.data == \"True\") {\n               setHidden(true);\n             } else if (res.data.data == \"False\") {\n               setHidden(false);\n             }\n           }\n         })\n       } else {\n         value = text.static_text.toString()\n         value = value.replace(/&amp;/g, '')\n         value = value.replace(/#xa;/g, '')\n         value = value.replace(/&/g, '')\n         value = value.replace(/#x9;/g, '')\n         value = value.replace(/  /g, '')\n       }\n     }\n  \n   }\n \n \n  if (text.display_numeric == undefined &&\n    text.display_on_off == undefined &&\n    text.display_array == undefined  && text.display_multi_state == undefined) {\n\n    value = text.static_text.toString()\n    value = value.replace(/&amp;/g, '')\n    value = value.replace(/#xa;/g, '')\n    value = value.replace(/&/g, '')\n    value = value.replace(/#x9;/g, '')\n    value = value.replace(/  /g, '')\n  }\n\n\n  return <Text fontFamily={text.font_family}\n  align={\"center\"}\n\n    fontSize={text.font_size}\n    fill={hextoRGBA(text.color)}\n    visible={text.object.security !== undefined ? hide : true}\n  //  text={\"Normal Text\"}\n    // text={text.display_numeric !== undefined ? text.display_numeric.expression.__cdata ? display_numeric[value] : value :\n    //   text.display_on_off !== undefined ? text.display_on_off?.__cdata ? display_on_off_text : value : text.display_array !== undefined ? value :\n    //     value}\n    text={text.display_numeric == undefined &&\n      text.display_on_off == undefined &&\n      text.display_array == undefined && text.display_multi_state == undefined\n      ? value : display_value}\n    x={parseFloat(parentX) +parseFloat(text.box.axis_anchor) + parseFloat(text.box.axis_offset_left) + ((parseFloat(text.box.left)) / 2)}\n    y={parseFloat(parentY) +5 +parseFloat(text.box.axis_anchor) + parseFloat(text.box.axis_offset_top) + ((parseFloat(text.box.top)) / 2)}\n    \n    />\n}\n\n\n\nexport default UNCText;\n","F:\\Konvo Model\\src\\components\\CanvasUtils.js",["356","357","358","359","360","361","362","363","364","365","366","367"],"import { parse } from \"fast-xml-parser\";\n\n//X Position for Rectangle and Ellipse--------------------------\nexport const getRectPointX = (shape, parentX) => {\n  parentX = parentX === undefined ? 0 : parentX;\n  switch (shape.type) {\n    case \"Rectangle\":\n      // console.log(parentX);\n      return (\n        parseFloat(shape.rectangle.x1) +\n        parseFloat(shape.box.axis_offset_left) +\n        parseFloat(parentX)\n      );\n    case \"Ellipse\":\n      return (\n        parseFloat(parentX) + parseFloat(shape.ellipse.x1) +\n         parseFloat(shape.box.axis_offset_left) + \n         (parseFloat(shape.box.left) + parseFloat(shape.box.right)) / 2\n      );\n  }\n};\n\n\n//Y Position for Rectangle and Ellipse------------------------\nexport const getRectPointY = (shape, parentY) => {\n  parentY = parentY === undefined ? 0 : parentY;\n  //console.log(shape.type);\n  switch (shape.type) {\n    case \"Rectangle\":\n      return (\n        parseFloat(parentY) +\n        parseFloat(shape.rectangle.y1) +\n        parseFloat(shape.box.axis_offset_top)\n      );\n    case \"Ellipse\":\n      return (\n        parseFloat(parentY) +\n        parseFloat(shape.ellipse.y1) +\n        parseFloat(shape.box.axis_offset_top) +\n        (parseFloat(shape.box.top) + parseFloat(shape.box.bottom)) / 2\n      );\n  }\n};\n\n\n//Line Related [X,Y]Points-------------------------------------------------------\n//Pipe Points--------------------------------------------\nexport const getPipePoints = (shape, parentX, parentY) => {\n\n  parentY = parentY === undefined ? 0 : parentY;\n  parentX = parentX === undefined ? 0 : parentX;\n  var ptx = [];\n\n  if (Array.isArray(shape.pipe.points)) {\n    ptx = shape.pipe.points.map((o) => ({\n      x: parseFloat(o.x),\n      y: parseFloat(o.y)\n    }));\n  } else {\n    if(Array.isArray(shape.pipe.points.point)){\n\n    ptx = shape.pipe.points.point.map((g) => ({\n      x: parseFloat(g.x),\n      y: parseFloat(g.y),\n    }));\n  }else{\n    console.log(\"entered Else\")\n    console.log(shape.pipe.points.point)\n    ptx = ({\n      x: parseFloat(shape.pipe.points.point.x),\n      y: parseFloat(shape.pipe.points.point.y),\n    });\n  }\n  }\n  var data = [];\n  //console.log(ptx)\n  //If pipe has multiple Points\n  if(Array.isArray(ptx)){\n  ptx.map((point) => {\n\n    //if the object is Not from Component_Instance \n    if (parentX == 0 && parentY == 0) {\n    //push x\n    data.push(point.x + parseFloat(shape.box.axis_offset_left))\n    //push y\n    data.push(point.y + parseFloat(shape.box.axis_offset_top))\n\n    }  //if the object is Not from Component_Instance \n    else {\n\n  //push x\n      data.push(point.x + parseFloat(shape.box.left) / 2 + parseFloat(parentX ?? \"0\") + parseFloat(shape.box.axis_offset_left))\n      //push y\n      data.push(point.y + parseFloat(shape.box.top) / 2 + parseFloat(parentY ?? \"0\") + parseFloat(shape.box.axis_offset_top))\n    }\n\n  });\n}\n  return data;\n}\n\n\n\n\n//Polygon-----------------------------------------------------\nexport const getPolygonPoints = (shape, parentX, parentY) => {\n\n  var ptx = [];\n\n  if (Array.isArray(shape.polyline.points)) {\n    ptx = shape.polyline.points.map((o) => ({\n      x: parseFloat(o.x),\n      y: parseFloat(o.y),\n    }));\n  } else {\n    if(Array.isArray(shape.polyline.points.point)){\n      ptx = shape.polyline.points.point.map((g) => {\n        return ({\n          x: parseFloat(g.x),\n          y: parseFloat(g.y),\n        });\n      })\n    }\n  }\n\n  \n  var data = [];\n\n  ptx.map((point) => {\n\n    //if the object is Not from Component_Instance \n    if (parentX == 0 && parentY == 0) {\n      //push x\n      data.push(point.x + parseFloat(shape.box.axis_offset_left))\n      //push y\n      data.push(point.y + parseFloat(shape.box.axis_offset_top))\n\n    }\n    //if the object is Not from Component_Instance \n    else {\n      //push x\n      data.push(point.x + parseFloat(shape.box.left) / 2 + parseFloat(parentX ?? \"0\") + parseFloat(shape.box.axis_offset_left))\n      //push y\n      data.push(point.y + parseFloat(shape.box.top) / 2 + parseFloat(parentY ?? \"0\") + parseFloat(shape.box.axis_offset_top))\n    }\n  });\n  return data;\n}\n\n\n\n\n//Line Points-------------------------------------------------\nexport const getLinePoints = (shape, parentX, parentY) => {\n\n  var ptx = [];\n  //starting Point{x:,y:}\n  ptx.push({ x: shape.box.left, y: shape.box.top });\n  //Ending Point{x:,y:}\n  ptx.push({ x: shape.box.right, y: shape.box.bottom });\n\n  let ptArray = [];\n  ptx.map((element) => {\n    //If the Object is NotFrom Component Instance \n    if (parentX == 0 && parentY == 0) {\n      //XPush\n      ptArray.push(\n        parseFloat(element.x) +\n        parseFloat(shape.box.axis_offset_left)\n      );\n      //YPush\n      ptArray.push(\n        parseFloat(element.y) +\n        parseFloat(shape.box.axis_offset_top)\n      );\n    }  //If the Object is From Component Instance \n    else {\n      //XPush\n      ptArray.push(\n        parseFloat(element.x) +\n        parseFloat(shape.box.axis_offset_left) + parseFloat(parentX ?? \"0\")\n      );\n      //YPush\n      ptArray.push(\n        parseFloat(element.y) +\n        parseFloat(shape.box.axis_offset_top) + parseFloat(parentY ?? \"0\")\n      );\n\n    }\n  })\n\n\n  return ptArray;\n};\n","F:\\Konvo Model\\src\\components\\JSONUtil.js",["368","369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385","386","387","388","389","390","391","392","393","394","395","396","397","398","399","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415"],"import { xyz } from \"color-convert\";\nimport { groupSort } from \"d3\";\nimport { image } from \"d3-fetch\";\n\nexport function ShapeObjects(shapesData) {\n\n  const { project } = shapesData;\n  //console.log(shapesData)\n  if (project !== undefined) {\n    shapesData = project;\n    console.log(project)\n  }\n  //console.log(project)\n  // const hmipage =\n  //   shapesData.hmipage === undefined ? shapesData : shapesData.hmipage;\n\n  var hmipage = [];\n\n  if (shapesData.hmipage != undefined) {\n    hmipage = shapesData.hmipage\n  }\n  else if (shapesData.hmipagetemplate != undefined) {\n    hmipage = shapesData.hmipagetemplate\n  } else if (shapesData.component != undefined) {\n    hmipage = shapesData.hmipagetemplate\n  }\n  else {\n    hmipage = shapesData;\n  }\n\n  console.log(hmipage)\n  const { shapes, component_instances, labels, images, groups } = hmipage; // Destructuring\n  // //console.log(component_instances);\n\n  let emptyCompObj = {\n    uuid: \"{4c64b6e1-bb25-442a-abf7-6fa6c5694ff5}\",\n    zIndex: \"0\",\n    objectNumber: \"0\",\n    x1: \"0\",\n    y1: \"0\",\n    x2: \"0\",\n    y2: \"0\",\n    objectId: \"\",\n    shape: [],\n    description: [],\n  };\n\n  let shapeComponetsList = [];\n\n\n  //------ Shapes--------------------------------------------------------------------------------------------\n  //console.log(shapes)\n  if (shapes !== undefined) {\n    if (Array.isArray(shapes)) {\n\n      shapes.map((obj, i) =>\n        //console.log(obj),\n        emptyCompObj.shape.push(obj));\n      emptyCompObj.shape.sort((a, b) =>\n        parseInt(a.box.z_index) > parseInt(b.box.z_index) ? 1 : -1\n      );\n      shapeComponetsList.push(emptyCompObj);\n      console.log(shapeComponetsList)\n    } else if (shapes.shape !== undefined) {\n      if (Array.isArray(shapes.shape)) {\n        shapes.shape.map((obj, i) => emptyCompObj.shape.push(obj));\n        emptyCompObj.shape.sort((a, b) =>\n          parseInt(a.box.z_index) > parseInt(b.box.z_index) ? 1 : -1\n        );\n        shapeComponetsList.push(emptyCompObj);\n        console.log(shapeComponetsList)\n      }\n      else {\n        emptyCompObj.shape.push(shapes.shape);\n        shapeComponetsList.push(emptyCompObj);\n        console.log(shapeComponetsList)\n      }\n      // //console.log(\"empty obj \");\n    }\n    // //console.log(\"After Adding Shapes--???????????????????????????\")\n    // //console.log(shapeComponetsList)\n  }\n\n\n\n\n  //    //groups------------------------------------------------------------------------------------------------------------\n  //    if (groups !== undefined) {\n\n  //     // //console.log(\"Images Dtaa---????????????????????????????\")\n  //     // //console.log(groups);\n  //     // shapeComponetsList.push(groups);\n\n  //    // if we have only groups\n  //   if (Array.isArray(groups)) {\n  //     groups.map((obj, i) => emptyCompObj.shape.push(obj)\n  //     );\n  //     // emptyCompObj.shape.sort((a, b) =>\n  //     //   parseInt(a.box.z_index) > parseInt(b.box.z_index) ? 1 : -1\n  //     // );\n  //     shapeComponetsList.push(emptyCompObj);\n\n  //   } else if (groups.group !== undefined) {\n  //     if(Array.isArray(groups.group)){\n  //       groups.group.map((obj, i) => emptyCompObj.shape.push(obj));\n  //       // emptyCompObj.shape.sort((a, b) =>\n  //       //   parseInt(a.box.z_index) > parseInt(b.box.z_index) ? 1 : -1\n  //       // );\n  //       shapeComponetsList.push(emptyCompObj);\n  //     }\n  //     else{\n  //       emptyCompObj.shape.push(groups.group);\n  //       shapeComponetsList.push(emptyCompObj);\n  //     }\n  //     //console.log(\"empty obj \");\n  //   }else if (groups.group.grup !== undefined) {\n  //     if(Array.isArray(groups.group.group)){\n  //       groups.group.group.map((obj, i) => emptyCompObj.shape.push(obj));\n  //       // emptyCompObj.shape.sort((a, b) =>\n  //       //   parseInt(a.box.z_index) > parseInt(b.box.z_index) ? 1 : -1\n  //       // );\n  //       shapeComponetsList.push(emptyCompObj);\n  //     }\n  //     else{\n  //       emptyCompObj.shape.push(groups.group.group);\n  //       shapeComponetsList.push(emptyCompObj);\n  //     }\n  //     //console.log(\"empty obj \");\n  //   }\n  //   //console.log(\"After Groups Dtaa---????????????????????????????\")\n  //   //console.log(shapeComponetsList);\n  // }\n\n\n\n  //--------component instances-----------------------------------------------------------------------------------------------------\n  if (component_instances !== undefined) {\n    // console.log(\"Group\")\n    renderComponentInstances(component_instances)\n  }\n\n  //Render ComponentInstances Function-------------------\n  function renderComponentInstances(component_instances) {\n    if (Array.isArray(component_instances)) {\n      console.log(\"1\")\n      component_instances.map((obj, i) => {\n        if (obj.group === undefined) {\n          obj.shape.sort((a, b) =>\n            parseInt(a.box.z_index) > parseInt(b.box.z_index) ? 1 : -1\n          );\n\n          shapeComponetsList.push(obj);\n        } else {\n          obj.group.map((x) => {\n            x.shape.sort((a, b) =>\n              parseInt(a.box.z_index) > parseInt(b.box.z_index) ? 1 : -1\n            );\n            shapeComponetsList.push(x);\n          });\n        }\n      });\n    }\n    else if (Array.isArray(component_instances.componentInstance)) {\n      //  console.log(component_instances.componentInstance)\n\n      component_instances.componentInstance.sort((a, b) =>\n        parseInt(a.zIndex) > parseInt(b.zIndex) ? 1 : -1);\n\n      let tempAry = component_instances.componentInstance.map(obj => obj)\n      tempAry.map((x) => {\n\n        const { group, shape, text } = x;\n        //If we Have Component.Group-----------\n        if (group !== undefined) {\n          //Multiple Groups -------\n          if (Array.isArray(group)) {\n            group.sort((a, b) =>\n              parseInt(a.zIndex) > parseInt(b.zIndex) ? 1 : -1\n            );\n\n            group.map((obj) => {\n              //UncCanvas Groups will handle this\n              shapeComponetsList.push(obj);\n            })\n          } else {\n            //Groups.shapes---\n            if (group.shape != undefined) {\n              if (Array.isArray(group.shape)) {\n                group.shape.sort((a, b) =>\n                  parseInt(a.box.z_index) > parseInt(b.box.z_index) ? 1 : -1\n                );\n                shapeComponetsList.push(group);\n              } else {\n                shapeComponetsList.push(group);\n              }\n            }\n            //Groups--text-----------\n            if (group.text != undefined) {\n              if (Array.isArray(group.text)) {\n                group.text.sort((a, b) =>\n                  parseInt(a.box.z_index) > parseInt(b.box.z_index) ? 1 : -1\n                );\n              }\n              shapeComponetsList.push(group.text);\n            }\n          }\n\n        }\n\n        //If we Have Component.shape-----------\n        if (shape != undefined) {\n          if (Array.isArray(shape)) {\n            shape.sort((a, b) =>\n              parseInt(a.box.z_index) > parseInt(b.box.z_index) ? 1 : -1\n            );\n            shapeComponetsList.push(x);\n          } else {\n            shapeComponetsList.push(x);\n          }\n        }\n\n        //If we Have Component.text-----------\n        if (text != undefined) {\n          if (Array.isArray(text)) {\n\n            text.sort((a, b) =>\n              parseInt(a.box.z_index) > parseInt(b.box.z_index) ? 1 : -1\n            );\n          }\n          shapeComponetsList.push(x);\n        }\n      });\n    }\n    else if (component_instances.componentInstance !== undefined) {\n      console.log(\"3\")\n      //declaring group variable if we get composite instances have <Group> node under compositeInstance\n      const { group, shape, text } = component_instances.componentInstance;\n      //console.log(\"group in JSONUTILS\")\n      console.log(group)\n\n      //If we Have Component.Group-----------\n      if (group !== undefined) {\n        //Multiple Groups -------\n        if (Array.isArray(group)) {\n          group.sort((a, b) =>\n            parseInt(a.zIndex) > parseInt(b.zIndex) ? 1 : -1\n          );\n\n          group.map((obj) => {\n            //UncCanvas Groups will handle this\n            shapeComponetsList.push(obj);\n          })\n        }\n        //Single Group-----------\n        else {\n          //Groups.shapes---\n          if (group.shape != undefined) {\n            if (Array.isArray(group.shape)) {\n              group.shape.sort((a, b) =>\n                parseInt(a.box.z_index) > parseInt(b.box.z_index) ? 1 : -1\n              );\n              shapeComponetsList.push(group);\n            } else {\n              shapeComponetsList.push(group);\n            }\n          }\n          //Groups--text-----------\n          if (group.text != undefined) {\n            if (Array.isArray(group.text)) {\n              group.text.sort((a, b) =>\n                parseInt(a.box.z_index) > parseInt(b.box.z_index) ? 1 : -1\n              );\n            }\n            shapeComponetsList.push(group.text);\n          }\n        }\n      }\n\n      //If we Have Component.shape-----------\n      if (shape != undefined) {\n        if (Array.isArray(shape)) {\n          shape.sort((a, b) =>\n            parseInt(a.box.z_index) > parseInt(b.box.z_index) ? 1 : -1\n          );\n          shapeComponetsList.push(component_instances.componentInstance);\n        } else {\n          shapeComponetsList.push(component_instances.componentInstance);\n        }\n      }\n\n      //If we Have Component.text-----------\n      if (text != undefined) {\n        if (Array.isArray(text)) {\n\n          text.sort((a, b) =>\n            parseInt(a.box.z_index) > parseInt(b.box.z_index) ? 1 : -1\n          );\n        }\n        shapeComponetsList.push(component_instances.componentInstance);\n      }\n    }\n  }\n\n\n  //--------Group-----------------------------------------------------------------------------------------------------\n  if (groups !== undefined) {\n    // console.log(\"Group\")\n    rendergroup(groups)\n  }\n\n  //Rnder Group Function-------------\n  function rendergroup(value) {\n    var groups = value;\n    //If we have Mutiple Groups------ <Groups> ---------\n    if (Array.isArray(groups)) {\n      console.log(\"1\")\n      groups.map((obj, i) => {\n        //  //console.log(obj)\n        //If <Groups> has Mutiple Group------ <Groups> ---------\n        if (Array.isArray(obj.group)) {\n          obj.group.map((x) => {\n            x.shape.sort((a, b) =>\n              parseInt(a.box.z_index) > parseInt(b.box.z_index) ? 1 : -1\n            );\n            shapeComponetsList.push(x);\n          });\n\n        }  //If <Groups> has single Group------ <Groups> ---------\n        else {\n          //   obj.shape.sort((a, b) =>\n          //   parseInt(a.box.z_index) > parseInt(b.box.z_index) ? 1 : -1\n          // );\n          shapeComponetsList.push(obj);\n        }\n      });\n    }//if Groups has multiple group iniside  -----------------------------\n    else if (Array.isArray(groups.group)) {\n      console.log(\"2\")\n      //Group Level Z-Index Sorting-------\n      groups.group.sort((a, b) =>\n        parseInt(a.zIndex) > parseInt(b.zIndex) ? 1 : -1\n      );\n      let tempAry = groups.group.map(obj => obj)\n      tempAry.map((x) => {\n        \n     \n      //If groups has  Shapes -------------------------------------------------------------\n      if (x.shape !== undefined) {\n        //console.log(\"1.2\")\n        let singleshapearray = [];\n\n        if (Array.isArray(x.shape))\n        //if composite instance contains multple shapes \n        {\n          x.shape.map((obj, i) => singleshapearray.push(obj));\n          //sorting values based on z_index\n          singleshapearray.sort((a, b) =>\n            parseInt(a.box.z_index) > parseInt(b.box.z_index) ? 1 : -1\n          );\n  \n          shapeComponetsList.push(x);\n        } else {\n          console.log(\"Values\")\n          //if composite instance contains only one object \n          shapeComponetsList.push(x)\n        }\n      }\n      //If groups has group ----------------------------------------------------------\n      if (x.group !== undefined) {\n          console.log(\"1.1\")\n        if (Array.isArray(x.group)) {\n          x.group.sort((a, b) =>\n            parseInt(a.zIndex) > parseInt(b.zIndex) ? 1 : -1\n          );\n          x.group.map((groupObj) => {\n            shapeComponetsList.push(groupObj);\n          })\n        } else {\n        shapeComponetsList.push(x.group);\n        }\n      }\n          //if group has Text---------------------------------------------------------\n          if (x.text !== undefined) {\n            // console.log(\"text\")\n            // console.log(groups.group)\n            var { text } = x;\n            console.log(text);\n            if (Array.isArray(text)) {\n              console.log(\"1\")\n              text.sort((a, b) =>\n                parseInt(a.box.z_index) > parseInt(b.box.z_index) ? 1 : -1\n              );\n              shapeComponetsList.push(x)\n            } else {\n              console.log(\"2\")\n            shapeComponetsList.push(x.group)\n           //   console.log(shapeComponetsList)\n            }\n          }\n          \n          //If groups has Component Instance -----------------------------------------\n      if (x.componentInstance != undefined) {\n        //if Group has Multiple Component Instance---------------------\n        if (Array.isArray(x.componentInstance)) {\n          console.log(\"Array\")\n         // console.log(groups.group.componentInstance)\n          //Map-------------------------------------\n          x.componentInstance.map((ci, i) => {\n            var { group, shape, text } = ci;\n            //group\n            if (group != undefined) {\n              if (Array.isArray(group)) {\n                group.sort((a, b) =>\n                  parseInt(a.zIndex) > parseInt(b.zIndex) ? 1 : -1\n                );\n                group.map((groupObj) => {\n                  shapeComponetsList.push(groupObj);\n                })\n              } else {\n                shapeComponetsList.push(group);\n              }\n            }\n            //If we Have Component.shape-----------\n            if (shape != undefined) {\n              if (Array.isArray(shape)) {\n                shape.sort((a, b) =>\n                  parseInt(a.box.z_index) > parseInt(b.box.z_index) ? 1 : -1\n                );\n                shapeComponetsList.push(ci);\n              } else {\n                shapeComponetsList.push(ci);\n              }\n            }\n            //If we Have Component.text-----------\n            if (text != undefined) {\n              if (Array.isArray(text)) {\n\n                text.sort((a, b) =>\n                  parseInt(a.box.z_index) > parseInt(b.box.z_index) ? 1 : -1\n                );\n              }\n              shapeComponetsList.push(ci);\n            }\n\n\n          });\n        }\n        //if Group has Single Component Instance--------------------- \n        else {\n          console.log(\"single\")\n       //   console.log(groups.group)\n\n          var { group, shape, text } = x.componentInstance;\n          //group\n          if (group != undefined) {\n\n            if (Array.isArray(group)) {\n              group.sort((a, b) =>\n                parseInt(a.zIndex) > parseInt(b.zIndex) ? 1 : -1\n              );\n              group.map((groupObj) => {\n                shapeComponetsList.push(groupObj);\n              })\n            } else {\n              shapeComponetsList.push(group);\n            }\n          }\n\n          //If we Have Component.shape-----------\n          if (shape != undefined) {\n            if (Array.isArray(shape)) {\n              shape.sort((a, b) =>\n                parseInt(a.box.z_index) > parseInt(b.box.z_index) ? 1 : -1\n              );\n              shapeComponetsList.push(x.componentInstance);\n            } else {\n              shapeComponetsList.push(x.componentInstance);\n            }\n          }\n          //If we Have Component.text-----------\n          if (text != undefined) {\n            if (Array.isArray(text)) {\n\n              text.sort((a, b) =>\n                parseInt(a.box.z_index) > parseInt(b.box.z_index) ? 1 : -1\n              );\n            }\n            shapeComponetsList.push(x.componentInstance);\n          }\n        }\n      }\n\n\n\n\n\n      }\n      );\n    }\n    //Single Group--------------------------------\n    else if (groups.group !== undefined) {\n      console.log(\"3\")\n\n      //If groups has Component Instance -----------------------------------------\n      if (groups.group.componentInstance != undefined) {\n\n        //if Group has Multiple Component Instance---------------------\n        if (Array.isArray(groups.group.componentInstance)) {\n          console.log(\"Array\")\n          console.log(groups.group.componentInstance)\n          //Map-------------------------------------\n          groups.group.componentInstance.map((ci, i) => {\n            var { group, shape, text } = ci;\n            //group\n            if (group != undefined) {\n              if (Array.isArray(group)) {\n                group.sort((a, b) =>\n                  parseInt(a.zIndex) > parseInt(b.zIndex) ? 1 : -1\n                );\n                group.map((groupObj) => {\n                  shapeComponetsList.push(groupObj);\n                })\n              } else {\n                shapeComponetsList.push(group);\n              }\n            }\n\n            //If we Have Component.shape-----------\n            if (shape != undefined) {\n              if (Array.isArray(shape)) {\n                shape.sort((a, b) =>\n                  parseInt(a.box.z_index) > parseInt(b.box.z_index) ? 1 : -1\n                );\n                shapeComponetsList.push(ci);\n              } else {\n                shapeComponetsList.push(ci);\n              }\n            }\n            //If we Have Component.text-----------\n            if (text != undefined) {\n              if (Array.isArray(text)) {\n\n                text.sort((a, b) =>\n                  parseInt(a.box.z_index) > parseInt(b.box.z_index) ? 1 : -1\n                );\n              }\n              shapeComponetsList.push(ci);\n            }\n\n\n          });\n        }\n        //if Group has Single Component Instance--------------------- \n        else {\n          console.log(\"single\")\n          console.log(groups.group)\n\n          var { group, shape, text } = groups.group.componentInstance;\n          //group\n          if (group != undefined) {\n\n            if (Array.isArray(group)) {\n              group.sort((a, b) =>\n                parseInt(a.zIndex) > parseInt(b.zIndex) ? 1 : -1\n              );\n              group.map((groupObj) => {\n                shapeComponetsList.push(groupObj);\n              })\n            } else {\n              shapeComponetsList.push(group);\n            }\n          }\n\n          //If we Have Component.shape-----------\n          if (shape != undefined) {\n            if (Array.isArray(shape)) {\n              shape.sort((a, b) =>\n                parseInt(a.box.z_index) > parseInt(b.box.z_index) ? 1 : -1\n              );\n              shapeComponetsList.push(groups.group.componentInstance);\n            } else {\n              shapeComponetsList.push(groups.group.componentInstance);\n            }\n          }\n          //If we Have Component.text-----------\n          if (text != undefined) {\n            if (Array.isArray(text)) {\n\n              text.sort((a, b) =>\n                parseInt(a.box.z_index) > parseInt(b.box.z_index) ? 1 : -1\n              );\n            }\n            shapeComponetsList.push(groups.group.componentInstance);\n          }\n        }\n      }\n\n      //if group has Text---------------------------------------------------------\n      if (groups.group.text !== undefined) {\n        console.log(\"text\")\n        console.log(groups.group)\n        var { text } = groups.group;\n        console.log(text);\n        if (Array.isArray(text)) {\n          console.log(\"1\")\n          text.sort((a, b) =>\n            parseInt(a.box.z_index) > parseInt(b.box.z_index) ? 1 : -1\n          );\n          shapeComponetsList.push(groups.group)\n        } else {\n          console.log(\"2\")\n          shapeComponetsList.push(groups.group)\n          console.log(shapeComponetsList)\n        }\n      }\n\n      //If groups has group ----------------------------------------------------------\n      if (groups.group.group !== undefined) {\n        console.log(\"1.1\")\n        if (Array.isArray(groups.group.group)) {\n          groups.group.group.sort((a, b) =>\n            parseInt(a.zIndex) > parseInt(b.zIndex) ? 1 : -1\n          );\n          groups.group.group.map((groupObj) => {\n            shapeComponetsList.push(groupObj);\n          })\n        } else {\n          shapeComponetsList.push(groups.group.group);\n        }\n        // group.shape.sort((a, b) =>\n        //   parseInt(a.box.z_index) > parseInt(b.box.z_index) ? 1 : -1\n        // );\n        //pushing the group object values to shapeComponentsList array-if component instances.component_Instance has single group\n\n      }\n\n      //If groups has  Shapes -------------------------------------------------------------\n      if (groups.group.shape !== undefined) {\n        console.log(\"1.2\")\n        let singleshapearray = [];\n        if (Array.isArray(groups.group.shape))\n        //if composite instance contains multple shapes \n        {\n          groups.group.shape.map((obj, i) => singleshapearray.push(obj));\n          //sorting values based on z_index\n          singleshapearray.sort((a, b) =>\n            parseInt(a.box.z_index) > parseInt(b.box.z_index) ? 1 : -1\n          );\n        } else {\n          //if composite instance contains only one object \n          singleshapearray.push(groups.group.shape)\n        }\n\n        //assigning singleshapearray to shape of composite instance\n        groups.group.shape = singleshapearray\n        console.log(groups.group)\n        var ele = {};\n        ele = groups.group;\n        //to get parentx and parenty values we are removing group from shapes section\n        //groups is already added in above condition\n        //remove groups here if any\n        // ele = ele.pull(\"group\")\n        if (ele[\"group\"] != undefined) {\n          //deleting group key from shapescondition\n          delete ele[\"group\"];\n        }\n        //pushing the shape object values to shapeComponentsList array\n        shapeComponetsList.push(groups.group);\n      }\n      //\n    } \n\n  }\n\n\n\n\n  //------Labels----------------------------------------------------------------------------------------------------------------\n  if (labels !== undefined) {\n    let singleshapearray = [];\n    // if(Array.isArray(labels))   //labelcontains mul \n    // {\n    //   //console.log(\"???????????????????????????????????????????????\")\n    //   //console.log(\"Entering into if Statement \")\n    //   //console.log(labels)\n    //  labels.text.map((obj, i) => singleshapearray.push(obj));\n    //  //console.log(singleshapearray)\n\n    // //  singleshapearray.sort((a, b) =>\n    // //    parseInt(a.box.z_index) > parseInt(b.box.z_index) ? 1 : -1\n    // //  );\n\n    // }else{  //if label contains only one object \n    //  // //console.log(labels)\n    //  //console.log(\"???????????????????????????????????????????????\")\n    //  //console.log(\"Entering into else Statement \")\n    //  //console.log(labels)\n    //  //console.log(singleshapearray)\n    //   // singleshapearray.push(labels.text)\n    //   labels.text.map((obj, i) => singleshapearray.push(obj));\n    //   //console.log(singleshapearray)\n    // }\n\n\n    // if(labels.length  ==  undefined)\n    // {\n    //   //console.log(\"Entered If --labels Length is Zero\")\n\n    // }else{\n    //   //console.log(\"Entered else - labels length is \" +labels.length)\n\n    // }\n\n    // //console.log(\"Label Dtaa---????????????????????????????\")\n    // //console.log(labels);\n\n    shapeComponetsList.push({ \"labels\": labels });\n\n  }\n  else {\n    let singleshapearray = [];\n    if (Array.isArray(labels))   //labelcontains mul \n    {\n      // //console.log(labels)\n      labels.text.map((obj, i) => singleshapearray.push(obj));\n      singleshapearray.sort((a, b) =>\n        parseInt(a.box.z_index) > parseInt(b.box.z_index) ? 1 : -1\n      );\n\n    } else {  //if label contains only one object \n      // //console.log(labels)\n      singleshapearray.push(labels)\n    }\n\n    // labels.text=singleshapearray\n    shapeComponetsList.push(labels);\n\n  }\n\n\n\n\n\n\n\n  //Images------------------------------------------------------------------------------------------------------\n  if (images !== undefined) {\n\n    // //console.log(\"Images Dtaa---????????????????????????????\")\n    // //console.log(images);\n    shapeComponetsList.push(images);\n  }\n  return shapeComponetsList;\n}\n\n\nexport function parseShapeObject(shapeObj) {\n  for (var i in shapeObj) {\n    if (!shapeObj[i] && typeof shapeObj[i] == \"object\") {\n      var temp = parseShapeAttributes(shapeObj[i]);\n      shapeObj[i] = { ...temp };\n      parseShapeObject(shapeObj[i]);\n    } else {\n    }\n  }\n  return shapeObj;\n}\n\nexport function parseShapeAttributes(shapeObj) {\n  const { _attributes } = shapeObj;\n  return _attributes;\n}\n\n\n\nexport function LableComponets(labels) {\n  let lableComponetsList = [];\n\n  if (labels !== undefined) {\n    if (Array.isArray(labels)) {\n      labels.map((obj, i) => lableComponetsList.push(obj));\n\n      //positioning \n      labels.sort((a, b) =>\n        parseInt(a.box.z_index) > parseInt(b.box.z_index) ? 1 : -1\n      );\n    } else if (labels.text !== undefined) {\n      //console.log(\"labels-text\")\n      lableComponetsList.push(labels.text);\n    }\n\n    //console.log(labels.text)\n    //console.log(\"obj:\")\n    //console.log(labels.text.box.z_index)\n  }\n  return lableComponetsList;\n}\n\nexport function getStateObject(shapeObj) {\n  const shapes = ShapeObjects(shapeObj)\n  const { project } = shapeObj;\n  if (project !== undefined) {\n    shapeObj = project;\n  }\n  const hmipage =\n    shapeObj.hmipage === undefined ? shapeObj : shapeObj.hmipage;\n\n  const { labels } = hmipage; // Destructuring\n\n  let shapeObjects = {\n    shapes: shapes,\n    lables: LableComponets(labels),\n\n  };\n  return shapeObjects;\n}","F:\\Konvo Model\\src\\components\\XmlToJson.es6.js",["416","417","418","419","420","421"],"/**\n * Object to convert XML into a structured JSON object\n *\n * @class XmlToJson\n */\nexport class XmlToJson {\n\n\tconstructor(xml) {\n\t\tif (xml) {\n\t\t\treturn this.parse(xml);\n\t\t}\n\t}\n\n\t/**\n     * Adds an object value to a parent object\n     *\n     * @method addToParent\n     * @param {Object} parent\n     * @param {String} nodeName\n     * @param {Mixed} obj\n     * @return none\n     */\n\taddToParent(parent, nodeName, obj) {\n\t\t// If this is the first or only instance of the node name, assign it as\n\t\t// an object on the parent.\n\t\tif (!parent[nodeName]) {\n\t\t\tparent[nodeName] = obj;\n\t\t}\n\t\t// Else the parent knows about other nodes of the same name\n\t\telse {\n\t\t\t// If the parent has a property with the node name, but it is not an array,\n\t\t\t// store the contents of that property, convert the property to an array, and\n\t\t\t// assign what was formerly an object on the parent to the first member of the\n\t\t\t// array\n\t\t\tif (!Array.isArray(parent[nodeName])) {\n\t\t\t\tlet tmp = parent[nodeName];\n\t\t\t\tparent[nodeName] = [];\n\t\t\t\tparent[nodeName].push(tmp);\n\t\t\t}\n\n\t\t\t// Push the current object to the collection\n\t\t\tparent[nodeName].push(obj);\n\t\t}\n\t}\n\n\n\tconvertXMLStringToDoc(str) {\n\t\tlet xmlDoc = null;\n\n\t\tif (str && typeof str === 'string') {\n\t\t\t// Create a DOMParser\n\t\t\tlet parser = new DOMParser();\n\n\t\t\t// Use it to turn your xmlString into an XMLDocument\n\t\t\txmlDoc = parser.parseFromString(str, 'application/xml');\n\t\t}\n\n\t\treturn xmlDoc;\n\t}\n\n\n\t/**\n\t * Validates if an data is an XMLDocument\n\t *\n\t * @method isXML\n\t * @param {Mixed} data\n\t * @return {Boolean}\n\t */\n\tisXML(data) {\n\t\tlet documentElement = (data ? data.ownerDocument || data : 0).documentElement;\n\t\treturn documentElement ? documentElement.nodeName.toLowerCase() !== 'html' : false;\n\t}\n\n\n\t/**\n\t * Sends a chunk of XML to be parsed\n\t *\n\t * @method parse\n\t * @param {XMLXtring} xml\n\t * @return {JSON | Null}\n\t */\n\tparse(xml) {\n\t\tif (xml && typeof xml === 'string') {\n\t\t\txml = this.convertXMLStringToDoc(xml);\n\t\t}\n\n\t\treturn (xml && this.isXML(xml)) ? this.parseNode({}, xml.firstChild) : null;\n\t}\n\n\n\t/**\n\t * Reads through a node's attributes and assigns the values to a new object\n\t *\n\t * @method parseAttributes\n\t * @param {XMLNode} node\n\t * @return {Object}\n\t */\n\tparseAttributes(node) {\n\t\tlet attributes = node.attributes,\n\t\t\tobj = {};\n\n\t\t// If the node has attributes, assign the new object properties\n\t\t// corresponding to each attribute\n\t\tif (node.hasAttributes()) {\n\t\t\tfor (let i = 0; i < attributes.length; i++) {\n\t\t\t\tobj[attributes[i].name] = this.parseValue(attributes[i].value);\n\t\t\t}\n\t\t}\n\n\t\t// return the new object\n\t\treturn obj;\n\t}\n\n\n\t/**\n\t * Rips through child nodes and parses them\n\t *\n\t * @method parseChildren\n\t * @param {Object} parent\n\t * @param {XMLNodeMap} childNodes\n\t * @return none\n\t */\n\tparseChildren(parent, childNodes) {\n\t\t// If there are child nodes...\n\t\tif (childNodes.length > 0) {\n\t\t\t// Loop over all the child nodes\n\t\t\tfor (let i = 0; i < childNodes.length; i++) {\n\t\t\t\t// If the child node is a XMLNode, parse the node\n\t\t\t\tif (childNodes[i].nodeType == 1) {\n\t\t\t\t\tthis.parseNode(parent, childNodes[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\t/**\n\t * Converts a node into an object with properties\n\t *\n\t * @method parseNode\n\t * @param {Object} parent\n\t * @param {XMLNode} node\n\t * @return {Object}\n\t */\n\tparseNode(parent, node) {\n\t\tlet nodeName = node.nodeName,\n\t\t\tobj = Object.assign({}, this.parseAttributes(node)),\n\t\t\ttmp = null;\n\n\t\t// If there is only one text child node, there is no need to process the children\n\t\tif (node.childNodes.length == 1 && node.childNodes[0].nodeType == 3) {\n\t\t\t// If the node has attributes, then the object will already have properties.\n\t\t\t// Add a new property 'text' with the value of the text content\n\t\t\tif (node.hasAttributes()) {\n\t\t\t\tobj['text'] = this.parseValue(node.childNodes[0].nodeValue);\n\t\t\t}\n\t\t\t// If there are no attributes, then the parent[nodeName] property value is\n\t\t\t// simply the interpreted textual content\n\t\t\telse {\n\t\t\t\tobj = this.parseValue(node.childNodes[0].nodeValue);\n\t\t\t}\n\t\t}\n\t\t// Otherwise, there are child XMLNode elements, so process them\n\t\telse {\n\t\t\tthis.parseChildren(obj, node.childNodes);\n\t\t}\n\n\t\t// Once the object has been processed, add it to the parent\n\t\tthis.addToParent(parent, nodeName, obj)\n\n\t\t// Return the parent\n\t\treturn parent;\n\t};\n\n\n\t/**\n\t * Interprets a value and converts it to Boolean, Number or String based on content\n\t *\n\t * @method parseValue\n\t * @param {Mixed} val\n\t * @return {Mixed}\n\t */\n\tparseValue(val) {\n\t\t// Create a numeric value from the passed parameter\n\t\tlet num = Number(val);\n\n\t\t// If the value is 'true' or 'false', parse it as a Boolean and return it\n\t\tif (val.toLowerCase() === 'true' || val.toLowerCase() === 'false') {\n\t\t\treturn val.toLowerCase() == 'true';\n\t\t}\n\n\t\t// If the num parsed to a Number, return the numeric value\n\t\t// Else if the valuse passed has no length (an attribute without value) return null,\n\t\t// Else return the param as is\n\t\treturn (isNaN(num)) ? val : (val.length == 0) ? null : num;\n\t}\n}\n","F:\\Konvo Model\\src\\data\\shapesData.js",[],"F:\\Konvo Model\\src\\components\\UNCRectangle.jsx",["422","423","424","425","426","427","428","429","430","431","432","433","434","435","436","437","438","439","440","441","442","443","444","445","446","447","448","449","450","451","452","453","454","455","456","457","458","459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480","481","482","483","484","485","486","487","488","489","490","491","492","493","494","495","496","497","498","499","500","501"],"import { Rect } from \"react-konva\";\nimport { getRectPointX, getRectPointY } from \"./CanvasUtils.js\";\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport {\n  hextoRGBA, intervalUpdate, getTagValueApi,\n  androidToRgba, lineStyle, gradientStartPoints, gradientEndPoints\n} from './Utils';\n\nconst UNCRectangle = (shapeElement) => {\n\n  const { shape, parentX, parentY } = shapeElement;\n\n// const [render, isRendered] = useState(false);\n  //Hide------\n  const [hide, setHide] = useState(Boolean);\n  //Apperance-----\n  //  shape.dynamic_fill\n  //  shape.dynamic_fill_level \n  //  shape.dynamic_fill?.multi_state\n  //  shape.array \n  //  shape.dynamic_fill?.on_off  \n  const [dynamcifill, setDynamicFill] = useState(hextoRGBA(shape?.fill?.fill));\n  const [refTagValue, setRefTagValue] = useState(0);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      dynamciAssociation();\n    }, intervalUpdate);\n    return ()=>{\n      window.clearInterval(interval)\n    }\n  });\n\n\n  function  dynamciAssociation() {\n    //console.log(\"Dynamic Association\")\n\n    //Dynamic_Filll-----------------------------------------------------------------------\n    if (shape.dynamic_fill?.on_off != undefined) {\n      //   //console.log(\"Dynamic_Filll\")\n      // //console.log( shape.dynamic_fill.on_off.on_color_when.__cdata)\n      var value = shape.dynamic_fill.on_off?.on_color_when?.__cdata;\n      //Removing DataTypes ---Float,\n      value = value.replace(\"static\", \"\");\n      value = value.replace(\"int\", \"\");\n      value = value.replace(\"float\", \"\");\n      value = value.replace(\"double\", \"\");\n      value = value.replace(\"bool\", \"\");\n      value = value.replace(\"boolean\", \"\");\n      value = value.replace(/\\r\\n|\\n|\\r/gm, \"$\");\n      value = value + \"$;\";\n      axios({\n        method: 'post',\n        url: getTagValueApi,\n        headers: {},\n        data: {\n          InputScript: value, // This is the body part\n        }\n      }).then((res) => {\n        //   //console.log(res)\n        if (res.data.error === \"false\")\n          if (res.data.data == 'True' || res.data.data >= 1) {\n            setDynamicFill(hextoRGBA(shape.dynamic_fill.on_off.on_color))\n          } else if (res.data.data == 'False' || res.data.data == 0) {\n            setDynamicFill(hextoRGBA(shape.dynamic_fill.on_off.off_color))\n          }\n      });\n    }\n\n    //hidden_When-------------------------------------------------------------------------------------\n    if (shape.object.security != undefined) {\n      //  //console.log(\"Hidden_when\")\n      var value = shape.object.security.hidden_when.__cdata;\n      //Removing DataTypes ---Float,\n      value = value.replace(\"static\", \"\");\n      value = value.replace(\"int\", \"\");\n      value = value.replace(\"float\", \"\");\n      value = value.replace(\"double\", \"\");\n      value = value.replace(\"bool\", \"\");\n      value = value.replace(\"boolean\", \"\");\n\n      value = value.replace(/\\r\\n|\\n|\\r/gm, \"$\");\n\n      value = value + \"$;\";\n      axios({\n        method: 'post',\n        url: getTagValueApi,\n        headers: {},\n        data: {\n          InputScript: value, // This is the body part\n        }\n      }).then((res) => {\n        if (res.data.error == \"false\") {\n          setDynamicFill(shape?.fill?.fill)\n          if (res.data.data == \"True\" || res.data.data >= 1) {\n            setHide(true)\n            // ////console.log(\"Visible\")\n          } else if (res.data.data == \"False\" || res.data.data == 0) {\n            setHide(false)\n            //////console.log(\"Not Visible\")\n          }\n        }\n      });\n    }\n\n    //Array--------------\n    if (shape.array != undefined) {\n      // //console.log(\"Array\")\n      // //console.log(\"Array\")\n      var value = shape.array.expression.__cdata;\n      var colorsList = shape.array.colors.__cdata;\n      // //console.log(shape.array);\n      // //console.log(colorsList);\n      if (value) {\n        value = value.replace(\"static\", \"\");\n        value = value.replace(\"int\", \"\");\n        value = value.replace(\"float\", \"\");\n        value = value.replace(\"double\", \"\");\n        value = value.replace(\"bool\", \"\");\n        value = value.replace(\"boolean\", \"\");\n        value = value.replace(/\\r\\n|\\n|\\r/gm, \"$\");\n        value = value + \"$;\";\n\n        axios({\n          method: 'post',\n          url: getTagValueApi,\n          data: {\n            InputScript: value, // This is the body part\n          }\n        }).then((res) => {\n\n          if (res.data.data != \"\") {\n            colorsList.map((color, i) => {\n\n              if (i == res.data.data) {\n                setDynamicFill(hextoRGBA(color))\n              }\n            })\n          }\n        });\n      }\n    }\n\n    //MultiState-------------------------------------------------------------------------------------------------\n    if (shape.dynamic_fill?.multi_state != undefined) {\n      //  //console.log(\"MultiState\")\n      var conditions = shape.dynamic_fill.multi_state.condition?.__cdata;\n      var colors = shape.dynamic_fill.multi_state.color.__cdata;\n      // //console.log(\"Multi State Data----------\")\n      // //console.log(stateText);\n      var body1 = conditions[0];\n      body1 = body1.replace(\"static\", \"\");\n      body1 = body1.replace(\"int\", \"\");\n      body1 = body1.replace(\"float\", \"\");\n      body1 = body1.replace(\"double\", \"\");\n      body1 = body1.replace(\"bool\", \"\");\n      body1 = body1.replace(\"boolean\", \"\");\n      body1 = body1.replace(/\\r\\n|\\n|\\r/gm, \"$\");\n      body1 = body1 + \"$;\";\n      var body2 = conditions[1];\n      body2 = body2.replace(\"static\", \"\");\n      body2 = body2.replace(\"int\", \"\");\n      body2 = body2.replace(\"float\", \"\");\n      body2 = body2.replace(\"double\", \"\");\n      body2 = body2.replace(\"bool\", \"\");\n      body2 = body2.replace(\"boolean\", \"\");\n      body2 = body2.replace(/\\r\\n|\\n|\\r/gm, \"$\");\n      body2 = body2 + \"$;\";\n\n\n      if (conditions != null) {\n        //Condition A\n        axios({\n          method: 'post',\n          url: getTagValueApi,\n          headers: {},\n          data: {\n            InputScript: body1, // This is the body part\n          }\n        }).then((condition1Responce) => {\n          //Condition B\n\n          axios({\n            method: 'post',\n            url: getTagValueApi,\n            headers: {},\n            data: {\n              InputScript: body2, // This is the body part\n            }\n          }).then((condition2Responce) => {\n\n            if (condition1Responce.data.error == \"false\" && condition2Responce.data.error == \"false\") {\n              //0-0\n              if (condition1Responce.data.data == \"False\" && condition2Responce.data.data == \"False\") {\n\n                setDynamicFill(hextoRGBA(colors[0]))\n              }//0-1\n              else if (condition1Responce.data.data == \"False\" && condition2Responce.data.data == \"True\") {\n\n                setDynamicFill(hextoRGBA(colors[1]))\n              }//1-0\n              else if (condition1Responce.data.data == \"True\" && condition2Responce.data.data == \"False\") {\n\n                setDynamicFill(hextoRGBA(colors[2]))\n              }//1-1\n              else if (condition1Responce.data.data == \"True\" && condition2Responce.data.data == \"True\") {\n                setDynamicFill(hextoRGBA(colors[3]))\n              }\n            }\n          })\n        })\n        //   mutiState()\n      }\n    }\n\n    /// Dynamic_Fill_Level-------------------------------------------------------------------------------------\n    if (shape.dynamic_fill_level != undefined) {\n    //    //console.log(\"Dynamic_Fill_Level\")\n      var value = shape.dynamic_fill_level.expression.__cdata;\n\n      var fillLevelColor = shape.dynamic_fill_level.background_color;\n      var direction = shape.dynamic_fill_level.fill_direction;\n      var maximumPoint = shape.dynamic_fill_level.maximum;\n      var minimumPoint = shape.dynamic_fill_level.minimum;\n      var levelAtMaximum = shape.dynamic_fill_level.level_at_maximum;\n      var levelAtMinimun = shape.dynamic_fill_level.level_at_minimum;\n\n     // //console.log(value)\n      if (value) {\n        value = value.replace(\"static\", \"\");\n        value = value.replace(\"int\", \"\");\n        value = value.replace(\"float\", \"\");\n        value = value.replace(\"double\", \"\");\n        value = value.replace(\"bool\", \"\");\n        value = value.replace(\"boolean\", \"\");\n        value = value.replace(/\\r\\n|\\n|\\r/gm, \"$\");\n        value = value + \"$;\";\n        axios({\n          method: 'post',\n          url: getTagValueApi,\n          data: {\n            InputScript: value, // This is the body part\n          }\n        }).then((res) => {\n          if (res.data.error == \"false\") {\n            setRefTagValue(res.data.data);   \n             //x1-\n            //x2-width\n            //y1-\n            //y2-height\n            //Maximumvalue and  and minimunvalue is TagValue limits----\n            //Percentage is the value made by Maximum and minimum value --\n            //now fetch tag value and find the tag value percentage based on based percentage\n\n            var max = levelAtMaximum - levelAtMinimun;\n            var maxTagPoint = maximumPoint - minimumPoint\n            var rate = (res.data.data/maxTagPoint)*max;\n            // //console.log(\"Data \",res.data.data)\n            // //console.log(\"maxTagPoint \",maxTagPoint)\n            // //console.log(\"Lavelemax \",max)\n            // switch (parseInt(shape.dynamic_fill_level.fill_direction)) {\n            //   //-Up---Bottom to UP     \n            //   case 0:    \n            //   var tagValue = shape.rectangle.y2 * (rate/100);\n            //  // //console.log(\"TagValuev  is\" +  tagValue)\n            //   setRefTagValue(tagValue);   \n            //   //-Right --Left to Right\n            //   case 1:\n            //     var tagValue = shape.rectangle.x2 * (rate/100);\n            //     setRefTagValue(tagValue);   \n            //   //-Bottom --Top to Bottom\n            //   case 2:\n            //     // //console.log(\"Rate is \",rate)\n            //     // //console.log(shape.rectangle.y2)\n            //     var tagValue = shape.rectangle.y2 * (rate/100);\n            //   //  //console.log(\"R value\",tagValue)\n            //     setRefTagValue(tagValue);\n            //   //-Left--Right-to-Left\n            //   case 3:\n            //     var tagValue = shape.rectangle.x2 * (rate/100);\n            //     setRefTagValue(tagValue);   \n            //     default:\n            // }\n     \n          }\n        });\n      }\n    }\n  }\n\n\n\n  //Rectangle Gradient StartPoints-------------------------------------------\n  function rectangleGradientStartPoints(shape, x1, x2, y1, y2) {\n    //x1-\n    //x2-width\n    //y1-\n    //y2-height\n    if(shape.dynamic_fill_level != undefined )\n    {\n      var maximum = shape.dynamic_fill_level.maximum;\n      var minimum = shape.dynamic_fill_level.minimum;\n      var levelAtMaximum = shape.dynamic_fill_level.level_at_maximum;\n      var levelAtMinimun = shape.dynamic_fill_level.level_at_minimum;\n\n      switch (parseInt(shape.dynamic_fill_level.fill_direction)) {\n        case 0:\n        //-Up---Bottom to UP  \n        var startPoint = y2*(levelAtMinimun/100)\n        var endPoint = y2*(levelAtMaximum/100)\n        console.log(\"startPoint\"+startPoint)\n        var pvalue = ((refTagValue -(minimum))/(maximum-minimum))*100;\n        var value = (endPoint - startPoint)*pvalue/100;\n        console.log(y2*(value/100))\n        if( y2*(value/100) > parseFloat(startPoint)  &&   y2*(value/100) <  parseFloat(endPoint)  )\n        {\n          console.log(\"startPoint\"+0)\n          return { x:x2, y: y2-startPoint };\n        }else{\n          console.log(\"startPoint\"+1)\n          return { x: x2, y: y2-startPoint };\n        }\n        case 1:\n        //-Right --Left to Right\n          var startPoint = x2*(levelAtMinimun/100)\n          var endPoint = x2*(levelAtMaximum/100)\n          console.log(\"startPoint\"+startPoint)\n          var pvalue = ((refTagValue -(minimum))/(maximum-minimum))*100;\n          var value = (endPoint - startPoint)*pvalue/100;\n          console.log(x2*(value/100))\n          if( x2*(value/100) > parseFloat(startPoint)  &&   x2*(value/100) <  parseFloat(endPoint)  )\n          {\n            console.log(\"startPoint\"+0)\n            return { x:startPoint, y: y2 };\n          }else{\n            console.log(\"startPoint\"+1)\n            return { x: startPoint, y: y2 };\n          }\n        case 2:\n        //-Bottom --Top to Bottom\n        var startPoint = y2*(shape.dynamic_fill_level.level_at_minimum/100)\n          return { x: x2, y: startPoint };\n        case 3:\n        //-Left--Right-to-Left\n          var startPoint = x2*(levelAtMinimun/100)\n          var endPoint = x2*(levelAtMaximum/100)\n          console.log(\"startPoint\"+startPoint)\n          var pvalue = ((refTagValue -(minimum))/(maximum-minimum))*100;\n          var value = (endPoint - startPoint)*pvalue/100;\n          console.log(x2*(value/100))\n          if( x2*(value/100) > parseFloat(startPoint)  &&   x2*(value/100) <  parseFloat(endPoint)  )\n          {\n            return { x:shape.rectangle.x2-startPoint, y: y2 };\n          }else{\n            return { x: shape.rectangle.x2-startPoint, y: y2 };\n          }\n          default:\n             return { x: 0, y: 0 };\n      }\n    }else if(shape.gradient != undefined){\n\n    switch (parseInt(shape.gradient.gradient_direction)) {\n      //-0---GRADIENT_LEFT_TO_RIGHT     \n      case 0:\n        return { x: x2 / 2 - x2 / 4, y: y2 };\n      //-1--GRADIENT_RIGHT_TO_LEFT\n      case 1:\n        return { x: x2 - x2 / 4, y: y2 };\n      //-2--GRADIENT_TOP_TO_BOTTOM\n      case 2:\n        return { x: x2, y: y2 / 2 - y2 / 4 };\n      //-3--GRADIENT_BOTTOM_TO_TOP \n      case 3:\n        return { x: x2, y: y2 - y2 / 4 };\n      //-4--GRADIENT_HORIZONTAL_TO_MIDDLE \n      case 4:\n        return { x: x2 / 2 - x2 / 3, y: y2 };\n      //-5---GRADIENT_HORIZONTAL_FROM_MIDDLE \n      case 5:\n        return { x: x2 / 2 - x2 / 3, y: y2 };\n      //-6--GRADIENT_HORIZONTAL_TO_MIDDLE \n      case 6:\n        return { x: x2, y: y2 / 2 - y2 / 3 };\n      // //--7--GRADIENT_VERTICAL_FROM_MIDDLE\n      case 7:\n        return { x: x2, y: y2 / 2 - y2 / 3 };\n      default: return { x: 0, y: 0 };\n    }\n  }\n}\n\n\n  //Rectangle Gradient End POints-------------------------------------\n function rectangleGradientEndPoints(shape, x1, x2, y1, y2) {\n    //x1-\n    //x2-width\n    //y1-\n    //y2-height\n    if(shape.dynamic_fill_level != undefined )\n    {\n      var maximum = shape.dynamic_fill_level.maximum;\n      var minimum = shape.dynamic_fill_level.minimum;\n      var levelAtMaximum = shape.dynamic_fill_level.level_at_maximum;\n      var levelAtMinimun = shape.dynamic_fill_level.level_at_minimum;\n      switch (parseInt(shape.dynamic_fill_level.fill_direction)) {\n    \n        case 0:\n          //-Up---Bottom to UP \n        // return { x: x2, y: shape.rectangle.y2- y2*(value/100)  };\n        var startPoint = y2*(levelAtMinimun/100)\n        var endPoint = y2*(levelAtMaximum/100)\n        console.log(\"startPoint\"+startPoint)\n        var pvalue = ((refTagValue -(minimum))/(maximum-minimum))*100;\n        var value = (endPoint - startPoint)*pvalue/100;\n        console.log(y2*(value/100))\n        if( y2*(value/100) > parseFloat(startPoint)  &&   y2*(value/100) <  parseFloat(endPoint)  )\n        {\n          console.log(\"startPoint\"+0)\n          return { x:x2, y:shape.rectangle.y2 -y2*(value/100) };\n        }else{\n          console.log(\"startPoint\"+1)\n          return { x: x2, y:shape.rectangle.y2-endPoint };\n        }\n        //-Right --Left to Right\n        case 1:\n          var startPoint = x2*(levelAtMinimun/100)\n          var endPoint = x2*(levelAtMaximum/100)\n          console.log(\"endPoint\"+endPoint)\n          var pvalue = ((refTagValue -(minimum))/(maximum-minimum))*100;\n          var value = (endPoint - startPoint)*pvalue/100;\n          if( x2*(value/100) > parseFloat(startPoint)  &&   x2*(value/100) <  parseFloat(endPoint)  )\n          {\n            console.log({ x: x2*(value/100), y: y2 })\n            return { x: x2*(value/100), y: y2 };\n          }else{\n           console.log(\"startPoint\"+1)\n            return { x: endPoint, y:y2 };\n       }\n        \n        \n        \n        //-Bottom --Top to Bottom\n        case 2:\n          var startPoint = y2*(levelAtMinimun/100)\n          var endPoint = y2*(levelAtMaximum/100)\n          var pvalue = ((refTagValue -(minimum))/(maximum-minimum))*100;\n          var value = (endPoint - startPoint)*pvalue/100;  \n          return { x: x2, y: y2*(value/100) };\n        //-Left--Right-to-Left\n        case 3:\n          var startPoint = x2*(levelAtMinimun/100)\n          var endPoint = x2*(levelAtMaximum/100)\n          console.log(\"endPoint\"+endPoint)\n          var pvalue = ((refTagValue -(minimum))/(maximum-minimum))*100;\n          var value = (endPoint - startPoint)*pvalue/100;\n          if( x2*(value/100) > parseFloat(startPoint)  &&   x2*(value/100) <  parseFloat(endPoint)  )\n          {\n            console.log({ x: x2*(value/100), y: y2 })\n            return { x: shape.rectangle.x2-x2*(value/100), y: y2 };\n          }else{\n           console.log(\"startPoint\"+1)\n            return { x: shape.rectangle.x2-endPoint, y:y2 };\n       }\n\n          default:\n          return { x: 0, y: 0 };\n      }\n    }else if(shape.gradient != undefined ){\n    switch (parseInt(shape.gradient.gradient_direction)) {\n      //-0---GRADIENT_LEFT_TO_RIGHT     \n      case 0:\n        return { x: x2 - x2 / 4, y: y2 };\n      //-1--GRADIENT_RIGHT_TO_LEFT\n      case 1:\n        return { x: x2 / 2 - x2 / 4, y: y2 };\n      //-2--GRADIENT_TOP_TO_BOTTOM\n      case 2:\n        return { x: x2, y: y2 - y2 / 4 };\n      //-3--GRADIENT_BOTTOM_TO_TOP \n      case 3:\n        return { x: x2, y: y2 / 2 - y2 / 4 };\n      //-4--GRADIENT_HORIZONTAL_TO_MIDDLE \n      case 4:\n        return { x: x2 - x2 / 8, y: y2 };\n      //-5---GRADIENT_HORIZONTAL_FROM_MIDDLE\n      case 5:\n        return { x: x2 - x2 / 8, y: y2 };\n      //-6--GRADIENT_VERTICAL_TO_MIDDLE \n      case 6:\n        return { x: x2, y: y2 - y2 / 10 };\n      // //--7--GRADIENT_VERTICAL_FROM_MIDDLE\n      case 7:\n        return { x: x2, y: y2 - y2 / 10 };\n      default: return { x: 0, y: 0 };\n    }\n  }\n  }\n\n  function gradientFill() {\n  //Gradient Fill Basedon the gradient_Direction----------------\n    if(shape.dynamic_fill_level != undefined )\n    {\n    //   if(shape.dynamic_fill_level.fill_direction == 3)\n    //   {\n    //  //   //console.log(\"Fill Direction \"+shape.dynamic_fill_level.fill_direction);\n    //     return  [0,hextoRGBA(shape.dynamic_fill_level.background_color),\n    //       0.99,hextoRGBA(shape.dynamic_fill_level.background_color),\n    //       1.0,hextoRGBA(shape.fill.fill)];\n    //   }else{\n       // //console.log(\"Fill Direction \"+shape.dynamic_fill_level.fill_direction);\n      return  [\n        0,hextoRGBA(shape.dynamic_fill_level.background_color),\n          0.01,hextoRGBA(shape.fill.fill),\n          0.99,hextoRGBA(shape.fill.fill),\n          1.0,hextoRGBA(shape.dynamic_fill_level.background_color)];\n          }\n      //  }\n        else{\n  //Gradient Colors all below 4 we user 2 colors [0,1]\n    if (shape.gradient.gradient_direction < 4) {\n\n      return [0, shape.dynamic_fill != undefined ? dynamcifill ?? \"black\" : shape.fill != undefined ? hextoRGBA(shape.fill.fill) : \"grey\" ?? \"black\"\n        , 1, shape.gradient != undefined ? hextoRGBA(shape?.gradient?.gradient_color) : \"grey\" ?? \"black\"];\n    } else if (shape.gradient.gradient_direction >= 4) {\n\n      if (shape.gradient.gradient_direction == 4 || shape.gradient.gradient_direction == 6) {\n        return [0, shape.dynamic_fill != undefined ? dynamcifill ?? \"black\" : shape.fill != undefined ? hextoRGBA(shape.fill.fill) : \"grey\" ?? \"black\",\n          0.5, shape.gradient != undefined ? hextoRGBA(shape?.gradient?.gradient_color) : \"grey\" ?? \"black\"\n\n          , 1, shape.dynamic_fill != undefined ? dynamcifill ?? \"black\" : shape.fill != undefined ? hextoRGBA(shape.fill.fill) : \"grey\" ?? \"black\"];\n      }\n      else if (shape.gradient.gradient_direction == 5 || shape.gradient.gradient_direction == 7) {\n        return [0, shape.dynamic_fill != undefined ? dynamcifill ?? \"black\" : shape.fill != undefined ? hextoRGBA(shape?.gradient?.gradient_color) : \"grey\" ?? \"black\",\n          0.5, shape.gradient != undefined ? hextoRGBA(shape.fill.fill) : \"grey\" ?? \"black\"\n\n          , 1, shape.dynamic_fill != undefined ? dynamcifill ?? \"black\" : shape.fill != undefined ? hextoRGBA(shape?.gradient?.gradient_color) : \"grey\" ?? \"black\"];\n      }\n    }\n  }\n  }\n\n\n  return (\n    //console.log(\"Render called\"+refTagValue),\n    <Rect\n      key={\"Rect_\" + shape.object.object_id + shape.object.object_number}\n      id={\"Rect_\" + shape.object.object_id + shape.object.object_number}\n\n      x={getRectPointX(shape, parentX)}\n      y={getRectPointY(shape, parentY)}\n\n      width={parseFloat(shape.rectangle.x2)}\n      height={parseFloat(shape.rectangle.y2)}\n      visible={shape.object.security != undefined ? !hide : true}\n  \n\n      // Gradient Start Point---only when gradient is there and dynamic_fill_level is there\n      fillLinearGradientStartPoint={\n        shape.dynamic_fill_level === undefined ?\n          shape.gradient != undefined ?\n            rectangleGradientStartPoints(shape,\n              shape.rectangle.x1, shape.rectangle.x2,\n              shape.rectangle.y1, shape.rectangle.y2 \n            ) : {}\n          : rectangleGradientStartPoints(shape,\n            shape.rectangle.x1 , shape.rectangle.x2 ,\n            shape.rectangle.y1 , shape.rectangle.y2 \n          )}\n         \n      // Gradient End Point---only when gradient is there and dynamic_fill_level is there\n      fillLinearGradientEndPoint={\n    \n          rectangleGradientEndPoints(shape,\n              shape.rectangle.x1 , shape.rectangle.x2,\n              shape.rectangle.y1 , shape.rectangle.y2 ) }\n\n//fillLinearGradientColorStops\n      fillLinearGradientColorStops={\n        shape.dynamic_fill_level === undefined ?\n          shape.gradient === undefined ? [] :\n            gradientFill() : gradientFill()\n      }\n\n      fill={\n        shape.dynamic_fill_level === undefined ?\n          shape.gradient === undefined ?\n            dynamcifill : \"\" : \"\"\n      }\n\n      strokeWidth={parseFloat(shape.line.line_width)}\n      stroke={hextoRGBA(shape.line.color) ?? \"Black\"}\n      dashEnabled={true}\n      dash={lineStyle(shape.line.style)}\n      // shadowBlur={10} \n      draggable={true}\n      cornerRadius={parseFloat(shape.rectangle.corner_radius)}\n    />\n  );\n};\n\nexport default UNCRectangle;\n","F:\\Konvo Model\\src\\components\\UNCEllipse.jsx",["502","503","504","505","506","507","508","509","510","511","512","513","514","515","516","517","518","519","520","521","522","523","524","525","526","527","528","529","530","531","532","533","534","535","536","537","538","539","540","541","542","543","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569","570","571","572","573"],"import { Ellipse, Rect } from \"react-konva\";\nimport { getRectPointX, getRectPointY } from \"./CanvasUtils.js\";\nimport React, { useEffect ,useState } from 'react'\nimport axios from 'axios';\nimport { intervalUpdate,androidToRgba ,lineStyle,hextoRGBA,getTagValueApi } from './Utils';\nimport { color } from \"d3\";\n\nconst UNCEllipse = (shapeProps) => {\n  const { shape, parentX, parentY } = shapeProps;\n  const [refTagValue, setRefTagValue] = useState(0);\n\n\n  //Hide------\n  const [hide, setHide] = useState(Boolean);\n  //Apperance-----\n        //  shape.dynamic_fill\n        //  shape.dynamic_fill_level \n        //  shape.dynamic_fill?.multi_state\n        //  shape.array \n        //  shape.dynamic_fill?.on_off  \n  const [dynamcifill, setDynamicFill] = \n  useState(hextoRGBA(shape?.fill?.fill));\n\n  useEffect(()=>{\n    const interval = setInterval(() => {\n     dynamciAssociation();\n   },intervalUpdate);\n   return ()=>{\n      window.clearInterval(interval)\n    }\n  } );\n  \n\n function dynamciAssociation(){\n  //Dynamic_Filll-----------------------------------------------------------------------\n  if (shape.dynamic_fill?.on_off != undefined) {\n\n  //  //console.log( shape.dynamic_fill)\n   // //console.log( shape.dynamic_fill.on_off.on_color_when.__cdata)\n    var value = shape.dynamic_fill.on_off?.on_color_when?.__cdata;\n    //Removing DataTypes ---Float,\n    value = value.replace(\"static\", \"\");\n    value = value.replace(\"int\", \"\");\n    value = value.replace(\"float\", \"\");\n    value = value.replace(\"double\", \"\");\n    value = value.replace(\"bool\", \"\");\n    value = value.replace(\"boolean\", \"\");\n    value = value.replace(/\\r\\n|\\n|\\r/gm, \"$\");\n    value = value + \"$;\";\n      axios({\n        method: 'post',\n        url: getTagValueApi,\n        headers: {}, \n        data: {\n          InputScript:value, // This is the body part\n        }\n      }).then((res)=>{\n     //   //console.log(res)\n       if(res.data.error === \"false\")\n     if(res.data.data == 'True'|| res.data.data >= 1)\n     {\n      setDynamicFill(hextoRGBA(shape.dynamic_fill.on_off.on_color))\n     }else if(res.data.data == 'False'|| res.data.data == 0){\n      setDynamicFill(hextoRGBA(shape.dynamic_fill.on_off.off_color))\n     }\n      });\n  }\n\n  //hidden_When-------------------------------------------------------------------------------------\n  if (shape.object.security != undefined) {\n    var value = shape.object.security.hidden_when.__cdata;\n    //Removing DataTypes ---Float,\n    value = value.replace(\"static\", \"\");\n    value = value.replace(\"int\", \"\");\n    value = value.replace(\"float\", \"\");\n    value = value.replace(\"double\", \"\");\n    value = value.replace(\"bool\", \"\");\n    value = value.replace(\"boolean\", \"\");\n\n    value = value.replace(/\\r\\n|\\n|\\r/gm, \"$\");\n\n    value = value + \"$;\";\n      axios({\n        method: 'post',\n        url: getTagValueApi,\n        headers: {}, \n        data: {\n          InputScript:value, // This is the body part\n        }\n      }).then((res)=>{\n       if(res.data.error == \"false\"){\n        setDynamicFill(shape?.fill?.fill)\n     if(res.data.data == \"True\" || res.data.data >= 1)\n     {\n      setHide(true)\n     // ////console.log(\"Visible\")\n     }else if(res.data.data == \"False\"|| res.data.data == 0){\n      setHide(false)\n      //////console.log(\"Not Visible\")\n     }\n    }\n      });\n  }\n\n  //Array--------------\n  if(shape.array!= undefined)\n  {\n   // //console.log(\"Array\")\n    var value = shape.array.expression.__cdata;\n    var colorsList = shape.array.colors.__cdata;\n    // //console.log(shape.array);\n    // //console.log(colorsList);\n    if (value) {\n      value = value.replace(\"static\", \"\");\n      value = value.replace(\"int\", \"\");\n      value = value.replace(\"float\", \"\");\n      value = value.replace(\"double\", \"\");\n      value = value.replace(\"bool\", \"\");\n      value = value.replace(\"boolean\", \"\");\n      value = value.replace(/\\r\\n|\\n|\\r/gm, \"$\");\n      value = value + \"$;\";\n\n      axios({\n        method: 'post',\n        url: getTagValueApi,\n        data: {\n          InputScript: value, // This is the body part\n        }\n      }).then((res) => {\n   \n        if (res.data.data != \"\") {\n          colorsList.map((color, i) => {\n             \n            if (i == res.data.data) {\n         \n              setDynamicFill(hextoRGBA(color))\n            }\n          })}\n        });\n    }\n  }\n\n\n  //MultiState-------------------------------------------------------------------------------------------------\n  if (shape.dynamic_fill?.multi_state != undefined) {\n      var conditions = shape.dynamic_fill.multi_state.condition?.__cdata;\n      var colors =shape.dynamic_fill.multi_state.color.__cdata;\n      // //console.log(\"Multi State Data----------\")\n      // //console.log(stateText);\n      var body1 = conditions[0];\n      body1 = body1.replace(\"static\", \"\");\n      body1 = body1.replace(\"int\", \"\");\n      body1 = body1.replace(\"float\", \"\");\n      body1 = body1.replace(\"double\", \"\");\n      body1 = body1.replace(\"bool\", \"\");\n      body1 = body1.replace(\"boolean\", \"\");\n      body1 = body1.replace(/\\r\\n|\\n|\\r/gm, \"$\");\n      body1 = body1 + \"$;\";\n      var body2 = conditions[1];\n      body2 = body2.replace(\"static\", \"\");\n      body2 = body2.replace(\"int\", \"\");\n      body2 = body2.replace(\"float\", \"\");\n      body2 = body2.replace(\"double\", \"\");\n      body2 = body2.replace(\"bool\", \"\");\n      body2 = body2.replace(\"boolean\", \"\");\n      body2 = body2.replace(/\\r\\n|\\n|\\r/gm, \"$\");\n      body2 = body2 + \"$;\";\n\n\n      if (conditions != null) {\n        //Condition A\n        axios({\n          method: 'post',\n          url: getTagValueApi,\n          headers: {},\n          data: {\n            InputScript: body1, // This is the body part\n          }\n        }).then((condition1Responce) => {\n          //Condition B\n\n          axios({\n            method: 'post',\n            url:getTagValueApi,\n            headers: {},\n            data: {\n              InputScript: body2, // This is the body part\n            }\n          }).then((condition2Responce) => {\n\n            if (condition1Responce.data.error == \"false\" && condition2Responce.data.error == \"false\") {\n\n              //0-0\n              if (condition1Responce.data.data == \"False\" && condition2Responce.data.data == \"False\") {\n\n                setDynamicFill(hextoRGBA(colors[0]))\n              }//0-1\n              else if (condition1Responce.data.data == \"False\" && condition2Responce.data.data == \"True\") {\n\n                setDynamicFill(hextoRGBA(colors[1]))\n              }//1-0\n              else if (condition1Responce.data.data == \"True\" && condition2Responce.data.data == \"False\") {\n\n                setDynamicFill(hextoRGBA(colors[2]))\n              }//1-1\n              else if (condition1Responce.data.data == \"True\" && condition2Responce.data.data == \"True\") {\n                setDynamicFill(hextoRGBA(colors[3]))\n              }\n            }\n          })\n        })\n        //   mutiState()\n      }\n  }\n\n /// Dynamic_Fill_Level-------------------------------------------------------------------------------------\n  if (shape.dynamic_fill_level != undefined) {\n // //console.log(\"Dynamic_Fill_Level\")\n  var value = shape.dynamic_fill_level.expression.__cdata;\n\n  \n  var fillLevelColor = shape.dynamic_fill_level.background_color;\n  var direction = shape.dynamic_fill_level.fill_direction;\n  var maximumPoint = shape.dynamic_fill_level.maximum;\n  var minimumPoint = shape.dynamic_fill_level.minimum;\n  var levelAtMaximum = shape.dynamic_fill_level.level_at_maximum;\n  var levelAtMinimun = shape.dynamic_fill_level.level_at_minimum;\n\n\n  ////console.log(value)\n  if (value) {\n    value = value.replace(\"static\", \"\");\n    value = value.replace(\"int\", \"\");\n    value = value.replace(\"float\", \"\");\n    value = value.replace(\"double\", \"\");\n    value = value.replace(\"bool\", \"\");\n    value = value.replace(\"boolean\", \"\");\n    value = value.replace(/\\r\\n|\\n|\\r/gm, \"$\");\n    value = value + \"$;\";\n    axios({\n      method: 'post',\n      url: getTagValueApi,\n      data: {\n        InputScript: value, // This is the body part\n      }\n    }).then((res) => {\n      if(res.data.error == \"false\"){\n         //Maximumvalue and  and minimunvalue is TagValue limits----\n            //Percentage is the value made by Maximum and minimum value --\n            //now fetch tag value and find the tag value percentage based on based percentage\n            var max = levelAtMaximum - levelAtMinimun;\n            var maxTagPoint = maximumPoint - minimumPoint\n            var rate = (res.data.data/maxTagPoint)*max;\n           \n            switch (parseInt(shape.dynamic_fill_level.fill_direction)) {\n              //-Up---Bottom to UP     \n              case 0:    \n              var tagValue = shape.ellipse.y2 * (rate/100);\n              setRefTagValue(tagValue);   \n              //-Right --Left to Right\n              case 1:\n                var tagValue = shape.ellipse.x2 * (rate/100);\n                setRefTagValue(tagValue);   \n              //-Bottom --Top to Bottom\n              case 2:\n                var tagValue = shape.ellipse.y2 * (rate/100);\n                setRefTagValue(tagValue);\n              //-Left--Right-to-Left\n              case 3:\n                var tagValue = shape.ellipse.x2 * (rate/100);\n                setRefTagValue(tagValue);   \n                default:\n            }\n      }});\n    }\n      }\n  }\n\n\n\n\n  //EllipseGradientStartPoints----------------------------------------\n  function ellipseGradientStartPoints(shape, x1, x2, y1, y2) {\n   // //console.log(x2,y2)\n       //console.log(\"ellipseGradientStartPoints\")\n    // //console.log(parseInt(shape.dynamic_fill_level.fill_direction))\n    //////console.log(shape.gradient.gradient_direction)\n\n    if(shape.dynamic_fill_level != undefined )\n    {\n      // //console.log(\"dynamic_fill_level\")\n      switch (parseInt(shape.dynamic_fill_level.fill_direction)) {\n        //-Up---Bottom to UP     \n        case 0:\n          return  { x: x2, y: y2 };\n        //-Right --Left to  \n        case 1:\n          return {x: -x2 , y: y2 };\n        //-Bottom --Top to Bottom\n        case 2:\n          return { x: x2, y: -y2 };\n        //-Left--Right-to-Left\n        case 3:\n          return { x: x2, y: y2 };\n          default:\n             return { x: 0, y: 0 };\n      }\n    }else{\n    switch (parseInt(shape.gradient.gradient_direction)) {\n      //-0---GRADIENT_LEFT_TO_RIGHT     \n      case 0:\n        return { x: -x2 / 2, y: y2 };\n      //-1--GRADIENT_RIGHT_TO_LEFT\n      case 1:\n        return { x: x2 / 2, y: y2 };\n      //-2--GRADIENT_TOP_TO_BOTTOM\n      case 2:\n        return { x: x2, y: -y2 / 2 };\n      //-3--GRADIENT_BOTTOM_TO_TOP \n      case 3:\n        return { x: x2, y: y2 / 2 };\n      //-4--GRADIENT_HORIZONTAL_TO_MIDDLE \n      case 4:\n        return { x: -x2 / 2, y: y2 };\n\n      //-5---GRADIENT_HORIZONTAL_FROM_MIDDLE \n      case 5:\n        return { x: -x2 / 2, y: y2 };\n\n      //-6--GRADIENT_HORIZONTAL_TO_MIDDLE \n      case 6:\n        return { x: x2, y: y2 / 2 };\n\n      // //--7--GRADIENT_VERTICAL_FROM_MIDDLE\n      case 7:\n        return { x: x2, y: - y2 / 2 };\n\n      default: return { x: 0, y: 0 };\n    }\n  }\n  }\n\n  //Ellipse Gardient End Point----------------------------------------------\n  function ellipseGradientEndPoints(shape, x1, x2, y1, y2) {\n    //console.log(\"ellipseGradientEndPoints\")\n    if(shape.dynamic_fill_level != undefined )\n    {\n      switch (parseInt(shape.dynamic_fill_level.fill_direction)) {\n        //-Up---Bottom to UP     \n        case 0:\n          var point ;\n          var height = shape.ellipse.y2;\n          var ration = height/2;\n          if(refTagValue > ration)\n          {\n            point  = refTagValue -ration;\n            point = -point;\n          }else if(refTagValue < ration)\n          {\n            point  = ration - refTagValue;\n         \n          }else{\n            point = 0\n          }\n        \n          return { x: x2, y: point};\n        //-Right --Left to Right\n        case 1:\n          var point ;\n          var width = shape.ellipse.x2;\n          var ration = width/2;\n          if(refTagValue > ration)\n          {\n            point  = refTagValue -ration;\n          }else if(refTagValue < ration)\n          {\n            point  = ration - refTagValue;\n            point =  -point;\n         \n          }else{\n            point = 0\n          }\n          return { x: point, y: y2 };\n        //-Bottom --Top to Bottom\n        case 2:\n          var point ;\n          var height = shape.ellipse.y2;\n          var ration = height/2;\n          if(refTagValue > ration)\n          {\n            point  = refTagValue -ration;\n          }else if(refTagValue < ration)\n          {\n            point  = ration - refTagValue;\n            point =  -point;\n          }else{\n            point = 0\n          }\n        \n          return { x: x2, y:point };\n        //-Left--Right-to-Left\n        case 3:\n          var point ;\n          var width = shape.ellipse.x2;\n          var ration = width/2;\n          if(refTagValue > ration)\n          {\n            point  = refTagValue -ration;\n            point =  -point;\n          }else if(refTagValue < ration)\n          {\n            point  = ration - refTagValue;\n    \n          }else{\n            point = 0\n          }\n          return { x: point, y: y2 };\n          default:\n          return { x: 0, y: 0 };\n      }\n    }else{\n    switch (parseInt(shape.gradient.gradient_direction)) {\n      //-0---GRADIENT_LEFT_TO_RIGHT     \n      case 0:\n        return { x: x2 / 2, y: y2 };\n      //-1--GRADIENT_RIGHT_TO_LEFT\n      case 1:\n        return { x: -x2 / 2, y: y2 };\n      //-2--GRADIENT_TOP_TO_BOTTOM\n      case 2:\n        return { x: x2, y: y2 / 2 };\n      //-3--GRADIENT_BOTTOM_TO_TOP \n      case 3:\n        return { x: x2, y: - y2 / 2 };\n      //-4--GRADIENT_HORIZONTAL_TO_MIDDLE \n      case 4:\n        return { x: x2 / 2, y: y2 };\n      //-5---GRADIENT_HORIZONTAL_FROM_MIDDLE\n      case 5:\n        return { x: x2 / 2, y: y2 };\n      //-6--GRADIENT_VERTICAL_TO_MIDDLE \n      case 6:\n        return { x: x2, y: - y2 / 2 };\n      // //--7--GRADIENT_VERTICAL_FROM_MIDDLE\n      case 7:\n        return { x: x2, y: y2 / 2 };\n      default: return { x: 0, y: 0 };\n    } \n  }\n  }\n\n  //Gradient Fill Basedon the gradient_Direction----------------\n  function gradientFill() {\n\n    if(shape.dynamic_fill_level != undefined )\n    {\n      return [0,hextoRGBA(shape.fill.fill),\n      0.99,hextoRGBA(shape.fill.fill),\n         1.,hextoRGBA(shape.dynamic_fill_level.background_color)];\n    }else{\n      //Gradient Colors all below 4 we user 2 colors [0,1]\n    if (shape.gradient.gradient_direction < 4) {\n      return [0,\n         shape.dynamic_fill != undefined ? dynamcifill ?? \"black\" : shape.fill != undefined ? hextoRGBA(shape.fill.fill) : \"grey\" ?? \"black\"\n        , 1, shape.gradient != undefined ? hextoRGBA(shape?.gradient?.gradient_color) : \"grey\" ?? \"black\"];\n    } else if (shape.gradient.gradient_direction >= 4) {\n    //Gradient Colors all >= 4 we user 3 colors [0,0.5,1]\n      if (shape.gradient.gradient_direction == 4 || shape.gradient.gradient_direction == 6) {\n        return [0, shape.dynamic_fill != undefined ? dynamcifill ?? \"black\" : shape.fill != undefined ? hextoRGBA(shape.fill.fill) : \"grey\" ?? \"black\",\n          0.5, shape.gradient != undefined ? hextoRGBA(shape?.gradient?.gradient_color) : \"grey\" ?? \"black\"\n\n          , 1, shape.dynamic_fill != undefined ? dynamcifill ?? \"black\" : shape.fill != undefined ? hextoRGBA(shape.fill.fill) : \"grey\" ?? \"black\"];\n      }\n      else if (shape.gradient.gradient_direction == 5 || shape.gradient.gradient_direction == 7) {\n        return [0, shape.dynamic_fill != undefined ? dynamcifill ?? \"black\" : shape.fill != undefined ? hextoRGBA(shape?.gradient?.gradient_color) : \"grey\" ?? \"black\",\n          0.5, shape.gradient != undefined ? hextoRGBA(shape.fill.fill) : \"grey\" ?? \"black\"\n\n          , 1, shape.dynamic_fill != undefined ? dynamcifill ?? \"black\" : shape.fill != undefined ? hextoRGBA(shape?.gradient?.gradient_color) : \"grey\" ?? \"black\"];\n\n      }\n    }\n  }\n\n  }\n\n\n \n  \n  return (\n\n    <Ellipse\n      key={\"Ellipse_\" + shape.object.object_id + shape.object.object_number}\n      id={\"Ellipse_\" + shape.object.object_id + shape.object.object_number}\n\n      x={getRectPointX(shape, parentX)}\n      y={getRectPointY(shape, parentY)}\n      width={parseFloat(shape.ellipse.x2)}\n      height={parseFloat(shape.ellipse.y2)}\n\n      visible={shape.object.security != undefined ? !hide : true}\n\n      // Gradient Start Point---only when gradient is there and dynamic_fill_level is there\n      fillLinearGradientStartPoint={\n        shape.dynamic_fill_level === undefined ?\n        shape.gradient != undefined ?\n        ellipseGradientStartPoints(shape,\n           shape.ellipse.x1 / 2, shape.ellipse.x2 / 2,\n          shape.ellipse.y1 / 2,shape.ellipse.y2 / 2\n        ) : {}  \n      :  ellipseGradientStartPoints(shape,\n         shape.ellipse.x1 /2 , shape.ellipse.x2 /2 ,\n        shape.ellipse.y1 /2 ,shape.ellipse.y2 /2 \n      )    }\n\n      // Gradient End Point---only when gradient is there and dynamic_fill_level is there\n      fillLinearGradientEndPoint={\n        shape.dynamic_fill_level === undefined ?\n        shape.gradient != undefined ?\n        ellipseGradientEndPoints(shape,\n           shape.ellipse.x1 / 2, shape.ellipse.x2 / 2,\n          shape.ellipse.y1 / 2,shape.ellipse.y2 / 2) : {}\n          :    ellipseGradientEndPoints(shape,\n             shape.ellipse.x1 /2, shape.ellipse.x2/2 ,\n            shape.ellipse.y1 /2,shape.ellipse.y2 /2 )}\n      //  fillLinearGradientColorStops={[0,\"red\",1,\"green\"]}\n\n    \n      fillLinearGradientColorStops={\n        shape.dynamic_fill_level === undefined ?\n        shape.gradient === undefined ? [] :\n        gradientFill():  gradientFill()\n      }\n\n      fill={\n        shape.dynamic_fill_level === undefined ?\n         shape.gradient === undefined ?\n            dynamcifill : \"\" :\"\"\n           }\n\n      strokeWidth={parseFloat(shape.line.line_width)}\n      stroke={hextoRGBA(shape.line.color)}\n      draggable={false}\n\n      dashEnabled={true}\n      dash={lineStyle(shape.line.style)}\n    />\n  );\n};\n\nexport default UNCEllipse;\n","F:\\Konvo Model\\src\\components\\UNCPipe.jsx",["574","575","576","577","578","579","580","581","582","583","584","585"],"import { Line,Group } from \"react-konva\";\nimport { getPipePoints } from \"./CanvasUtils.js\";\nimport { useState } from 'react';\nimport axios from 'axios';\nimport {\n  Rect,\n  Text,\n  \n} from \"react-konva\";\nimport { hextoRGBA,androidToRgba, lineStyle ,gradientStartPoints ,gradientEndPoints } from './Utils';\n\n\nconst UNCPipe = (shapeElement) => {\n  const { shape, parentX, parentY } = shapeElement;\n\n  const [hide, setHide] = useState(0);\n  const [dynamcifill, setDynamicFill] = useState(0);\n\n  //Dynamci_fILL---------------------------------------------------------------\n  if (shape.dynamic_fill != undefined) {\n    var value = shape.dynamic_fill.on_off.on_color_when\n      axios({\n        method: 'post',\n        url: \"http://localhost:8080/tag\",\n        headers: {}, \n        data: {\n          tagname:value, // This is the body part\n        }\n      }).then((res)=>{\n     if(res.data.tagValue > 50)\n     {\n       //console.log(\"DynamicFill\")\n      //  this.androidToRgba(shape.dynamic_fill.on_off.on_color)\n      setDynamicFill(androidToRgba(shape.dynamic_fill.on_off.on_color))\n\n     }else{\n      //console.log(\"NDynamicFill\")\n      setDynamicFill(androidToRgba(shape.dynamic_fill.on_off.off_color))\n     }\n\n      });\n  }\n\n  //hidden_When-------------------------------------------------------------------------------------\n  if (shape.object.security != undefined) {\n    var value = shape.object.security.hidden_when.__cdata;\n     axios({\n       method: 'post',\n       url: \"http://localhost:8080/tag\",\n       headers: {}, \n       data: {\n         tagname:value, // This is the body part\n       }\n     }).then((res)=>{\n       //console.log(res.data.tagValue)\n\n    if(res.data.tagValue > 50)\n    {\n     setHide(true)\n     //console.log(\"Visible\")\n    }else{\n     setHide(false)\n     //console.log(\"Not Visible\")\n    }\n\n     });\n\n  }\n  // -0---GRADIENT_LEFT_TO_RIGHT-------------------------------\n  //startPoint:   {x1:x2/2 - x2/4 , y1:y2}\n  //endPoint:     {x2:x2 - x4/4,y2:y2 }\n\n  //-1--GRADIENT_RIGHT_TO_LEFT----------------------------------\n  //startPoint:  {x1: x2 - x2/4   , y1:y2   }\n  //endPoint:    {x2: x2/2 - x2/4 , y2:    y2  }\n\n  //--2---GRADIENT_TOP_TO_BOTTOM -----------------------------\n  //startPoint:  {x1: x2    , y1:y2 - y2/4  }\n  //endPoint:    {x2: x2 , y2:y2/2 - y2/4  }\n\n  //--3---GRADIENT_BOTTOM_TO_TOP  -----------------------------\n  //startPoint:  {x1: x2    , y1:y2/2 - y2/4  }\n  //endPoint:    {x2: x2 , y2:y2 - y2/4  }\n\n  //--4--GRADIENT_HORIZONTAL_TO_MIDDLE -------------------------\n  //startPoint:  {x1: x2    , y1:y2/2 }\n  //endPoint:    {x2: x2 , y2:y2/2 + 1  }\n\n  //---\n  //---5---GRADIENT_HORIZONTAL_FROM_MIDDLE ---------------------\n  //startPoint:  {x1: x2    , y1:y2/2 }\n  //endPoint:    {x2: x2 , y2:y2 - 1  }\n\n  //--6---GRADIENT_VERTICAL_TO_MIDDLE----------------------------\n  //startPoint:  {x1: x2/2   , y1:y2 }\n  //endPoint:    {x2: x2/2 -1 , y2:y2 }\n\n  //---\n  //--7--GRADIENT_VERTICAL_FROM_MIDDLE----------------------------\n  //startPoint:  {x1: x2/2   , y1:y2 }\n  //endPoint:    {x2: x2 -1 , y2:y2 }\n\n\n\n\n\n  function startPoints() {\n    //console.log(shape.gradient.gradient_direction)\n\n    switch (parseInt(\"2\")) {\n      //-0---GRADIENT_LEFT_TO_RIGHT     \n      case 0:\n        return { x: shape.rectangle.x2 / 2 - shape.rectangle.x2 / 4, y: shape.rectangle.y2 };\n      //-1--GRADIENT_RIGHT_TO_LEFT\n      case 1:\n        return { x: shape.rectangle.x2 - shape.rectangle.x2 / 4, y: shape.rectangle.y2 };\n      //-2--GRADIENT_TOP_TO_BOTTOM\n      case 2:\n        return { x: shape.rectangle.x2, y: shape.rectangle.y2 - shape.rectangle.y2 / 4 };\n      //-3--GRADIENT_BOTTOM_TO_TOP \n      case 3:\n        return { x: shape.rectangle.x2, y: shape.rectangle.y2 / 2 - shape.rectangle.y2 / 4 };\n      //-4--GRADIENT_HORIZONTAL_TO_MIDDLE \n      case 4:\n        return { x: shape.rectangle.x2, y: shape.rectangle.y2 / 2 };\n      //-5---GRADIENT_HORIZONTAL_FROM_MIDDLE ---------------------\n      case 5:\n        return { x: shape.rectangle.x2, y: shape.rectangle.y2 / 2 };\n\n      //-6--GRADIENT_HORIZONTAL_TO_MIDDLE \n      case 6:\n        return { x: shape.rectangle.x2 / 2, y: shape.rectangle.y2 };\n\n      // //--7--GRADIENT_VERTICAL_FROM_MIDDLE----------------------------\n      case 7:\n        return { x: shape.rectangle.x2 / 2, y: shape.rectangle.y2 };\n\n      default: return { x: 0, y: 0 };\n\n    }\n\n  }\n\n\n  function endPoint() {\n    switch (parseInt(\"2\")) {\n      //-0---GRADIENT_LEFT_TO_RIGHT     \n      case 0:\n        return { x: shape.rectangle.x2 - shape.rectangle.x2 / 4, y: shape.rectangle.y2 };\n      //-1--GRADIENT_RIGHT_TO_LEFT\n      case 1:\n        return { x: shape.rectangle.x2 / 2 - shape.rectangle.x2 / 4, y: shape.rectangle.y2 };\n      //-2--GRADIENT_TOP_TO_BOTTOM\n      case 2:\n        return { x: shape.rectangle.x2, y: shape.rectangle.y2 / 2 - shape.rectangle.y2 / 4 };\n      //-3--GRADIENT_BOTTOM_TO_TOP \n      case 3:\n        return { x: shape.rectangle.x2, y: shape.rectangle.y2 - shape.rectangle.y2 / 4 };\n      //-4--GRADIENT_HORIZONTAL_TO_MIDDLE \n      case 4:\n        return { x: shape.rectangle.x2, y: shape.rectangle.y2 / 2 + 1 };\n\n      //-5---GRADIENT_HORIZONTAL_FROM_MIDDLE ---------------------\n      case 5:\n        return { x: shape.rectangle.x2, y: shape.rectangle.y2 - 1 };\n\n      //-6--GRADIENT_VERTICAL_TO_MIDDLE \n      case 6:\n        return { x: shape.rectangle.x2 / 2 - 1, y: shape.rectangle.y2 };\n\n      // //--7--GRADIENT_VERTICAL_FROM_MIDDLE----------------------------\n      case 7:\n        return { x: shape.rectangle.x2 - 1, y: shape.rectangle.y2 };\n      default: return { x: 0, y: 0 };\n    }\n  }\n\n  return (\n    <Group>\n      \n    <Line\n      key={\"Pipe_\" + shape.object.object_number}\n      id={\"Pipe_\" + shape.object.object_id}\n      points={getPipePoints(shape, parentX, parentY)}\n      visible={shape.object.security != undefined ? hide : true}\n      stroke={hextoRGBA(shape.pipe.lowlight_color)}\n      strokeWidth={parseFloat(shape.pipe.pipe_width)}\n      // closed={\"true\"}\n      // shadowColor={hextoRGBA(shape.pipe.lowlight_color)}\n      // shadowBlur={10}\n      // shadowForStrokeEnabled={true}\n      // shadowOffsetX={0}\n      // shadowOffsetY={0}\n      // showOpacity={100}\n\n      dashEnabled={false}\n      dash={lineStyle(shape.line.style)}\n\n\n    />\n      <Line\n      // key={\"Pipe_\" + shape.object.object_number}\n      // id={\"Pipe_\" + shape.object.object_id}\n      points={getPipePoints(shape, parentX, parentY)}\n      visible={shape.object.security != undefined ? hide : true}\n      stroke={hextoRGBA(shape.pipe.highlight_color)}\n      strokeWidth={parseFloat(shape.pipe.pipe_width) / 3}\n      // closed={\"true\"}\n      // shadowColor={hextoRGBA(shape.pipe.lowlight_color)}\n      // shadowBlur={10}\n      // shadowForStrokeEnabled={true}\n      // shadowOffsetX={0}\n      // shadowOffsetY={0}\n      // showOpacity={100}\n\n      dashEnabled={false}\n      dash={lineStyle(shape.line.style)}\n\n\n    />\n    </Group>\n  );\n};\n\nexport default UNCPipe;\n","F:\\Konvo Model\\src\\components\\UNCLabel.jsx",["586","587","588","589","590","591","592","593","594","595","596","597","598","599","600","601","602","603","604","605","606","607","608","609","610","611","612","613","614","615","616","617","618","619","620","621","622","623","624","625","626","627","628","629","630","631","632","633","634","635","636","637","638","639","640","641","642","643","644","645","646","647","648","649","650","651","652","653","654","655","656","657","658","659","660","661","662","663","664","665","666","667","668","669","670","671","672","673","674","675","676","677","678","679","680","681","682","683","684","685","686","687","688","689","690","691"],"import { Text } from \"react-konva\";\nimport { getPloyPoints } from \"./JSONUtil.js\";\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport {intervalUpdate, androidToRgba, hextoRGBA ,getTagValueApi} from './Utils';\nimport { interpolate } from \"d3\";\n\nconst UNCLabel = (shapeProps) => {\n  const { text } = shapeProps;\n  const [hide, setHidden] = useState(true);\n  const [display_on_off_text, setOnOffText] = useState('');\n\n  const [display_value, setDisplayValue] = useState(text.static_text.toString());\n  // const [display_numeric, setDisplayNumericValue] = useState(0);\n  // const [display_array, setDisplayArray] = useState();\n  var value = \" \";\n\n  value = text.static_text.toString()\n  value = value.replace(/&amp;/g, '')\n  value = value.replace(/#xa;/g, '')\n  value = value.replace(/&/g, '')\n  value = value.replace(/#x9;/g, '')\n  value = value.replace(/  /g, '')\n\n  useEffect(() => {\n   const  interval = setInterval(() => {\n      dynamciAssociation();\n    }, intervalUpdate);\n    return ()=>{\n      window.clearInterval(interval)\n    }\n  });\n\n\n  function dynamciAssociation() {\n    // //Display------------------------------------\n    //Display Numeric-----------------------------------------------------------------------------------------------------------\n    if (text.display_numeric != undefined) {\n      value = text.display_numeric.expression.__cdata;\n      if (value) {\n        //Removing DataTypes ---Float,\n        value = value.replace(\"static\", \"\");\n        value = value.replace(\"int\", \"\");\n        value = value.replace(\"float\", \"\");\n        value = value.replace(\"double\", \"\");\n        value = value.replace(\"bool\", \"\");\n        value = value.replace(\"boolean\", \"\");\n        value = value.replace(/\\r\\n|\\n|\\r/gm, \"$\");\n        value = value + \"$;\";\n        axios({\n          method: 'post',\n          url: getTagValueApi,\n\n          data: {\n            InputScript: value, // This is the body part\n          }\n        }).then((res) => {\n          // console.log(res)\n          if (res.data.error == \"false\") {\n            //      var names = {};\n            //    names = display_numeric;\n            //    //console.log(names);\n            //  names[value] =res.data;\n            setDisplayValue(res.data.data);\n          }\n        });\n      } else {\n        value = text.static_text.toString()\n        value = value.replace(/&amp;/g, '')\n        value = value.replace(/#xa;/g, '')\n        value = value.replace(/&/g, '')\n        value = value.replace(/#x9;/g, '')\n        value = value.replace(/  /g, '')\n      }\n    }\n\n    //Display_on_off-------------------------------------------------------------------------------------------------------\n    if (text.display_on_off != undefined) {\n      value = text.display_on_off.__cdata;\n      if (value) {\n        //Removing DataTypes ---Float,\n        value = value.replace(\"static\", \"\");\n        value = value.replace(\"int\", \"\");\n        value = value.replace(\"float\", \"\");\n        value = value.replace(\"double\", \"\");\n        value = value.replace(\"bool\", \"\");\n        value = value.replace(\"boolean\", \"\");\n        value = value.replace(/\\r\\n|\\n|\\r/gm, \"$\");\n        value = value + \"$;\";\n        //console.log(value)\n        axios({\n          method: 'post',\n          url: getTagValueApi,\n          headers: {},\n          data: {\n            InputScript: value, // This is the body part\n          }\n        }).then((res) => {\n          if (res.data.error == \"false\") {\n            if (res.data.data == \"True\") {\n              setDisplayValue(text.display_on_off.text_on);\n            } else if (res.data.data == \"False\") {\n              setDisplayValue(text.display_on_off.text_off);\n            }\n          }\n        });\n      } else {\n        value = text.static_text.toString()\n        value = value.replace(/&amp;/g, '')\n        value = value.replace(/#xa;/g, '')\n        value = value.replace(/&/g, '')\n        value = value.replace(/#x9;/g, '')\n        value = value.replace(/  /g, '')\n      }\n    }\n\n    //Display_array-----------------------------------------------------------------------------------------------------------\n    if (text.display_array != undefined) {\n      var value = text.display_array?.index_expression?.__cdata;\n      var arrayData = text.display_array?.array_text?.__cdata;\n      if (value) {\n        value = value.replace(\"static\", \"\");\n        value = value.replace(\"int\", \"\");\n        value = value.replace(\"float\", \"\");\n        value = value.replace(\"double\", \"\");\n        value = value.replace(\"bool\", \"\");\n        value = value.replace(\"boolean\", \"\");\n        value = value.replace(/\\r\\n|\\n|\\r/gm, \"$\");\n        value = value + \"$;\";\n\n        axios({\n          method: 'post',\n          url: getTagValueApi,\n          data: {\n            InputScript: value, // This is the body part\n          }\n        }).then((res) => {\n          //    console.log(res)\n          if (res.data.data != \"\") {\n            arrayData.map((singleDataPoint, i) => {\n              // console.log(singleDataPoint)\n              if (i == parseInt(res.data.data)) {\n                setDisplayValue(singleDataPoint)\n              }\n            });\n          }\n        })\n      } else {\n        value = text.static_text.toString()\n        value = value.replace(/&amp;/g, '')\n        value = value.replace(/#xa;/g, '')\n        value = value.replace(/&/g, '')\n        value = value.replace(/#x9;/g, '')\n        value = value.replace(/  /g, '')\n      }\n    }\n\n\n    //MultiState-------------------------------------------------------------------------------------------------\n    if (text.display_multi_state != undefined) {\n      var conditions = text.display_multi_state?.conditions?.__cdata;\n      var stateText = text.display_multi_state?.state_text?.__cdata;\n      // console.log(\"Multi State Data----------\")\n      // console.log(stateText);\n      var body1 = conditions[0];\n      body1 = body1.replace(\"static\", \"\");\n      body1 = body1.replace(\"int\", \"\");\n      body1 = body1.replace(\"float\", \"\");\n      body1 = body1.replace(\"double\", \"\");\n      body1 = body1.replace(\"bool\", \"\");\n      body1 = body1.replace(\"boolean\", \"\");\n      body1 = body1.replace(/\\r\\n|\\n|\\r/gm, \"$\");\n      body1 = body1 + \"$;\";\n      var body2 = conditions[1];\n      body2 = body2.replace(\"static\", \"\");\n      body2 = body2.replace(\"int\", \"\");\n      body2 = body2.replace(\"float\", \"\");\n      body2 = body2.replace(\"double\", \"\");\n      body2 = body2.replace(\"bool\", \"\");\n      body2 = body2.replace(\"boolean\", \"\");\n      body2 = body2.replace(/\\r\\n|\\n|\\r/gm, \"$\");\n      body2 = body2 + \"$;\";\n\n      if (conditions != null) {\n        //Condition A\n        axios({\n          method: 'post',\n          url: getTagValueApi,\n          headers: {},\n          data: {\n            InputScript: body1, // This is the body part\n          }\n        }).then((condition1Responce) => {\n          //Condition B\n\n          axios({\n            method: 'post',\n            url: getTagValueApi,\n            headers: {},\n            data: {\n              InputScript: body2, // This is the body part\n            }\n          }).then((condition2Responce) => {\n\n            if (condition1Responce.data.error == \"false\" && condition2Responce.data.error == \"false\") {\n\n              //0-0\n              if (condition1Responce.data.data == \"False\" && condition2Responce.data.data == \"False\") {\n\n                setDisplayValue(stateText[0])\n              }//0-1\n              else if (condition1Responce.data.data == \"False\" && condition2Responce.data.data == \"True\") {\n\n                setDisplayValue(stateText[1])\n              }//1-0\n              else if (condition1Responce.data.data == \"True\" && condition2Responce.data.data == \"False\") {\n\n                setDisplayValue(stateText[2])\n              }//1-1\n              else if (condition1Responce.data.data == \"True\" && condition2Responce.data.data == \"True\") {\n\n                setDisplayValue(stateText[3])\n              }\n            }\n          })\n        })\n        //   mutiState()\n      } else {\n        value = text.static_text.toString()\n        value = value.replace(/&amp;/g, '')\n        value = value.replace(/#xa;/g, '')\n        value = value.replace(/&/g, '')\n        value = value.replace(/#x9;/g, '')\n        value = value.replace(/  /g, '')\n      }\n    }\n\n    //Visibility------------------------------------\n    //Hiddden_When-------------------------------------------------------------------------------------------------------------\n    if (text.object.security != undefined) {\n      var value = text.object.security?.hidden_when?.__cdata;\n      //Removing DataTypes ---Float,\n      value = value.replace(\"static\", \"\");\n      value = value.replace(\"int\", \"\");\n      value = value.replace(\"float\", \"\");\n      value = value.replace(\"double\", \"\");\n      value = value.replace(\"bool\", \"\");\n      value = value.replace(\"boolean\", \"\");\n      value = value.replace(/\\r\\n|\\n|\\r/gm, \"$\");\n      value = value + \"$;\";\n      // console.log(value)\n      if (value) {\n        axios({\n          method: 'post',\n          url: getTagValueApi,\n          headers: {},\n          data: {\n            InputScript: value, // This is the body part\n          }\n        }).then((res) => {\n          //    console.log(res)\n          if (res.data.error === \"false\") {\n            if (res.data.data == \"True\") {\n              setHidden(true);\n            } else if (res.data.data == \"False\") {\n              setHidden(false);\n            }\n          }\n        })\n      } else {\n        value = text.static_text.toString()\n        value = value.replace(/&amp;/g, '')\n        value = value.replace(/#xa;/g, '')\n        value = value.replace(/&/g, '')\n        value = value.replace(/#x9;/g, '')\n        value = value.replace(/  /g, '')\n      }\n    }\n \n  }\n\n\n  //if no Dynamic Association showing StaticText\n  if (text.display_numeric == undefined && text.display_on_off == undefined &&\n    text.display_array == undefined && text.display_multi_state == undefined) {\n\n    value = text.static_text.toString()\n    value = value.replace(/&amp;/g, '')\n    value = value.replace(/#xa;/g, '')\n    value = value.replace(/&/g, '')\n    value = value.replace(/#x9;/g, '')\n    value = value.replace(/  /g, '')\n \n  }\n\n\n  return <Text fontFamily={text.font_family}\n    draggable={false}\n    fontSize={parseInt(text.font_size)}\n    fill={hextoRGBA(text.color)}\n    visible={text.object.security != undefined ? hide : true}\n    // text={text.display_numeric != undefined ? text.display_numeric.expression.__cdata ?  display_numeric : value :\n    //   text.display_on_off != undefined ?  text.display_on_off?.__cdata ? display_on_off_text : value : text.display_array != undefined ? value:\n    //   value}\n    text={text.display_numeric == undefined &&\n      text.display_on_off == undefined &&\n      text.display_array == undefined && \n      text.display_multi_state == undefined\n      ? value : display_value}\n    x={parseFloat(text.box.axis_offset_left) + parseFloat(text.box.axis_anchor) + (parseFloat(text.box.left))}\n    y={parseFloat(text.box.axis_offset_top) + 5 + parseFloat(text.box.axis_anchor) + ((parseFloat(text.box.top)))}\n  />\n}\n\nexport default UNCLabel;\n","F:\\Konvo Model\\src\\components\\UNCLine.jsx",[],"F:\\Konvo Model\\src\\components\\UNCButton.jsx",["692","693","694","695","696","697","698"],"import preFunctions from \"./preFunctions\";\nimport {\n  Rect,\n  Text,\n  Group,\n} from \"react-konva\";\nimport React from \"react\";\nimport { hextoRGBA,lineStyle } from './Utils';\nimport UNCCanvas from \"./UNCCanvas\";\n\nconst UNCButton = (shapeElement) => {\n  const { shape, parentX, parentY, ProjectId } = shapeElement;\n\n\n\n  return (\n    <Group>\n      <Rect\n        id={\"Button\" + shape.object.object_id + shape.object.object_number}\n        x={parseFloat(parentX) + parseFloat(shape.box.axis_offset_left) + ((parseFloat(shape.box.left)) / 2)}\n        y={parseFloat(parentY) + parseFloat(shape.box.axis_offset_top) + ((parseFloat(shape.box.top)) / 2)}\n        width={parseFloat(shape.box.right)}\n        height={parseFloat(shape.box.bottom)}\n        fill={shape.button?.fill_color_up != undefined ? hextoRGBA(shape.button.fill_color_up) : \"grey\"}\n        //Default Configuration \n        strokeWidth={1.5}\n        stroke={\"#eaeaea\"}\n        shadowColor={\"grey\"}\n        shadowBlur={4}\n        shadowOffsetX={3}\n        shadowOffsetY={3}\n        showOpacity={0.8}\n        shadowBlur={3}\n        draggable={false}\n        dashEnabled={true}\n        dash={lineStyle(shape.line.style)}\n\n        onClick={() => {\n          if(shape.input_touch != undefined)\n          {\n            //console.log(shape?.input_touch?.up?.command.__cdata)\n            var cdata = shape?.input_touch?.up?.command.__cdata;\n            cdata = cdata.split(\"(\");\n           \n            if(cdata[0]==\"openPage\")\n            {\n              var targetPage = cdata[1].replace(\")\",\"\");\n             targetPage = targetPage.replace(\";\",\"\");\n             //console.log(\"targetPage : \"+targetPage)\n            new UNCCanvas().handleSubmit(targetPage.toString());\n\n            }\n          }else{\n            //console.log(shape?.button?.buttontext?.text)\n          }\n         \n        }}\n\n\n      />\n      <Text\n        align={\"center\"}\n        width={parseFloat(shape.box.right)}\n        height={parseFloat(shape.box.bottom)}\n        fontSize={parseFloat(shape.button?.buttontext?.font_size) ?? 15}\n        fill={shape.button != undefined ? hextoRGBA(shape.button?.buttontext?.color) : \"\"}\n        x={parseFloat(parentX) + (parseFloat(shape.box.axis_offset_left) + (parseFloat(shape.box.left)) + parseFloat(0) / 2)}\n        y={parseFloat(parentY) + parseFloat(shape.box.axis_offset_top) + ((parseFloat(shape.box.top)) + parseFloat(shape.box.bottom) / 2)}\n        text={shape.button?.buttontext?.text ?? \"Button\"}\n        draggable={false}\n        onClick={() => {\n         \n        }}\n\n      ></Text>\n    </Group>\n  );\n};\n\n\nexport default UNCButton;\n","F:\\Konvo Model\\src\\components\\UNCPolygon.jsx",["699","700","701","702","703","704","705","706","707","708","709","710","711","712","713","714","715","716","717","718","719","720","721","722","723","724","725","726","727","728","729","730","731","732","733","734","735","736","737","738","739","740","741"],"import { Line } from \"react-konva\";\nimport { getPolygonPoints } from \"./CanvasUtils.js\";\nimport { useState  } from 'react';\nimport axios from 'axios';\nimport { useEffect } from \"react\";\nimport {\n  hextoRGBA, intervalUpdate, getTagValueApi,\n  androidToRgba, lineStyle, gradientStartPoints, gradientEndPoints\n} from './Utils';\n\nconst UNCPolygon = (shapeProps) => {\n\n  const { shape, parentX, parentY } = shapeProps;  \n\n  //Hide------\n  const [hide, setHide] = useState(Boolean);\n  //Apperance-----\n  //  shape.dynamic_fill\n  //  shape.dynamic_fill_level \n  //  shape.dynamic_fill?.multi_state\n  //  shape.array \n  //  shape.dynamic_fill?.on_off  \n  const [dynamcifill, setDynamicFill] = useState(hextoRGBA(shape?.fill?.fill));\n  const [refTagValue, setRefTagValue] = useState(0);\n\n  var value = '';\n  useEffect(() => {\n    const interval = setInterval(() => {\n      dynamciAssociation();\n    }, intervalUpdate);\n    return ()=>{\n      window.clearInterval(interval)\n    }\n  });\n\n\n\n  function dynamciAssociation() {\n        //Dynamic_Filll-----------------------------------------------------------------------\n        if (shape.dynamic_fill?.on_off != undefined) {\n\n          //   console.log(\"Dynamic_Filll\")\n          // console.log( shape.dynamic_fill.on_off.on_color_when.__cdata)\n          var value = shape.dynamic_fill.on_off?.on_color_when?.__cdata;\n          //Removing DataTypes ---Float,\n          value = value.replace(\"static\", \"\");\n          value = value.replace(\"int\", \"\");\n          value = value.replace(\"float\", \"\");\n          value = value.replace(\"double\", \"\");\n          value = value.replace(\"bool\", \"\");\n          value = value.replace(\"boolean\", \"\");\n          value = value.replace(/\\r\\n|\\n|\\r/gm, \"$\");\n          value = value + \"$;\";\n          axios({\n            method: 'post',\n            url: getTagValueApi,\n            headers: {},\n            data: {\n              InputScript: value, // This is the body part\n            }\n          }).then((res) => {\n            //   console.log(res)\n            if (res.data.error === \"false\")\n              if (res.data.data == 'True' || res.data.data >= 1) {\n                setDynamicFill(hextoRGBA(shape.dynamic_fill.on_off.on_color))\n              } else if (res.data.data == 'False' || res.data.data == 0) {\n                setDynamicFill(hextoRGBA(shape.dynamic_fill.on_off.off_color))\n              }\n          });\n        }\n\n        //hidden_When-------------------------------------------------------------------------------------\n    if (shape.object.security != undefined) {\n      //  console.log(\"Hidden_when\")\n      var value = shape.object.security.hidden_when.__cdata;\n      //Removing DataTypes ---Float,\n      value = value.replace(\"static\", \"\");\n      value = value.replace(\"int\", \"\");\n      value = value.replace(\"float\", \"\");\n      value = value.replace(\"double\", \"\");\n      value = value.replace(\"bool\", \"\");\n      value = value.replace(\"boolean\", \"\");\n\n      value = value.replace(/\\r\\n|\\n|\\r/gm, \"$\");\n\n      value = value + \"$;\";\n      axios({\n        method: 'post',\n        url: getTagValueApi,\n        headers: {},\n        data: {\n          InputScript: value, // This is the body part\n        }\n      }).then((res) => {\n        if (res.data.error == \"false\") {\n          setDynamicFill(shape?.fill?.fill)\n          if (res.data.data == \"True\" || res.data.data >= 1) {\n            setHide(true)\n            // //console.log(\"Visible\")\n          } else if (res.data.data == \"False\" || res.data.data == 0) {\n            setHide(false)\n            ////console.log(\"Not Visible\")\n          }\n        }\n      });\n    }\n    \n    //Array--------------\n    if (shape.array != undefined) {\n      // console.log(\"Array\")\n      // console.log(\"Array\")\n      var value = shape.array.expression.__cdata;\n      var colorsList = shape.array.colors.__cdata;\n      // console.log(shape.array);\n      // console.log(colorsList);\n      if (value) {\n        value = value.replace(\"static\", \"\");\n        value = value.replace(\"int\", \"\");\n        value = value.replace(\"float\", \"\");\n        value = value.replace(\"double\", \"\");\n        value = value.replace(\"bool\", \"\");\n        value = value.replace(\"boolean\", \"\");\n        value = value.replace(/\\r\\n|\\n|\\r/gm, \"$\");\n        value = value + \"$;\";\n\n        axios({\n          method: 'post',\n          url: getTagValueApi,\n          data: {\n            InputScript: value, // This is the body part\n          }\n        }).then((res) => {\n\n          if (res.data.data != \"\") {\n            colorsList.map((color, i) => {\n\n              if (i == res.data.data) {\n                setDynamicFill(hextoRGBA(color))\n              }\n            })\n          }\n        });\n      }\n    }\n\n    //MultiState-------------------------------------------------------------------------------------------------\n    if (shape.dynamic_fill?.multi_state != undefined) {\n      //  console.log(\"MultiState\")\n      var conditions = shape.dynamic_fill.multi_state.condition?.__cdata;\n      var colors = shape.dynamic_fill.multi_state.color.__cdata;\n      // console.log(\"Multi State Data----------\")\n      // console.log(stateText);\n      var body1 = conditions[0];\n      body1 = body1.replace(\"static\", \"\");\n      body1 = body1.replace(\"int\", \"\");\n      body1 = body1.replace(\"float\", \"\");\n      body1 = body1.replace(\"double\", \"\");\n      body1 = body1.replace(\"bool\", \"\");\n      body1 = body1.replace(\"boolean\", \"\");\n      body1 = body1.replace(/\\r\\n|\\n|\\r/gm, \"$\");\n      body1 = body1 + \"$;\";\n      var body2 = conditions[1];\n      body2 = body2.replace(\"static\", \"\");\n      body2 = body2.replace(\"int\", \"\");\n      body2 = body2.replace(\"float\", \"\");\n      body2 = body2.replace(\"double\", \"\");\n      body2 = body2.replace(\"bool\", \"\");\n      body2 = body2.replace(\"boolean\", \"\");\n      body2 = body2.replace(/\\r\\n|\\n|\\r/gm, \"$\");\n      body2 = body2 + \"$;\";\n\n\n      if (conditions != null) {\n        //Condition A\n        axios({\n          method: 'post',\n          url: getTagValueApi,\n          headers: {},\n          data: {\n            InputScript: body1, // This is the body part\n          }\n        }).then((condition1Responce) => {\n          //Condition B\n\n          axios({\n            method: 'post',\n            url: getTagValueApi,\n            headers: {},\n            data: {\n              InputScript: body2, // This is the body part\n            }\n          }).then((condition2Responce) => {\n\n            if (condition1Responce.data.error == \"false\" && condition2Responce.data.error == \"false\") {\n              //0-0\n              if (condition1Responce.data.data == \"False\" && condition2Responce.data.data == \"False\") {\n\n                setDynamicFill(hextoRGBA(colors[0]))\n              }//0-1\n              else if (condition1Responce.data.data == \"False\" && condition2Responce.data.data == \"True\") {\n\n                setDynamicFill(hextoRGBA(colors[1]))\n              }//1-0\n              else if (condition1Responce.data.data == \"True\" && condition2Responce.data.data == \"False\") {\n\n                setDynamicFill(hextoRGBA(colors[2]))\n              }//1-1\n              else if (condition1Responce.data.data == \"True\" && condition2Responce.data.data == \"True\") {\n                setDynamicFill(hextoRGBA(colors[3]))\n              }\n            }\n          })\n        })\n        //   mutiState()\n      }\n    }\n\n\n    /// Dynamic_Fill_Level-------------------------------------------------------------------------------------\n    if (shape.dynamic_fill_level != undefined) {\n      console.log(\"Dynamic_Fill_Level\")\n      var value = shape.dynamic_fill_level.expression.__cdata;\n\n      var fillLevelColor = shape.dynamic_fill_level.background_color;\n      var direction = shape.dynamic_fill_level.fill_direction;\n      var maximumPoint = shape.dynamic_fill_level.maximum;\n      var minimumPoint = shape.dynamic_fill_level.minimum;\n      var levelAtMaximum = shape.dynamic_fill_level.levelAtMaximum;\n      var levelAtMinimun = shape.dynamic_fill_level.levelAtMinimun;\n\n      console.log(value)\n      if (value) {\n        value = value.replace(\"static\", \"\");\n        value = value.replace(\"int\", \"\");\n        value = value.replace(\"float\", \"\");\n        value = value.replace(\"double\", \"\");\n        value = value.replace(\"bool\", \"\");\n        value = value.replace(\"boolean\", \"\");\n        value = value.replace(/\\r\\n|\\n|\\r/gm, \"$\");\n        value = value + \"$;\";\n        axios({\n          method: 'post',\n          url: getTagValueApi,\n          data: {\n            InputScript: value, // This is the body part\n          }\n        }).then((res) => {\n          if (res.data.error == \"false\") {\n            //Maximumvalue and  and minimunvalue is TagValue limits----\n            //Percentage is the value made by Maximum and minimum value --\n            //now fetch tag value and find the tag value percentage based on based percentage\n            console.log(res.data.data);\n           setRefTagValue(res.data.data)\n          }\n        });\n      }\n    }\n  }\n\n\n\n\n \n\n  return (\n    <Line\n      key={\"Polygon_\" + shape.object.object_id + shape.object.object_number}\n      id={\"Polygon_\" + shape.object.object_id + shape.object.object_number}\n      points={getPolygonPoints(shape, parentX, parentY)}\n\n    //fill={shape.fill == undefined ? \"\" : shape.fill.fill == \"#5b5b5b\" ? \"#c0c0c0\"  :shape.fill.fill}\n     fill = {shape.dynamic_fill != undefined ? dynamcifill : shape.fill != undefined ? hextoRGBA(shape.fill.fill) : \"white\"}\n      visible={ shape.object.security != undefined ? hide :  true }\n      strokeWidth={parseFloat(shape.line.line_width) ?? 2}\n      stroke = {hextoRGBA(shape.line.color)  ?? \"black\"}\n     // strokeWidth={parseInt(shape.line.line_width)}\n      draggable={false}\n      dashEnabled={true}\n      dash={lineStyle(shape.line.style)}\n      closed={parseInt(shape.polyline.closed)}\n      // fillLinearGradientStartPoint={{ x: -50, y: -50 }}\n      // fillLinearGradientEndPoint={{ x: 50, y: 100 }}\n      // fillLinearGradientColorStops={[0,\"green\",1,\"red\"]}\n    >\n    </Line>\n  );\n};\n\nexport default UNCPolygon;\n","F:\\Konvo Model\\src\\components\\preFunctions.jsx",["742","743","744","745","746","747","748"],"import { Component } from \"react\";\nimport axios from 'axios';\n\n\nclass preFunctions extends Component{\n\n      static mainFunction(param,projectId,ObjectId) {\n\n        // var api = 'http://worldclockapi.com/api/json/est/now';\n      \n        // console.log(\"====================================\")\n        // console.log(api);\n        //  var val = \"\";\n\n        // var res =   axios.get(api).then(res => {           \n        //      val = res.data.currentFileTime ;\n        //      console.log(val)\n        //       } )\n\n        if(param != null )\n        {\n        var res = param.split(\"(\")\n   //     console.log(projectId+\"_\"+ObjectId+\"_\"+param)\n          switch(res[0])\n         {\n            //Page / Gul Interactions Functions---------------------------\n            case \"openPage\":\n                    //dll code \n             return res[1];\n             case \"openEcPopup\":\n             return res[1];\n             case \"mapEcPopup\":\n             return res[1];\n             case \"openAlarmPage\":\n             return res[0];\n             case \"openEventPage\":\n             return res[0];\n             case \"openHistoryAlarmPage\":\n            return res[0];\n            case \"openDayWiseAlarmPage\":\n            return res[0];\n            case \"openTrendPage\":\n            return res[0];\n            case \"openTelemetry\":\n            return res[1];\n            case \"openStandardReportDialog\":\n            return res[1];\n            case \"openMiniTrendPopup\":\n            return res[1];\n            case \"standardPopup\":\n            return res[1];\n            case \"openPreviousPage\":\n            return res[1];\n            case \"openNextPage\":\n            return res[1];\n            case \"openFilteredAlarmPage\":\n            return res[1];\n\n\n            //Security Functions-------------------------------------\n            case \"login\" :\n                return \"Login\" ;\n            case \"displayTime\" :\n                return 1  ;\n            case \"logoff\" :\n                return \"Logff\" ;\n\n            //Date & Time Functions------------------------------------\n            case \"displayDateTime\" :\n                return 1 ;\n            case \"displayTime\" :\n                return 1  ;\n            case \"displayDate\" :\n                return 1 ;\n\n            //Alarm & Event Functions------------------------------------\n            case \"sendAlarmAckByAll\" :\n                return  1;\n            case \"sendAlarmAckByPointId\" :\n                 return  1;\n            case \"sendAlarmAckByArea\" :\n                 return  res[1]; \n            case \"sendAlarmAckByDevice\" :\n                 return  1;\n            case \"sendAlarmAckByPriority\" :\n                     return  1;\n            case \"sendAlarmAckByAreaTag\" :\n                    return  1;\n            case \"sendAlarmAckBySystem\" :\n                    return  1; \n            case \"sendAlarmAckByAnalog\" :\n                    return  1;\n            case \"sendAlarmAckByDigital\" :\n                    return  1;\n            case \"getAreaAlarmStatus\" :\n                    return  100;\n            case \"getUnAckActiveAlarmCount\" :\n\n                    return  75; \n            case \"getAckActiveAlarmCount\" :\n\n            var x= 10;\n            var y = 20;\n            var z = 30\n                    return  eval(\"x + y + z\");\n            case \"getUnAckNormalAlarmCount\" :\n                    return  25;\n            case \"alarmByIndex\" :\n                    return  1; \n            case \"getAlarmAckStatus\" :\n                    return  1;\n            case \"messageByIndex\" :\n                    return  1;\n            case \"getAlarmPriorityByIndex\" :\n                    return  1;\n            case \"run_applicaiton\" :\n                    return  1; \n\n\n            //Miscellaneous Functions-------------------------------------\n            case \"getActiveServer\" :\n                    return  1;\n            case \"getMyHostName\" :\n                    return  1;\n            case \"getServerMode\" :\n                    return  75; \n            case \"inputString\" :\n                    return  100;\n            case \"inputNumber\" :\n                    return  25;\n            case \"inputNumaricValue\" :\n                    return  1; \n            case \"inputAnalogValue\" :\n                    return  1;\n            case \"getLastServerMessage\" :\n                    return  1;\n            case \"showMessage\" :\n                    return  1;\n            case \"displayVersion\" :\n                    return  1; \n            case \"quitHmi\" :\n                    return  100;\n            case \"commandBoxConfirmation\" :\n                    return  25;\n            case \"showMessageBox\" :\n                    return  1; \n            case \"waitForMsec\" :\n                    return  1;\n        \n            //ECSCADA Interface Functions--------------------------------\n            case \"tagAnalogValue\" :\n                return  1;\n            case \"tagDigitalValue\" :\n                    return  5; \n            case \"sendDigitalCommand\" :\n                    return  0;\n            case \"sendAnalogCommand\" :\n                    return  25;\n            case \"sendAnalogManualValue\" :\n                    return  1; \n            case \"sendDigitalManualValue\" :\n                    return  1;\n            case \"sendAnalogCalValue\" :\n                    return  1;\n            case \"sendDigitalCalValue\" :\n                    return  1;\n            case \"scanIn\" :\n                    return  1; \n            case \"scanOut\" :\n                return  1;\n            case \"demandScan\" :\n                    return  75; \n            case \"alarmInhibit\" :\n                    return  100;\n            case \"getTagName\" :\n                    return  25;\n            case \"getTagDesc \" :\n                    return  1; \n            case \"sendSecureAnalogCommand\" :\n                    return  1;\n            case \"sendSecureDigitalCommand\" :\n                    return  1;\n            case \"sendAnalogDirectManualValue\" :\n                    return  1;\n            case \"sendDigitalDirectManualValue\" :\n                    return  1; \n             case \"sendSecureTPLCAOCommand\" :\n                    return  1; \n            case \"sendSecureTPLCDOCommand\" :\n                return  1;\n            default :\n         }\n        }\n        }\n\n        static designLevelFunction(tag,projectId,ObjectId)\n        {       \n           console.log(projectId+\"_\"+ObjectId+\"_\"+tag)\n                switch(tag)\n                {\n                        case \"hidden_when\": \n                        //Call projectId_objectId_tag Dll unction and\n                        // get the Value return that value \n                        return false;\n\n                        case \"displayNumber\":\n                        //tagAnalogValue(AI_2AW2_L)\n                        return 56890.5;\n\n                        case \"displayString\":\n                        return \"DisplayString\";\n\n                        case \"dynamicfilllevel\":\n                        return 45.3;\n\n                        case \"dynamicFillArray\":\n                        return   78.5;\n\n                        case \"onTouchCommand\":\n                        return this.mainFunction(\"OPenPage(TEST_2A_S3,2)\",projectId,ObjectId)\n                }\n\n        }\n}\nexport default preFunctions;","F:\\Konvo Model\\src\\components\\APIUtil.jsx",["749","750"],"import ShapesData from \"../data/shapesData\";\n\nconst hmipage =\n  ShapesData.hmipage === undefined ? ShapesData : ShapesData.hmipage;\n\nconst { shapes, component_instances, labels } = hmipage; // Destructuring\n\nexport function ShapeComponets() {\n  let emptyCompObj = {\n    uuid: \"{4c64b6e1-bb25-442a-abf7-6fa6c5694ff5}\",\n    zIndex: \"0\",\n    objectNumber: \"0\",\n    x1: \"0\",\n    y1: \"0\",\n    x2: \"0\",\n    y2: \"0\",\n    objectId: \"\",\n    shape: [],\n    description: [],\n  };\n\n  let shapeComponetsList = [];\n\n  //if we have only Shapes\n  if (shapes !== undefined) {\n    if (Array.isArray(shapes)) {\n      shapes.map((obj, i) => emptyCompObj.shape.push(obj));\n\n      emptyCompObj.shape.sort((a, b) =>\n        parseInt(a.z_index) > parseInt(b.z_index) ? 1 : -1\n      );\n      shapeComponetsList.push(emptyCompObj);\n    } else if (shapes.shape !== undefined) {\n      emptyCompObj.shape.push(shapes.shape);\n      shapeComponetsList.push(emptyCompObj);\n    }\n  }\n\n  //component instances\n  if (component_instances !== undefined) {\n    if (Array.isArray(component_instances)) {\n      component_instances.map((obj, i) => {\n        if (obj.group === undefined) {\n          obj.shape.sort((a, b) =>\n            parseInt(a.box.z_index) > parseInt(b.box.z_index) ? 1 : -1\n          );\n          shapeComponetsList.push(obj);\n        } else {\n          obj.group.map((x) => {\n            x.shape.sort((a, b) =>\n              parseInt(a.box.z_index) > parseInt(b.box.z_index) ? 1 : -1\n            );\n            shapeComponetsList.push(x);\n          });\n        }\n      });\n    } else if (component_instances.componentInstance !== undefined) {\n      const { group } = component_instances.componentInstance;\n      if (group !== undefined) {\n        group.shape.sort((a, b) =>\n          parseInt(a.box.z_index) > parseInt(b.box.z_index) ? 1 : -1\n        );\n        shapeComponetsList.push(group);\n      } else {\n        component_instances.componentInstance.shape.sort((a, b) =>\n          parseInt(a.box.z_index) > parseInt(b.box.z_index) ? 1 : -1\n        );\n        console.log(component_instances.componentInstance.shape);\n        shapeComponetsList.push(component_instances.componentInstance);\n      }\n      //\n    } else {\n      console.log(\"else\");\n    }\n  }\n\n  return shapeComponetsList;\n}\n\nexport function LableComponets() {\n  let lableComponetsList = [];\n\n  if (labels !== undefined) {\n    if (Array.isArray(ShapesData.hmipage.labels)) {\n      labels.map((obj, i) => lableComponetsList.push(obj));\n    } else if (labels.text !== undefined) {\n      lableComponetsList.push(labels.text);\n    }\n  }\n\n  return lableComponetsList;\n}\n","F:\\Konvo Model\\src\\components\\Utils.jsx",["751","752","753","754"],{"ruleId":"755","severity":1,"message":"756","line":7,"column":8,"nodeType":"757","messageId":"758","endLine":7,"endColumn":16},{"ruleId":"755","severity":1,"message":"759","line":8,"column":8,"nodeType":"757","messageId":"758","endLine":8,"endColumn":14},{"ruleId":"755","severity":1,"message":"760","line":9,"column":8,"nodeType":"757","messageId":"758","endLine":9,"endColumn":16},{"ruleId":"755","severity":1,"message":"761","line":11,"column":8,"nodeType":"757","messageId":"758","endLine":11,"endColumn":19},{"ruleId":"755","severity":1,"message":"762","line":12,"column":8,"nodeType":"757","messageId":"758","endLine":12,"endColumn":18},{"ruleId":"755","severity":1,"message":"763","line":13,"column":8,"nodeType":"757","messageId":"758","endLine":13,"endColumn":17},{"ruleId":"755","severity":1,"message":"764","line":14,"column":8,"nodeType":"757","messageId":"758","endLine":14,"endColumn":18},{"ruleId":"755","severity":1,"message":"765","line":15,"column":8,"nodeType":"757","messageId":"758","endLine":15,"endColumn":15},{"ruleId":"766","replacedBy":"767"},{"ruleId":"768","replacedBy":"769"},{"ruleId":"755","severity":1,"message":"770","line":1,"column":8,"nodeType":"757","messageId":"758","endLine":1,"endColumn":12},{"ruleId":"755","severity":1,"message":"765","line":4,"column":8,"nodeType":"757","messageId":"758","endLine":4,"endColumn":15},{"ruleId":"755","severity":1,"message":"771","line":1,"column":15,"nodeType":"757","messageId":"758","endLine":1,"endColumn":24},{"ruleId":"755","severity":1,"message":"772","line":2,"column":9,"nodeType":"757","messageId":"758","endLine":2,"endColumn":13},{"ruleId":"755","severity":1,"message":"773","line":3,"column":19,"nodeType":"757","messageId":"758","endLine":3,"endColumn":25},{"ruleId":"755","severity":1,"message":"774","line":3,"column":27,"nodeType":"757","messageId":"758","endLine":3,"endColumn":30},{"ruleId":"775","severity":1,"message":"776","line":26,"column":60,"nodeType":"777","messageId":"778","endLine":26,"endColumn":62},{"ruleId":"775","severity":1,"message":"776","line":37,"column":47,"nodeType":"777","messageId":"778","endLine":37,"endColumn":49},{"ruleId":"779","severity":1,"message":"780","line":38,"column":9,"nodeType":"781","messageId":"782","endLine":49,"endColumn":10},{"ruleId":"779","severity":1,"message":"780","line":82,"column":9,"nodeType":"781","messageId":"782","endLine":93,"endColumn":10},{"ruleId":"755","severity":1,"message":"783","line":2,"column":10,"nodeType":"757","messageId":"758","endLine":2,"endColumn":24},{"ruleId":"755","severity":1,"message":"784","line":3,"column":12,"nodeType":"757","messageId":"758","endLine":3,"endColumn":25},{"ruleId":"755","severity":1,"message":"785","line":3,"column":27,"nodeType":"757","messageId":"758","endLine":3,"endColumn":40},{"ruleId":"755","severity":1,"message":"786","line":4,"column":12,"nodeType":"757","messageId":"758","endLine":4,"endColumn":20},{"ruleId":"755","severity":1,"message":"787","line":7,"column":5,"nodeType":"757","messageId":"758","endLine":7,"endColumn":13},{"ruleId":"755","severity":1,"message":"788","line":8,"column":5,"nodeType":"757","messageId":"758","endLine":8,"endColumn":10},{"ruleId":"755","severity":1,"message":"789","line":11,"column":5,"nodeType":"757","messageId":"758","endLine":11,"endColumn":12},{"ruleId":"755","severity":1,"message":"759","line":13,"column":5,"nodeType":"757","messageId":"758","endLine":13,"endColumn":11},{"ruleId":"755","severity":1,"message":"790","line":14,"column":5,"nodeType":"757","messageId":"758","endLine":14,"endColumn":9},{"ruleId":"755","severity":1,"message":"791","line":16,"column":5,"nodeType":"757","messageId":"758","endLine":16,"endColumn":8},{"ruleId":"755","severity":1,"message":"792","line":19,"column":25,"nodeType":"757","messageId":"758","endLine":19,"endColumn":32},{"ruleId":"755","severity":1,"message":"793","line":19,"column":47,"nodeType":"757","messageId":"758","endLine":19,"endColumn":55},{"ruleId":"755","severity":1,"message":"794","line":19,"column":63,"nodeType":"757","messageId":"758","endLine":19,"endColumn":74},{"ruleId":"755","severity":1,"message":"795","line":20,"column":12,"nodeType":"757","messageId":"758","endLine":20,"endColumn":25},{"ruleId":"755","severity":1,"message":"796","line":22,"column":10,"nodeType":"757","messageId":"758","endLine":22,"endColumn":22},{"ruleId":"755","severity":1,"message":"797","line":28,"column":10,"nodeType":"757","messageId":"758","endLine":28,"endColumn":19},{"ruleId":"755","severity":1,"message":"798","line":29,"column":10,"nodeType":"757","messageId":"758","endLine":29,"endColumn":20},{"ruleId":"755","severity":1,"message":"799","line":30,"column":12,"nodeType":"757","messageId":"758","endLine":30,"endColumn":21},{"ruleId":"755","severity":1,"message":"800","line":31,"column":12,"nodeType":"757","messageId":"758","endLine":31,"endColumn":26},{"ruleId":"755","severity":1,"message":"801","line":33,"column":10,"nodeType":"757","messageId":"758","endLine":33,"endColumn":17},{"ruleId":"755","severity":1,"message":"802","line":34,"column":10,"nodeType":"757","messageId":"758","endLine":34,"endColumn":24},{"ruleId":"755","severity":1,"message":"803","line":35,"column":12,"nodeType":"757","messageId":"758","endLine":35,"endColumn":17},{"ruleId":"755","severity":1,"message":"804","line":37,"column":12,"nodeType":"757","messageId":"758","endLine":37,"endColumn":23},{"ruleId":"755","severity":1,"message":"805","line":38,"column":12,"nodeType":"757","messageId":"758","endLine":38,"endColumn":33},{"ruleId":"755","severity":1,"message":"806","line":40,"column":12,"nodeType":"757","messageId":"758","endLine":40,"endColumn":25},{"ruleId":"755","severity":1,"message":"807","line":111,"column":11,"nodeType":"757","messageId":"758","endLine":111,"endColumn":13},{"ruleId":"808","severity":1,"message":"809","line":128,"column":29,"nodeType":"810","messageId":"811","endLine":128,"endColumn":30,"suggestions":"812"},{"ruleId":"813","severity":1,"message":"814","line":180,"column":39,"nodeType":"815","messageId":"816","endLine":180,"endColumn":41},{"ruleId":"817","severity":1,"message":"818","line":188,"column":15,"nodeType":"757","messageId":"819","endLine":188,"endColumn":20},{"ruleId":"813","severity":1,"message":"814","line":194,"column":19,"nodeType":"815","messageId":"816","endLine":194,"endColumn":21},{"ruleId":"775","severity":1,"message":"776","line":218,"column":29,"nodeType":"777","messageId":"778","endLine":218,"endColumn":31},{"ruleId":"813","severity":1,"message":"814","line":273,"column":24,"nodeType":"815","messageId":"816","endLine":273,"endColumn":26},{"ruleId":"779","severity":1,"message":"780","line":274,"column":11,"nodeType":"781","messageId":"782","endLine":335,"endColumn":14},{"ruleId":"813","severity":1,"message":"814","line":296,"column":49,"nodeType":"815","messageId":"816","endLine":296,"endColumn":51},{"ruleId":"820","severity":1,"message":"821","line":305,"column":15,"nodeType":"822","endLine":305,"endColumn":29},{"ruleId":"813","severity":1,"message":"814","line":322,"column":34,"nodeType":"815","messageId":"816","endLine":322,"endColumn":36},{"ruleId":"813","severity":1,"message":"814","line":325,"column":34,"nodeType":"815","messageId":"816","endLine":325,"endColumn":36},{"ruleId":"813","severity":1,"message":"814","line":349,"column":28,"nodeType":"815","messageId":"816","endLine":349,"endColumn":30},{"ruleId":"813","severity":1,"message":"823","line":355,"column":20,"nodeType":"815","messageId":"816","endLine":355,"endColumn":22},{"ruleId":"813","severity":1,"message":"814","line":364,"column":27,"nodeType":"815","messageId":"816","endLine":364,"endColumn":29},{"ruleId":"813","severity":1,"message":"814","line":392,"column":32,"nodeType":"815","messageId":"816","endLine":392,"endColumn":34},{"ruleId":"813","severity":1,"message":"814","line":403,"column":31,"nodeType":"815","messageId":"816","endLine":403,"endColumn":33},{"ruleId":"813","severity":1,"message":"814","line":415,"column":32,"nodeType":"815","messageId":"816","endLine":415,"endColumn":34},{"ruleId":"755","severity":1,"message":"824","line":494,"column":23,"nodeType":"757","messageId":"758","endLine":494,"endColumn":29},{"ruleId":"825","severity":1,"message":"826","line":502,"column":15,"nodeType":"827","endLine":507,"endColumn":17},{"ruleId":"813","severity":1,"message":"814","line":594,"column":30,"nodeType":"815","messageId":"816","endLine":594,"endColumn":32},{"ruleId":"813","severity":1,"message":"814","line":594,"column":72,"nodeType":"815","messageId":"816","endLine":594,"endColumn":74},{"ruleId":"813","severity":1,"message":"814","line":613,"column":40,"nodeType":"815","messageId":"816","endLine":613,"endColumn":42},{"ruleId":"813","severity":1,"message":"814","line":658,"column":39,"nodeType":"815","messageId":"816","endLine":658,"endColumn":41},{"ruleId":"813","severity":1,"message":"814","line":669,"column":41,"nodeType":"815","messageId":"816","endLine":669,"endColumn":43},{"ruleId":"813","severity":1,"message":"814","line":673,"column":44,"nodeType":"815","messageId":"816","endLine":673,"endColumn":46},{"ruleId":"813","severity":1,"message":"814","line":681,"column":50,"nodeType":"815","messageId":"816","endLine":681,"endColumn":52},{"ruleId":"813","severity":1,"message":"814","line":698,"column":42,"nodeType":"815","messageId":"816","endLine":698,"endColumn":44},{"ruleId":"775","severity":1,"message":"828","line":699,"column":47,"nodeType":"777","messageId":"829","endLine":699,"endColumn":49},{"ruleId":"813","severity":1,"message":"814","line":705,"column":51,"nodeType":"815","messageId":"816","endLine":705,"endColumn":53},{"ruleId":"813","severity":1,"message":"814","line":716,"column":52,"nodeType":"815","messageId":"816","endLine":716,"endColumn":54},{"ruleId":"813","severity":1,"message":"814","line":731,"column":52,"nodeType":"815","messageId":"816","endLine":731,"endColumn":54},{"ruleId":"813","severity":1,"message":"814","line":750,"column":40,"nodeType":"815","messageId":"816","endLine":750,"endColumn":42},{"ruleId":"755","severity":1,"message":"830","line":1,"column":8,"nodeType":"757","messageId":"758","endLine":1,"endColumn":13},{"ruleId":"755","severity":1,"message":"831","line":3,"column":8,"nodeType":"757","messageId":"758","endLine":3,"endColumn":16},{"ruleId":"755","severity":1,"message":"832","line":4,"column":10,"nodeType":"757","messageId":"758","endLine":4,"endColumn":16},{"ruleId":"755","severity":1,"message":"787","line":5,"column":17,"nodeType":"757","messageId":"758","endLine":5,"endColumn":25},{"ruleId":"755","severity":1,"message":"788","line":5,"column":27,"nodeType":"757","messageId":"758","endLine":5,"endColumn":32},{"ruleId":"755","severity":1,"message":"759","line":5,"column":60,"nodeType":"757","messageId":"758","endLine":5,"endColumn":66},{"ruleId":"755","severity":1,"message":"791","line":5,"column":79,"nodeType":"757","messageId":"758","endLine":5,"endColumn":82},{"ruleId":"779","severity":1,"message":"780","line":52,"column":9,"nodeType":"781","messageId":"782","endLine":58,"endColumn":10},{"ruleId":"779","severity":1,"message":"780","line":64,"column":9,"nodeType":"781","messageId":"782","endLine":71,"endColumn":10},{"ruleId":"779","severity":1,"message":"780","line":78,"column":9,"nodeType":"781","messageId":"782","endLine":87,"endColumn":10},{"ruleId":"779","severity":1,"message":"780","line":136,"column":13,"nodeType":"781","messageId":"782","endLine":221,"endColumn":14},{"ruleId":"833","severity":1,"message":"834","line":152,"column":52,"nodeType":"835","messageId":"836","endLine":152,"endColumn":53},{"ruleId":"837","severity":1,"message":"838","line":158,"column":21,"nodeType":"839","messageId":"840","endLine":158,"endColumn":27},{"ruleId":"837","severity":1,"message":"838","line":176,"column":25,"nodeType":"839","messageId":"840","endLine":176,"endColumn":31},{"ruleId":"813","severity":1,"message":"823","line":182,"column":37,"nodeType":"815","messageId":"816","endLine":182,"endColumn":39},{"ruleId":"813","severity":1,"message":"823","line":196,"column":37,"nodeType":"815","messageId":"816","endLine":196,"endColumn":39},{"ruleId":"833","severity":1,"message":"834","line":203,"column":52,"nodeType":"835","messageId":"836","endLine":203,"endColumn":53},{"ruleId":"813","severity":1,"message":"823","line":210,"column":37,"nodeType":"815","messageId":"816","endLine":210,"endColumn":39},{"ruleId":"837","severity":1,"message":"838","line":215,"column":21,"nodeType":"839","messageId":"840","endLine":215,"endColumn":27},{"ruleId":"837","severity":1,"message":"838","line":219,"column":25,"nodeType":"839","messageId":"840","endLine":219,"endColumn":31},{"ruleId":"820","severity":1,"message":"821","line":253,"column":17,"nodeType":"822","endLine":253,"endColumn":22},{"ruleId":"755","severity":1,"message":"831","line":2,"column":8,"nodeType":"757","messageId":"758","endLine":2,"endColumn":16},{"ruleId":"755","severity":1,"message":"832","line":3,"column":10,"nodeType":"757","messageId":"758","endLine":3,"endColumn":16},{"ruleId":"755","severity":1,"message":"841","line":4,"column":30,"nodeType":"757","messageId":"758","endLine":4,"endColumn":34},{"ruleId":"755","severity":1,"message":"842","line":4,"column":44,"nodeType":"757","messageId":"758","endLine":4,"endColumn":48},{"ruleId":"755","severity":1,"message":"759","line":4,"column":50,"nodeType":"757","messageId":"758","endLine":4,"endColumn":56},{"ruleId":"755","severity":1,"message":"790","line":4,"column":58,"nodeType":"757","messageId":"758","endLine":4,"endColumn":62},{"ruleId":"755","severity":1,"message":"791","line":4,"column":69,"nodeType":"757","messageId":"758","endLine":4,"endColumn":72},{"ruleId":"755","severity":1,"message":"843","line":14,"column":13,"nodeType":"757","messageId":"758","endLine":14,"endColumn":23},{"ruleId":"755","severity":1,"message":"844","line":15,"column":13,"nodeType":"757","messageId":"758","endLine":15,"endColumn":23},{"ruleId":"820","severity":1,"message":"821","line":38,"column":19,"nodeType":"822","endLine":38,"endColumn":41},{"ruleId":"833","severity":1,"message":"834","line":93,"column":90,"nodeType":"835","messageId":"836","endLine":93,"endColumn":91},{"ruleId":"755","severity":1,"message":"798","line":2,"column":8,"nodeType":"757","messageId":"758","endLine":2,"endColumn":18},{"ruleId":"755","severity":1,"message":"845","line":3,"column":10,"nodeType":"757","messageId":"758","endLine":3,"endColumn":24},{"ruleId":"755","severity":1,"message":"846","line":3,"column":26,"nodeType":"757","messageId":"758","endLine":3,"endColumn":40},{"ruleId":"813","severity":1,"message":"823","line":31,"column":22,"nodeType":"815","messageId":"816","endLine":31,"endColumn":24},{"ruleId":"813","severity":1,"message":"823","line":41,"column":29,"nodeType":"815","messageId":"816","endLine":41,"endColumn":31},{"ruleId":"755","severity":1,"message":"786","line":1,"column":17,"nodeType":"757","messageId":"758","endLine":1,"endColumn":25},{"ruleId":"755","severity":1,"message":"847","line":1,"column":27,"nodeType":"757","messageId":"758","endLine":1,"endColumn":36},{"ruleId":"755","severity":1,"message":"848","line":3,"column":3,"nodeType":"757","messageId":"758","endLine":3,"endColumn":8},{"ruleId":"755","severity":1,"message":"787","line":4,"column":3,"nodeType":"757","messageId":"758","endLine":4,"endColumn":11},{"ruleId":"755","severity":1,"message":"788","line":5,"column":3,"nodeType":"757","messageId":"758","endLine":5,"endColumn":8},{"ruleId":"755","severity":1,"message":"849","line":6,"column":3,"nodeType":"757","messageId":"758","endLine":6,"endColumn":8},{"ruleId":"755","severity":1,"message":"841","line":7,"column":3,"nodeType":"757","messageId":"758","endLine":7,"endColumn":7},{"ruleId":"755","severity":1,"message":"789","line":8,"column":3,"nodeType":"757","messageId":"758","endLine":8,"endColumn":10},{"ruleId":"755","severity":1,"message":"759","line":10,"column":3,"nodeType":"757","messageId":"758","endLine":10,"endColumn":9},{"ruleId":"755","severity":1,"message":"790","line":11,"column":3,"nodeType":"757","messageId":"758","endLine":11,"endColumn":7},{"ruleId":"755","severity":1,"message":"850","line":12,"column":3,"nodeType":"757","messageId":"758","endLine":12,"endColumn":8},{"ruleId":"755","severity":1,"message":"791","line":13,"column":3,"nodeType":"757","messageId":"758","endLine":13,"endColumn":6},{"ruleId":"755","severity":1,"message":"851","line":14,"column":3,"nodeType":"757","messageId":"758","endLine":14,"endColumn":8},{"ruleId":"755","severity":1,"message":"795","line":2,"column":10,"nodeType":"757","messageId":"758","endLine":2,"endColumn":23},{"ruleId":"755","severity":1,"message":"806","line":5,"column":25,"nodeType":"757","messageId":"758","endLine":5,"endColumn":38},{"ruleId":"852","severity":1,"message":"853","line":27,"column":25,"nodeType":"810","messageId":"854","endLine":27,"endColumn":30,"fix":"855"},{"ruleId":"856","severity":1,"message":"857","line":43,"column":8,"nodeType":"757","messageId":"858","endLine":43,"endColumn":13},{"ruleId":"856","severity":1,"message":"857","line":44,"column":12,"nodeType":"757","messageId":"858","endLine":44,"endColumn":17},{"ruleId":"856","severity":1,"message":"857","line":46,"column":10,"nodeType":"757","messageId":"858","endLine":46,"endColumn":15},{"ruleId":"856","severity":1,"message":"857","line":46,"column":18,"nodeType":"757","messageId":"858","endLine":46,"endColumn":23},{"ruleId":"856","severity":1,"message":"857","line":47,"column":10,"nodeType":"757","messageId":"858","endLine":47,"endColumn":15},{"ruleId":"856","severity":1,"message":"857","line":47,"column":18,"nodeType":"757","messageId":"858","endLine":47,"endColumn":23},{"ruleId":"856","severity":1,"message":"857","line":48,"column":10,"nodeType":"757","messageId":"858","endLine":48,"endColumn":15},{"ruleId":"856","severity":1,"message":"857","line":48,"column":18,"nodeType":"757","messageId":"858","endLine":48,"endColumn":23},{"ruleId":"856","severity":1,"message":"857","line":49,"column":10,"nodeType":"757","messageId":"858","endLine":49,"endColumn":15},{"ruleId":"856","severity":1,"message":"857","line":49,"column":18,"nodeType":"757","messageId":"858","endLine":49,"endColumn":23},{"ruleId":"856","severity":1,"message":"857","line":50,"column":10,"nodeType":"757","messageId":"858","endLine":50,"endColumn":15},{"ruleId":"856","severity":1,"message":"857","line":50,"column":18,"nodeType":"757","messageId":"858","endLine":50,"endColumn":23},{"ruleId":"856","severity":1,"message":"857","line":51,"column":10,"nodeType":"757","messageId":"858","endLine":51,"endColumn":15},{"ruleId":"856","severity":1,"message":"857","line":51,"column":18,"nodeType":"757","messageId":"858","endLine":51,"endColumn":23},{"ruleId":"856","severity":1,"message":"857","line":52,"column":10,"nodeType":"757","messageId":"858","endLine":52,"endColumn":15},{"ruleId":"856","severity":1,"message":"857","line":52,"column":18,"nodeType":"757","messageId":"858","endLine":52,"endColumn":23},{"ruleId":"856","severity":1,"message":"857","line":53,"column":10,"nodeType":"757","messageId":"858","endLine":53,"endColumn":15},{"ruleId":"856","severity":1,"message":"857","line":53,"column":18,"nodeType":"757","messageId":"858","endLine":53,"endColumn":23},{"ruleId":"856","severity":1,"message":"857","line":58,"column":27,"nodeType":"757","messageId":"858","endLine":58,"endColumn":32},{"ruleId":"813","severity":1,"message":"823","line":62,"column":31,"nodeType":"815","messageId":"816","endLine":62,"endColumn":33},{"ruleId":"856","severity":1,"message":"857","line":71,"column":10,"nodeType":"757","messageId":"858","endLine":71,"endColumn":15},{"ruleId":"856","severity":1,"message":"857","line":72,"column":10,"nodeType":"757","messageId":"858","endLine":72,"endColumn":15},{"ruleId":"856","severity":1,"message":"857","line":72,"column":18,"nodeType":"757","messageId":"858","endLine":72,"endColumn":23},{"ruleId":"856","severity":1,"message":"857","line":73,"column":10,"nodeType":"757","messageId":"858","endLine":73,"endColumn":15},{"ruleId":"856","severity":1,"message":"857","line":73,"column":18,"nodeType":"757","messageId":"858","endLine":73,"endColumn":23},{"ruleId":"856","severity":1,"message":"857","line":74,"column":10,"nodeType":"757","messageId":"858","endLine":74,"endColumn":15},{"ruleId":"856","severity":1,"message":"857","line":74,"column":18,"nodeType":"757","messageId":"858","endLine":74,"endColumn":23},{"ruleId":"856","severity":1,"message":"857","line":75,"column":10,"nodeType":"757","messageId":"858","endLine":75,"endColumn":15},{"ruleId":"856","severity":1,"message":"857","line":75,"column":18,"nodeType":"757","messageId":"858","endLine":75,"endColumn":23},{"ruleId":"856","severity":1,"message":"857","line":76,"column":10,"nodeType":"757","messageId":"858","endLine":76,"endColumn":15},{"ruleId":"856","severity":1,"message":"857","line":76,"column":18,"nodeType":"757","messageId":"858","endLine":76,"endColumn":23},{"ruleId":"852","severity":1,"message":"853","line":76,"column":32,"nodeType":"810","messageId":"854","endLine":76,"endColumn":37,"fix":"859"},{"ruleId":"856","severity":1,"message":"857","line":82,"column":8,"nodeType":"757","messageId":"858","endLine":82,"endColumn":13},{"ruleId":"856","severity":1,"message":"857","line":83,"column":12,"nodeType":"757","messageId":"858","endLine":83,"endColumn":17},{"ruleId":"856","severity":1,"message":"857","line":85,"column":10,"nodeType":"757","messageId":"858","endLine":85,"endColumn":15},{"ruleId":"856","severity":1,"message":"857","line":85,"column":18,"nodeType":"757","messageId":"858","endLine":85,"endColumn":23},{"ruleId":"856","severity":1,"message":"857","line":86,"column":10,"nodeType":"757","messageId":"858","endLine":86,"endColumn":15},{"ruleId":"856","severity":1,"message":"857","line":86,"column":18,"nodeType":"757","messageId":"858","endLine":86,"endColumn":23},{"ruleId":"856","severity":1,"message":"857","line":87,"column":10,"nodeType":"757","messageId":"858","endLine":87,"endColumn":15},{"ruleId":"856","severity":1,"message":"857","line":87,"column":18,"nodeType":"757","messageId":"858","endLine":87,"endColumn":23},{"ruleId":"856","severity":1,"message":"857","line":88,"column":10,"nodeType":"757","messageId":"858","endLine":88,"endColumn":15},{"ruleId":"856","severity":1,"message":"857","line":88,"column":18,"nodeType":"757","messageId":"858","endLine":88,"endColumn":23},{"ruleId":"856","severity":1,"message":"857","line":89,"column":10,"nodeType":"757","messageId":"858","endLine":89,"endColumn":15},{"ruleId":"856","severity":1,"message":"857","line":89,"column":18,"nodeType":"757","messageId":"858","endLine":89,"endColumn":23},{"ruleId":"856","severity":1,"message":"857","line":90,"column":10,"nodeType":"757","messageId":"858","endLine":90,"endColumn":15},{"ruleId":"856","severity":1,"message":"857","line":90,"column":18,"nodeType":"757","messageId":"858","endLine":90,"endColumn":23},{"ruleId":"856","severity":1,"message":"857","line":92,"column":10,"nodeType":"757","messageId":"858","endLine":92,"endColumn":15},{"ruleId":"856","severity":1,"message":"857","line":92,"column":18,"nodeType":"757","messageId":"858","endLine":92,"endColumn":23},{"ruleId":"856","severity":1,"message":"857","line":94,"column":10,"nodeType":"757","messageId":"858","endLine":94,"endColumn":15},{"ruleId":"856","severity":1,"message":"857","line":94,"column":18,"nodeType":"757","messageId":"858","endLine":94,"endColumn":23},{"ruleId":"856","severity":1,"message":"857","line":101,"column":27,"nodeType":"757","messageId":"858","endLine":101,"endColumn":32},{"ruleId":"813","severity":1,"message":"823","line":104,"column":31,"nodeType":"815","messageId":"816","endLine":104,"endColumn":33},{"ruleId":"813","severity":1,"message":"823","line":105,"column":32,"nodeType":"815","messageId":"816","endLine":105,"endColumn":34},{"ruleId":"813","severity":1,"message":"823","line":108,"column":39,"nodeType":"815","messageId":"816","endLine":108,"endColumn":41},{"ruleId":"856","severity":1,"message":"857","line":114,"column":10,"nodeType":"757","messageId":"858","endLine":114,"endColumn":15},{"ruleId":"856","severity":1,"message":"857","line":115,"column":10,"nodeType":"757","messageId":"858","endLine":115,"endColumn":15},{"ruleId":"856","severity":1,"message":"857","line":115,"column":18,"nodeType":"757","messageId":"858","endLine":115,"endColumn":23},{"ruleId":"856","severity":1,"message":"857","line":116,"column":10,"nodeType":"757","messageId":"858","endLine":116,"endColumn":15},{"ruleId":"856","severity":1,"message":"857","line":116,"column":18,"nodeType":"757","messageId":"858","endLine":116,"endColumn":23},{"ruleId":"856","severity":1,"message":"857","line":117,"column":10,"nodeType":"757","messageId":"858","endLine":117,"endColumn":15},{"ruleId":"856","severity":1,"message":"857","line":117,"column":18,"nodeType":"757","messageId":"858","endLine":117,"endColumn":23},{"ruleId":"856","severity":1,"message":"857","line":118,"column":10,"nodeType":"757","messageId":"858","endLine":118,"endColumn":15},{"ruleId":"856","severity":1,"message":"857","line":118,"column":18,"nodeType":"757","messageId":"858","endLine":118,"endColumn":23},{"ruleId":"856","severity":1,"message":"857","line":119,"column":10,"nodeType":"757","messageId":"858","endLine":119,"endColumn":15},{"ruleId":"856","severity":1,"message":"857","line":119,"column":18,"nodeType":"757","messageId":"858","endLine":119,"endColumn":23},{"ruleId":"852","severity":1,"message":"853","line":119,"column":32,"nodeType":"810","messageId":"854","endLine":119,"endColumn":37,"fix":"860"},{"ruleId":"775","severity":1,"message":"776","line":147,"column":49,"nodeType":"777","messageId":"778","endLine":147,"endColumn":51},{"ruleId":"813","severity":1,"message":"823","line":149,"column":22,"nodeType":"815","messageId":"816","endLine":149,"endColumn":24},{"ruleId":"852","severity":1,"message":"853","line":161,"column":32,"nodeType":"810","messageId":"854","endLine":161,"endColumn":37,"fix":"861"},{"ruleId":"813","severity":1,"message":"823","line":211,"column":48,"nodeType":"815","messageId":"816","endLine":211,"endColumn":50},{"ruleId":"813","severity":1,"message":"823","line":211,"column":92,"nodeType":"815","messageId":"816","endLine":211,"endColumn":94},{"ruleId":"813","severity":1,"message":"823","line":214,"column":49,"nodeType":"815","messageId":"816","endLine":214,"endColumn":51},{"ruleId":"813","severity":1,"message":"823","line":214,"column":92,"nodeType":"815","messageId":"816","endLine":214,"endColumn":94},{"ruleId":"813","severity":1,"message":"823","line":218,"column":54,"nodeType":"815","messageId":"816","endLine":218,"endColumn":56},{"ruleId":"813","severity":1,"message":"823","line":218,"column":97,"nodeType":"815","messageId":"816","endLine":218,"endColumn":99},{"ruleId":"813","severity":1,"message":"823","line":222,"column":54,"nodeType":"815","messageId":"816","endLine":222,"endColumn":56},{"ruleId":"813","severity":1,"message":"823","line":222,"column":96,"nodeType":"815","messageId":"816","endLine":222,"endColumn":98},{"ruleId":"813","severity":1,"message":"823","line":226,"column":54,"nodeType":"815","messageId":"816","endLine":226,"endColumn":56},{"ruleId":"813","severity":1,"message":"823","line":226,"column":96,"nodeType":"815","messageId":"816","endLine":226,"endColumn":98},{"ruleId":"852","severity":1,"message":"853","line":240,"column":32,"nodeType":"810","messageId":"854","endLine":240,"endColumn":37,"fix":"862"},{"ruleId":"817","severity":1,"message":"818","line":247,"column":12,"nodeType":"757","messageId":"819","endLine":247,"endColumn":17},{"ruleId":"813","severity":1,"message":"823","line":269,"column":32,"nodeType":"815","messageId":"816","endLine":269,"endColumn":34},{"ruleId":"813","severity":1,"message":"823","line":271,"column":39,"nodeType":"815","messageId":"816","endLine":271,"endColumn":41},{"ruleId":"852","severity":1,"message":"853","line":282,"column":32,"nodeType":"810","messageId":"854","endLine":282,"endColumn":37,"fix":"863"},{"ruleId":"813","severity":1,"message":"823","line":289,"column":28,"nodeType":"815","messageId":"816","endLine":289,"endColumn":30},{"ruleId":"813","severity":1,"message":"823","line":290,"column":25,"nodeType":"815","messageId":"816","endLine":290,"endColumn":27},{"ruleId":"813","severity":1,"message":"823","line":291,"column":24,"nodeType":"815","messageId":"816","endLine":291,"endColumn":26},{"ruleId":"813","severity":1,"message":"823","line":291,"column":66,"nodeType":"815","messageId":"816","endLine":291,"endColumn":68},{"ruleId":"852","severity":1,"message":"853","line":298,"column":27,"nodeType":"810","messageId":"854","endLine":298,"endColumn":32,"fix":"864"},{"ruleId":"813","severity":1,"message":"823","line":312,"column":32,"nodeType":"815","messageId":"816","endLine":312,"endColumn":34},{"ruleId":"813","severity":1,"message":"823","line":313,"column":27,"nodeType":"815","messageId":"816","endLine":313,"endColumn":29},{"ruleId":"813","severity":1,"message":"823","line":314,"column":26,"nodeType":"815","messageId":"816","endLine":314,"endColumn":28},{"ruleId":"813","severity":1,"message":"823","line":314,"column":67,"nodeType":"815","messageId":"816","endLine":314,"endColumn":69},{"ruleId":"755","severity":1,"message":"865","line":1,"column":10,"nodeType":"757","messageId":"758","endLine":1,"endColumn":15},{"ruleId":"779","severity":1,"message":"780","line":6,"column":3,"nodeType":"781","messageId":"782","endLine":20,"endColumn":4},{"ruleId":"779","severity":1,"message":"780","line":28,"column":3,"nodeType":"781","messageId":"782","endLine":42,"endColumn":4},{"ruleId":"775","severity":1,"message":"776","line":79,"column":19,"nodeType":"777","messageId":"778","endLine":79,"endColumn":21},{"ruleId":"813","severity":1,"message":"823","line":82,"column":17,"nodeType":"815","messageId":"816","endLine":82,"endColumn":19},{"ruleId":"813","severity":1,"message":"823","line":82,"column":33,"nodeType":"815","messageId":"816","endLine":82,"endColumn":35},{"ruleId":"775","severity":1,"message":"776","line":129,"column":19,"nodeType":"777","messageId":"778","endLine":129,"endColumn":21},{"ruleId":"813","severity":1,"message":"823","line":132,"column":17,"nodeType":"815","messageId":"816","endLine":132,"endColumn":19},{"ruleId":"813","severity":1,"message":"823","line":132,"column":33,"nodeType":"815","messageId":"816","endLine":132,"endColumn":35},{"ruleId":"775","severity":1,"message":"776","line":163,"column":21,"nodeType":"777","messageId":"778","endLine":163,"endColumn":23},{"ruleId":"813","severity":1,"message":"823","line":165,"column":17,"nodeType":"815","messageId":"816","endLine":165,"endColumn":19},{"ruleId":"813","severity":1,"message":"823","line":165,"column":33,"nodeType":"815","messageId":"816","endLine":165,"endColumn":35},{"ruleId":"755","severity":1,"message":"866","line":1,"column":10,"nodeType":"757","messageId":"758","endLine":1,"endColumn":13},{"ruleId":"755","severity":1,"message":"867","line":2,"column":10,"nodeType":"757","messageId":"758","endLine":2,"endColumn":19},{"ruleId":"755","severity":1,"message":"868","line":3,"column":10,"nodeType":"757","messageId":"758","endLine":3,"endColumn":15},{"ruleId":"813","severity":1,"message":"814","line":19,"column":26,"nodeType":"815","messageId":"816","endLine":19,"endColumn":28},{"ruleId":"813","severity":1,"message":"814","line":22,"column":39,"nodeType":"815","messageId":"816","endLine":22,"endColumn":41},{"ruleId":"813","severity":1,"message":"814","line":24,"column":35,"nodeType":"815","messageId":"816","endLine":24,"endColumn":37},{"ruleId":"775","severity":1,"message":"776","line":146,"column":40,"nodeType":"777","messageId":"778","endLine":146,"endColumn":42},{"ruleId":"775","severity":1,"message":"776","line":154,"column":29,"nodeType":"777","messageId":"778","endLine":154,"endColumn":31},{"ruleId":"775","severity":1,"message":"776","line":170,"column":23,"nodeType":"777","messageId":"778","endLine":170,"endColumn":25},{"ruleId":"775","severity":1,"message":"776","line":181,"column":29,"nodeType":"777","messageId":"778","endLine":181,"endColumn":31},{"ruleId":"813","severity":1,"message":"814","line":187,"column":29,"nodeType":"815","messageId":"816","endLine":187,"endColumn":31},{"ruleId":"813","severity":1,"message":"814","line":198,"column":28,"nodeType":"815","messageId":"816","endLine":198,"endColumn":30},{"ruleId":"813","severity":1,"message":"814","line":211,"column":19,"nodeType":"815","messageId":"816","endLine":211,"endColumn":21},{"ruleId":"813","severity":1,"message":"814","line":223,"column":18,"nodeType":"815","messageId":"816","endLine":223,"endColumn":20},{"ruleId":"775","severity":1,"message":"776","line":249,"column":27,"nodeType":"777","messageId":"778","endLine":249,"endColumn":29},{"ruleId":"813","severity":1,"message":"814","line":257,"column":27,"nodeType":"815","messageId":"816","endLine":257,"endColumn":29},{"ruleId":"813","severity":1,"message":"814","line":268,"column":26,"nodeType":"815","messageId":"816","endLine":268,"endColumn":28},{"ruleId":"813","severity":1,"message":"814","line":280,"column":17,"nodeType":"815","messageId":"816","endLine":280,"endColumn":19},{"ruleId":"813","severity":1,"message":"814","line":292,"column":16,"nodeType":"815","messageId":"816","endLine":292,"endColumn":18},{"ruleId":"775","severity":1,"message":"776","line":317,"column":27,"nodeType":"777","messageId":"778","endLine":317,"endColumn":29},{"ruleId":"775","severity":1,"message":"776","line":321,"column":29,"nodeType":"777","messageId":"778","endLine":321,"endColumn":31},{"ruleId":"775","severity":1,"message":"776","line":344,"column":23,"nodeType":"777","messageId":"778","endLine":344,"endColumn":25},{"ruleId":"775","severity":1,"message":"776","line":375,"column":34,"nodeType":"777","messageId":"778","endLine":375,"endColumn":36},{"ruleId":"813","severity":1,"message":"814","line":402,"column":31,"nodeType":"815","messageId":"816","endLine":402,"endColumn":33},{"ruleId":"775","severity":1,"message":"776","line":408,"column":43,"nodeType":"777","messageId":"778","endLine":408,"endColumn":45},{"ruleId":"813","severity":1,"message":"814","line":411,"column":23,"nodeType":"815","messageId":"816","endLine":411,"endColumn":25},{"ruleId":"775","severity":1,"message":"776","line":416,"column":38,"nodeType":"777","messageId":"778","endLine":416,"endColumn":40},{"ruleId":"813","severity":1,"message":"814","line":424,"column":23,"nodeType":"815","messageId":"816","endLine":424,"endColumn":25},{"ruleId":"813","severity":1,"message":"814","line":435,"column":22,"nodeType":"815","messageId":"816","endLine":435,"endColumn":24},{"ruleId":"817","severity":1,"message":"869","line":453,"column":31,"nodeType":"757","messageId":"819","endLine":453,"endColumn":35},{"ruleId":"813","severity":1,"message":"814","line":455,"column":21,"nodeType":"815","messageId":"816","endLine":455,"endColumn":23},{"ruleId":"775","severity":1,"message":"776","line":461,"column":36,"nodeType":"777","messageId":"778","endLine":461,"endColumn":38},{"ruleId":"813","severity":1,"message":"814","line":470,"column":21,"nodeType":"815","messageId":"816","endLine":470,"endColumn":23},{"ruleId":"813","severity":1,"message":"814","line":481,"column":20,"nodeType":"815","messageId":"816","endLine":481,"endColumn":22},{"ruleId":"813","severity":1,"message":"814","line":505,"column":42,"nodeType":"815","messageId":"816","endLine":505,"endColumn":44},{"ruleId":"775","severity":1,"message":"776","line":512,"column":54,"nodeType":"777","messageId":"778","endLine":512,"endColumn":56},{"ruleId":"813","severity":1,"message":"814","line":515,"column":23,"nodeType":"815","messageId":"816","endLine":515,"endColumn":25},{"ruleId":"775","severity":1,"message":"776","line":520,"column":38,"nodeType":"777","messageId":"778","endLine":520,"endColumn":40},{"ruleId":"813","severity":1,"message":"814","line":529,"column":23,"nodeType":"815","messageId":"816","endLine":529,"endColumn":25},{"ruleId":"813","severity":1,"message":"814","line":540,"column":22,"nodeType":"815","messageId":"816","endLine":540,"endColumn":24},{"ruleId":"813","severity":1,"message":"814","line":560,"column":21,"nodeType":"815","messageId":"816","endLine":560,"endColumn":23},{"ruleId":"775","severity":1,"message":"776","line":566,"column":36,"nodeType":"777","messageId":"778","endLine":566,"endColumn":38},{"ruleId":"813","severity":1,"message":"814","line":575,"column":21,"nodeType":"815","messageId":"816","endLine":575,"endColumn":23},{"ruleId":"813","severity":1,"message":"814","line":586,"column":20,"nodeType":"815","messageId":"816","endLine":586,"endColumn":22},{"ruleId":"817","severity":1,"message":"869","line":602,"column":15,"nodeType":"757","messageId":"819","endLine":602,"endColumn":19},{"ruleId":"775","severity":1,"message":"776","line":624,"column":45,"nodeType":"777","messageId":"778","endLine":624,"endColumn":47},{"ruleId":"813","severity":1,"message":"814","line":663,"column":26,"nodeType":"815","messageId":"816","endLine":663,"endColumn":28},{"ruleId":"755","severity":1,"message":"870","line":680,"column":9,"nodeType":"757","messageId":"758","endLine":680,"endColumn":25},{"ruleId":"813","severity":1,"message":"823","line":129,"column":32,"nodeType":"815","messageId":"816","endLine":129,"endColumn":34},{"ruleId":"755","severity":1,"message":"871","line":148,"column":4,"nodeType":"757","messageId":"758","endLine":148,"endColumn":7},{"ruleId":"813","severity":1,"message":"823","line":151,"column":30,"nodeType":"815","messageId":"816","endLine":151,"endColumn":32},{"ruleId":"813","severity":1,"message":"823","line":151,"column":66,"nodeType":"815","messageId":"816","endLine":151,"endColumn":68},{"ruleId":"813","severity":1,"message":"823","line":189,"column":29,"nodeType":"815","messageId":"816","endLine":189,"endColumn":31},{"ruleId":"813","severity":1,"message":"823","line":195,"column":43,"nodeType":"815","messageId":"816","endLine":195,"endColumn":45},{"ruleId":"755","severity":1,"message":"806","line":7,"column":3,"nodeType":"757","messageId":"758","endLine":7,"endColumn":16},{"ruleId":"755","severity":1,"message":"872","line":7,"column":29,"nodeType":"757","messageId":"758","endLine":7,"endColumn":48},{"ruleId":"755","severity":1,"message":"873","line":7,"column":50,"nodeType":"757","messageId":"758","endLine":7,"endColumn":67},{"ruleId":"813","severity":1,"message":"814","line":40,"column":36,"nodeType":"815","messageId":"816","endLine":40,"endColumn":38},{"ruleId":"813","severity":1,"message":"823","line":63,"column":29,"nodeType":"815","messageId":"816","endLine":63,"endColumn":31},{"ruleId":"813","severity":1,"message":"823","line":65,"column":36,"nodeType":"815","messageId":"816","endLine":65,"endColumn":38},{"ruleId":"813","severity":1,"message":"823","line":65,"column":64,"nodeType":"815","messageId":"816","endLine":65,"endColumn":66},{"ruleId":"813","severity":1,"message":"814","line":72,"column":31,"nodeType":"815","messageId":"816","endLine":72,"endColumn":33},{"ruleId":"817","severity":1,"message":"818","line":74,"column":11,"nodeType":"757","messageId":"819","endLine":74,"endColumn":16},{"ruleId":"813","severity":1,"message":"823","line":94,"column":28,"nodeType":"815","messageId":"816","endLine":94,"endColumn":30},{"ruleId":"813","severity":1,"message":"823","line":96,"column":29,"nodeType":"815","messageId":"816","endLine":96,"endColumn":31},{"ruleId":"813","severity":1,"message":"823","line":99,"column":36,"nodeType":"815","messageId":"816","endLine":99,"endColumn":38},{"ruleId":"813","severity":1,"message":"823","line":99,"column":64,"nodeType":"815","messageId":"816","endLine":99,"endColumn":66},{"ruleId":"813","severity":1,"message":"814","line":108,"column":21,"nodeType":"815","messageId":"816","endLine":108,"endColumn":23},{"ruleId":"817","severity":1,"message":"818","line":111,"column":11,"nodeType":"757","messageId":"819","endLine":111,"endColumn":16},{"ruleId":"813","severity":1,"message":"814","line":133,"column":29,"nodeType":"815","messageId":"816","endLine":133,"endColumn":31},{"ruleId":"775","severity":1,"message":"776","line":134,"column":39,"nodeType":"777","messageId":"778","endLine":134,"endColumn":41},{"ruleId":"813","severity":1,"message":"823","line":136,"column":21,"nodeType":"815","messageId":"816","endLine":136,"endColumn":23},{"ruleId":"813","severity":1,"message":"814","line":146,"column":41,"nodeType":"815","messageId":"816","endLine":146,"endColumn":43},{"ruleId":"813","severity":1,"message":"823","line":193,"column":47,"nodeType":"815","messageId":"816","endLine":193,"endColumn":49},{"ruleId":"813","severity":1,"message":"823","line":193,"column":91,"nodeType":"815","messageId":"816","endLine":193,"endColumn":93},{"ruleId":"813","severity":1,"message":"823","line":195,"column":48,"nodeType":"815","messageId":"816","endLine":195,"endColumn":50},{"ruleId":"813","severity":1,"message":"823","line":195,"column":91,"nodeType":"815","messageId":"816","endLine":195,"endColumn":93},{"ruleId":"813","severity":1,"message":"823","line":199,"column":53,"nodeType":"815","messageId":"816","endLine":199,"endColumn":55},{"ruleId":"813","severity":1,"message":"823","line":199,"column":96,"nodeType":"815","messageId":"816","endLine":199,"endColumn":98},{"ruleId":"813","severity":1,"message":"823","line":203,"column":53,"nodeType":"815","messageId":"816","endLine":203,"endColumn":55},{"ruleId":"813","severity":1,"message":"823","line":203,"column":95,"nodeType":"815","messageId":"816","endLine":203,"endColumn":97},{"ruleId":"813","severity":1,"message":"823","line":207,"column":53,"nodeType":"815","messageId":"816","endLine":207,"endColumn":55},{"ruleId":"813","severity":1,"message":"823","line":207,"column":95,"nodeType":"815","messageId":"816","endLine":207,"endColumn":97},{"ruleId":"813","severity":1,"message":"814","line":218,"column":34,"nodeType":"815","messageId":"816","endLine":218,"endColumn":36},{"ruleId":"817","severity":1,"message":"818","line":220,"column":11,"nodeType":"757","messageId":"819","endLine":220,"endColumn":16},{"ruleId":"755","severity":1,"message":"874","line":222,"column":11,"nodeType":"757","messageId":"758","endLine":222,"endColumn":25},{"ruleId":"755","severity":1,"message":"875","line":223,"column":11,"nodeType":"757","messageId":"758","endLine":223,"endColumn":20},{"ruleId":"813","severity":1,"message":"823","line":246,"column":30,"nodeType":"815","messageId":"816","endLine":246,"endColumn":32},{"ruleId":"755","severity":1,"message":"876","line":258,"column":17,"nodeType":"757","messageId":"758","endLine":258,"endColumn":21},{"ruleId":"813","severity":1,"message":"814","line":300,"column":33,"nodeType":"815","messageId":"816","endLine":300,"endColumn":35},{"ruleId":"817","severity":1,"message":"877","line":326,"column":15,"nodeType":"757","messageId":"819","endLine":326,"endColumn":25},{"ruleId":"817","severity":1,"message":"878","line":327,"column":15,"nodeType":"757","messageId":"819","endLine":327,"endColumn":23},{"ruleId":"817","severity":1,"message":"879","line":329,"column":15,"nodeType":"757","messageId":"819","endLine":329,"endColumn":21},{"ruleId":"817","severity":1,"message":"818","line":330,"column":15,"nodeType":"757","messageId":"819","endLine":330,"endColumn":20},{"ruleId":"817","severity":1,"message":"877","line":342,"column":13,"nodeType":"757","messageId":"819","endLine":342,"endColumn":23},{"ruleId":"817","severity":1,"message":"877","line":346,"column":15,"nodeType":"757","messageId":"819","endLine":346,"endColumn":25},{"ruleId":"817","severity":1,"message":"878","line":347,"column":15,"nodeType":"757","messageId":"819","endLine":347,"endColumn":23},{"ruleId":"817","severity":1,"message":"879","line":349,"column":15,"nodeType":"757","messageId":"819","endLine":349,"endColumn":21},{"ruleId":"817","severity":1,"message":"818","line":350,"column":15,"nodeType":"757","messageId":"819","endLine":350,"endColumn":20},{"ruleId":"813","severity":1,"message":"814","line":361,"column":29,"nodeType":"815","messageId":"816","endLine":361,"endColumn":31},{"ruleId":"813","severity":1,"message":"814","line":400,"column":33,"nodeType":"815","messageId":"816","endLine":400,"endColumn":35},{"ruleId":"817","severity":1,"message":"877","line":427,"column":15,"nodeType":"757","messageId":"819","endLine":427,"endColumn":25},{"ruleId":"817","severity":1,"message":"878","line":428,"column":15,"nodeType":"757","messageId":"819","endLine":428,"endColumn":23},{"ruleId":"817","severity":1,"message":"879","line":430,"column":15,"nodeType":"757","messageId":"819","endLine":430,"endColumn":21},{"ruleId":"817","severity":1,"message":"818","line":431,"column":15,"nodeType":"757","messageId":"819","endLine":431,"endColumn":20},{"ruleId":"817","severity":1,"message":"877","line":445,"column":15,"nodeType":"757","messageId":"819","endLine":445,"endColumn":25},{"ruleId":"817","severity":1,"message":"878","line":446,"column":15,"nodeType":"757","messageId":"819","endLine":446,"endColumn":23},{"ruleId":"817","severity":1,"message":"879","line":447,"column":15,"nodeType":"757","messageId":"819","endLine":447,"endColumn":21},{"ruleId":"817","severity":1,"message":"818","line":448,"column":15,"nodeType":"757","messageId":"819","endLine":448,"endColumn":20},{"ruleId":"817","severity":1,"message":"877","line":452,"column":15,"nodeType":"757","messageId":"819","endLine":452,"endColumn":25},{"ruleId":"817","severity":1,"message":"878","line":453,"column":15,"nodeType":"757","messageId":"819","endLine":453,"endColumn":23},{"ruleId":"817","severity":1,"message":"879","line":455,"column":15,"nodeType":"757","messageId":"819","endLine":455,"endColumn":21},{"ruleId":"817","severity":1,"message":"818","line":456,"column":15,"nodeType":"757","messageId":"819","endLine":456,"endColumn":20},{"ruleId":"813","severity":1,"message":"814","line":469,"column":29,"nodeType":"815","messageId":"816","endLine":469,"endColumn":31},{"ruleId":"813","severity":1,"message":"814","line":502,"column":33,"nodeType":"815","messageId":"816","endLine":502,"endColumn":35},{"ruleId":"813","severity":1,"message":"814","line":523,"column":37,"nodeType":"815","messageId":"816","endLine":523,"endColumn":39},{"ruleId":"813","severity":1,"message":"814","line":523,"column":88,"nodeType":"815","messageId":"816","endLine":523,"endColumn":90},{"ruleId":"813","severity":1,"message":"814","line":524,"column":29,"nodeType":"815","messageId":"816","endLine":524,"endColumn":31},{"ruleId":"813","severity":1,"message":"823","line":527,"column":45,"nodeType":"815","messageId":"816","endLine":527,"endColumn":47},{"ruleId":"813","severity":1,"message":"823","line":527,"column":87,"nodeType":"815","messageId":"816","endLine":527,"endColumn":89},{"ruleId":"813","severity":1,"message":"814","line":528,"column":39,"nodeType":"815","messageId":"816","endLine":528,"endColumn":41},{"ruleId":"813","severity":1,"message":"814","line":528,"column":90,"nodeType":"815","messageId":"816","endLine":528,"endColumn":92},{"ruleId":"813","severity":1,"message":"814","line":529,"column":31,"nodeType":"815","messageId":"816","endLine":529,"endColumn":33},{"ruleId":"813","severity":1,"message":"814","line":531,"column":35,"nodeType":"815","messageId":"816","endLine":531,"endColumn":37},{"ruleId":"813","severity":1,"message":"814","line":531,"column":86,"nodeType":"815","messageId":"816","endLine":531,"endColumn":88},{"ruleId":"813","severity":1,"message":"823","line":533,"column":50,"nodeType":"815","messageId":"816","endLine":533,"endColumn":52},{"ruleId":"813","severity":1,"message":"823","line":533,"column":92,"nodeType":"815","messageId":"816","endLine":533,"endColumn":94},{"ruleId":"813","severity":1,"message":"814","line":534,"column":39,"nodeType":"815","messageId":"816","endLine":534,"endColumn":41},{"ruleId":"813","severity":1,"message":"814","line":534,"column":90,"nodeType":"815","messageId":"816","endLine":534,"endColumn":92},{"ruleId":"813","severity":1,"message":"814","line":535,"column":31,"nodeType":"815","messageId":"816","endLine":535,"endColumn":33},{"ruleId":"813","severity":1,"message":"814","line":537,"column":35,"nodeType":"815","messageId":"816","endLine":537,"endColumn":37},{"ruleId":"813","severity":1,"message":"814","line":537,"column":86,"nodeType":"815","messageId":"816","endLine":537,"endColumn":88},{"ruleId":"813","severity":1,"message":"814","line":555,"column":38,"nodeType":"815","messageId":"816","endLine":555,"endColumn":40},{"ruleId":"813","severity":1,"message":"814","line":561,"column":26,"nodeType":"815","messageId":"816","endLine":561,"endColumn":28},{"ruleId":"755","severity":1,"message":"841","line":1,"column":19,"nodeType":"757","messageId":"758","endLine":1,"endColumn":23},{"ruleId":"755","severity":1,"message":"806","line":5,"column":25,"nodeType":"757","messageId":"758","endLine":5,"endColumn":38},{"ruleId":"755","severity":1,"message":"880","line":6,"column":10,"nodeType":"757","messageId":"758","endLine":6,"endColumn":15},{"ruleId":"813","severity":1,"message":"814","line":36,"column":34,"nodeType":"815","messageId":"816","endLine":36,"endColumn":36},{"ruleId":"813","severity":1,"message":"823","line":60,"column":23,"nodeType":"815","messageId":"816","endLine":60,"endColumn":25},{"ruleId":"813","severity":1,"message":"823","line":63,"column":29,"nodeType":"815","messageId":"816","endLine":63,"endColumn":31},{"ruleId":"813","severity":1,"message":"823","line":63,"column":56,"nodeType":"815","messageId":"816","endLine":63,"endColumn":58},{"ruleId":"813","severity":1,"message":"814","line":70,"column":29,"nodeType":"815","messageId":"816","endLine":70,"endColumn":31},{"ruleId":"817","severity":1,"message":"818","line":71,"column":9,"nodeType":"757","messageId":"819","endLine":71,"endColumn":14},{"ruleId":"813","severity":1,"message":"823","line":91,"column":26,"nodeType":"815","messageId":"816","endLine":91,"endColumn":28},{"ruleId":"813","severity":1,"message":"823","line":93,"column":23,"nodeType":"815","messageId":"816","endLine":93,"endColumn":25},{"ruleId":"813","severity":1,"message":"823","line":97,"column":29,"nodeType":"815","messageId":"816","endLine":97,"endColumn":31},{"ruleId":"813","severity":1,"message":"823","line":97,"column":56,"nodeType":"815","messageId":"816","endLine":97,"endColumn":58},{"ruleId":"813","severity":1,"message":"814","line":106,"column":17,"nodeType":"815","messageId":"816","endLine":106,"endColumn":19},{"ruleId":"817","severity":1,"message":"818","line":109,"column":9,"nodeType":"757","messageId":"819","endLine":109,"endColumn":14},{"ruleId":"813","severity":1,"message":"814","line":131,"column":27,"nodeType":"815","messageId":"816","endLine":131,"endColumn":29},{"ruleId":"775","severity":1,"message":"776","line":132,"column":37,"nodeType":"777","messageId":"778","endLine":132,"endColumn":39},{"ruleId":"813","severity":1,"message":"823","line":134,"column":19,"nodeType":"815","messageId":"816","endLine":134,"endColumn":21},{"ruleId":"813","severity":1,"message":"814","line":145,"column":39,"nodeType":"815","messageId":"816","endLine":145,"endColumn":41},{"ruleId":"813","severity":1,"message":"823","line":191,"column":47,"nodeType":"815","messageId":"816","endLine":191,"endColumn":49},{"ruleId":"813","severity":1,"message":"823","line":191,"column":91,"nodeType":"815","messageId":"816","endLine":191,"endColumn":93},{"ruleId":"813","severity":1,"message":"823","line":194,"column":48,"nodeType":"815","messageId":"816","endLine":194,"endColumn":50},{"ruleId":"813","severity":1,"message":"823","line":194,"column":91,"nodeType":"815","messageId":"816","endLine":194,"endColumn":93},{"ruleId":"813","severity":1,"message":"823","line":198,"column":53,"nodeType":"815","messageId":"816","endLine":198,"endColumn":55},{"ruleId":"813","severity":1,"message":"823","line":198,"column":96,"nodeType":"815","messageId":"816","endLine":198,"endColumn":98},{"ruleId":"813","severity":1,"message":"823","line":202,"column":53,"nodeType":"815","messageId":"816","endLine":202,"endColumn":55},{"ruleId":"813","severity":1,"message":"823","line":202,"column":95,"nodeType":"815","messageId":"816","endLine":202,"endColumn":97},{"ruleId":"813","severity":1,"message":"823","line":206,"column":53,"nodeType":"815","messageId":"816","endLine":206,"endColumn":55},{"ruleId":"813","severity":1,"message":"823","line":206,"column":95,"nodeType":"815","messageId":"816","endLine":206,"endColumn":97},{"ruleId":"813","severity":1,"message":"814","line":217,"column":32,"nodeType":"815","messageId":"816","endLine":217,"endColumn":34},{"ruleId":"817","severity":1,"message":"818","line":219,"column":7,"nodeType":"757","messageId":"819","endLine":219,"endColumn":12},{"ruleId":"755","severity":1,"message":"874","line":222,"column":7,"nodeType":"757","messageId":"758","endLine":222,"endColumn":21},{"ruleId":"755","severity":1,"message":"875","line":223,"column":7,"nodeType":"757","messageId":"758","endLine":223,"endColumn":16},{"ruleId":"813","severity":1,"message":"823","line":247,"column":25,"nodeType":"815","messageId":"816","endLine":247,"endColumn":27},{"ruleId":"881","severity":1,"message":"882","line":261,"column":15,"nodeType":"883","messageId":"884","endLine":263,"endColumn":42},{"ruleId":"817","severity":1,"message":"885","line":262,"column":21,"nodeType":"757","messageId":"819","endLine":262,"endColumn":29},{"ruleId":"881","severity":1,"message":"882","line":265,"column":15,"nodeType":"883","messageId":"884","endLine":267,"endColumn":42},{"ruleId":"817","severity":1,"message":"885","line":266,"column":21,"nodeType":"757","messageId":"819","endLine":266,"endColumn":29},{"ruleId":"881","severity":1,"message":"882","line":269,"column":15,"nodeType":"883","messageId":"884","endLine":271,"endColumn":42},{"ruleId":"817","severity":1,"message":"885","line":270,"column":21,"nodeType":"757","messageId":"819","endLine":270,"endColumn":29},{"ruleId":"881","severity":1,"message":"886","line":272,"column":17,"nodeType":"883","messageId":"887","endLine":272,"endColumn":25},{"ruleId":"813","severity":1,"message":"814","line":289,"column":33,"nodeType":"815","messageId":"816","endLine":289,"endColumn":35},{"ruleId":"813","severity":1,"message":"814","line":346,"column":33,"nodeType":"815","messageId":"816","endLine":346,"endColumn":35},{"ruleId":"817","severity":1,"message":"888","line":369,"column":15,"nodeType":"757","messageId":"819","endLine":369,"endColumn":20},{"ruleId":"817","severity":1,"message":"889","line":371,"column":15,"nodeType":"757","messageId":"819","endLine":371,"endColumn":21},{"ruleId":"817","severity":1,"message":"888","line":386,"column":15,"nodeType":"757","messageId":"819","endLine":386,"endColumn":20},{"ruleId":"817","severity":1,"message":"890","line":387,"column":15,"nodeType":"757","messageId":"819","endLine":387,"endColumn":21},{"ruleId":"817","severity":1,"message":"889","line":388,"column":15,"nodeType":"757","messageId":"819","endLine":388,"endColumn":21},{"ruleId":"817","severity":1,"message":"888","line":403,"column":15,"nodeType":"757","messageId":"819","endLine":403,"endColumn":20},{"ruleId":"817","severity":1,"message":"891","line":404,"column":15,"nodeType":"757","messageId":"819","endLine":404,"endColumn":20},{"ruleId":"817","severity":1,"message":"889","line":405,"column":15,"nodeType":"757","messageId":"819","endLine":405,"endColumn":21},{"ruleId":"813","severity":1,"message":"814","line":455,"column":33,"nodeType":"815","messageId":"816","endLine":455,"endColumn":35},{"ruleId":"813","severity":1,"message":"814","line":464,"column":29,"nodeType":"815","messageId":"816","endLine":464,"endColumn":31},{"ruleId":"813","severity":1,"message":"814","line":464,"column":80,"nodeType":"815","messageId":"816","endLine":464,"endColumn":82},{"ruleId":"813","severity":1,"message":"814","line":465,"column":29,"nodeType":"815","messageId":"816","endLine":465,"endColumn":31},{"ruleId":"813","severity":1,"message":"823","line":468,"column":45,"nodeType":"815","messageId":"816","endLine":468,"endColumn":47},{"ruleId":"813","severity":1,"message":"823","line":468,"column":87,"nodeType":"815","messageId":"816","endLine":468,"endColumn":89},{"ruleId":"813","severity":1,"message":"814","line":469,"column":39,"nodeType":"815","messageId":"816","endLine":469,"endColumn":41},{"ruleId":"813","severity":1,"message":"814","line":469,"column":90,"nodeType":"815","messageId":"816","endLine":469,"endColumn":92},{"ruleId":"813","severity":1,"message":"814","line":470,"column":31,"nodeType":"815","messageId":"816","endLine":470,"endColumn":33},{"ruleId":"813","severity":1,"message":"814","line":472,"column":35,"nodeType":"815","messageId":"816","endLine":472,"endColumn":37},{"ruleId":"813","severity":1,"message":"814","line":472,"column":86,"nodeType":"815","messageId":"816","endLine":472,"endColumn":88},{"ruleId":"813","severity":1,"message":"823","line":474,"column":50,"nodeType":"815","messageId":"816","endLine":474,"endColumn":52},{"ruleId":"813","severity":1,"message":"823","line":474,"column":92,"nodeType":"815","messageId":"816","endLine":474,"endColumn":94},{"ruleId":"813","severity":1,"message":"814","line":475,"column":39,"nodeType":"815","messageId":"816","endLine":475,"endColumn":41},{"ruleId":"813","severity":1,"message":"814","line":475,"column":90,"nodeType":"815","messageId":"816","endLine":475,"endColumn":92},{"ruleId":"813","severity":1,"message":"814","line":476,"column":31,"nodeType":"815","messageId":"816","endLine":476,"endColumn":33},{"ruleId":"813","severity":1,"message":"814","line":478,"column":35,"nodeType":"815","messageId":"816","endLine":478,"endColumn":37},{"ruleId":"813","severity":1,"message":"814","line":478,"column":86,"nodeType":"815","messageId":"816","endLine":478,"endColumn":88},{"ruleId":"813","severity":1,"message":"814","line":500,"column":38,"nodeType":"815","messageId":"816","endLine":500,"endColumn":40},{"ruleId":"813","severity":1,"message":"814","line":505,"column":24,"nodeType":"815","messageId":"816","endLine":505,"endColumn":26},{"ruleId":"813","severity":1,"message":"814","line":518,"column":24,"nodeType":"815","messageId":"816","endLine":518,"endColumn":26},{"ruleId":"755","severity":1,"message":"841","line":6,"column":3,"nodeType":"757","messageId":"758","endLine":6,"endColumn":7},{"ruleId":"755","severity":1,"message":"842","line":7,"column":3,"nodeType":"757","messageId":"758","endLine":7,"endColumn":7},{"ruleId":"755","severity":1,"message":"872","line":10,"column":46,"nodeType":"757","messageId":"758","endLine":10,"endColumn":65},{"ruleId":"755","severity":1,"message":"873","line":10,"column":67,"nodeType":"757","messageId":"758","endLine":10,"endColumn":84},{"ruleId":"755","severity":1,"message":"892","line":17,"column":10,"nodeType":"757","messageId":"758","endLine":17,"endColumn":21},{"ruleId":"813","severity":1,"message":"814","line":20,"column":26,"nodeType":"815","messageId":"816","endLine":20,"endColumn":28},{"ruleId":"813","severity":1,"message":"814","line":45,"column":29,"nodeType":"815","messageId":"816","endLine":45,"endColumn":31},{"ruleId":"817","severity":1,"message":"818","line":46,"column":9,"nodeType":"757","messageId":"819","endLine":46,"endColumn":14},{"ruleId":"755","severity":1,"message":"893","line":107,"column":12,"nodeType":"757","messageId":"758","endLine":107,"endColumn":23},{"ruleId":"755","severity":1,"message":"894","line":145,"column":12,"nodeType":"757","messageId":"758","endLine":145,"endColumn":20},{"ruleId":"813","severity":1,"message":"814","line":185,"column":38,"nodeType":"815","messageId":"816","endLine":185,"endColumn":40},{"ruleId":"813","severity":1,"message":"814","line":205,"column":38,"nodeType":"815","messageId":"816","endLine":205,"endColumn":40},{"ruleId":"755","severity":1,"message":"795","line":2,"column":10,"nodeType":"757","messageId":"758","endLine":2,"endColumn":23},{"ruleId":"755","severity":1,"message":"806","line":5,"column":25,"nodeType":"757","messageId":"758","endLine":5,"endColumn":38},{"ruleId":"755","severity":1,"message":"895","line":6,"column":10,"nodeType":"757","messageId":"758","endLine":6,"endColumn":21},{"ruleId":"755","severity":1,"message":"896","line":11,"column":10,"nodeType":"757","messageId":"758","endLine":11,"endColumn":29},{"ruleId":"755","severity":1,"message":"897","line":11,"column":31,"nodeType":"757","messageId":"758","endLine":11,"endColumn":43},{"ruleId":"852","severity":1,"message":"853","line":23,"column":25,"nodeType":"810","messageId":"854","endLine":23,"endColumn":30,"fix":"898"},{"ruleId":"813","severity":1,"message":"814","line":38,"column":30,"nodeType":"815","messageId":"816","endLine":38,"endColumn":32},{"ruleId":"856","severity":1,"message":"857","line":39,"column":7,"nodeType":"757","messageId":"858","endLine":39,"endColumn":12},{"ruleId":"856","severity":1,"message":"857","line":40,"column":11,"nodeType":"757","messageId":"858","endLine":40,"endColumn":16},{"ruleId":"856","severity":1,"message":"857","line":42,"column":9,"nodeType":"757","messageId":"858","endLine":42,"endColumn":14},{"ruleId":"856","severity":1,"message":"857","line":42,"column":17,"nodeType":"757","messageId":"858","endLine":42,"endColumn":22},{"ruleId":"856","severity":1,"message":"857","line":43,"column":9,"nodeType":"757","messageId":"858","endLine":43,"endColumn":14},{"ruleId":"856","severity":1,"message":"857","line":43,"column":17,"nodeType":"757","messageId":"858","endLine":43,"endColumn":22},{"ruleId":"856","severity":1,"message":"857","line":44,"column":9,"nodeType":"757","messageId":"858","endLine":44,"endColumn":14},{"ruleId":"856","severity":1,"message":"857","line":44,"column":17,"nodeType":"757","messageId":"858","endLine":44,"endColumn":22},{"ruleId":"856","severity":1,"message":"857","line":45,"column":9,"nodeType":"757","messageId":"858","endLine":45,"endColumn":14},{"ruleId":"856","severity":1,"message":"857","line":45,"column":17,"nodeType":"757","messageId":"858","endLine":45,"endColumn":22},{"ruleId":"856","severity":1,"message":"857","line":46,"column":9,"nodeType":"757","messageId":"858","endLine":46,"endColumn":14},{"ruleId":"856","severity":1,"message":"857","line":46,"column":17,"nodeType":"757","messageId":"858","endLine":46,"endColumn":22},{"ruleId":"856","severity":1,"message":"857","line":47,"column":9,"nodeType":"757","messageId":"858","endLine":47,"endColumn":14},{"ruleId":"856","severity":1,"message":"857","line":47,"column":17,"nodeType":"757","messageId":"858","endLine":47,"endColumn":22},{"ruleId":"856","severity":1,"message":"857","line":48,"column":9,"nodeType":"757","messageId":"858","endLine":48,"endColumn":14},{"ruleId":"856","severity":1,"message":"857","line":48,"column":17,"nodeType":"757","messageId":"858","endLine":48,"endColumn":22},{"ruleId":"856","severity":1,"message":"857","line":49,"column":9,"nodeType":"757","messageId":"858","endLine":49,"endColumn":14},{"ruleId":"856","severity":1,"message":"857","line":49,"column":17,"nodeType":"757","messageId":"858","endLine":49,"endColumn":22},{"ruleId":"856","severity":1,"message":"857","line":55,"column":26,"nodeType":"757","messageId":"858","endLine":55,"endColumn":31},{"ruleId":"813","severity":1,"message":"823","line":59,"column":30,"nodeType":"815","messageId":"816","endLine":59,"endColumn":32},{"ruleId":"856","severity":1,"message":"857","line":68,"column":9,"nodeType":"757","messageId":"858","endLine":68,"endColumn":14},{"ruleId":"856","severity":1,"message":"857","line":69,"column":9,"nodeType":"757","messageId":"858","endLine":69,"endColumn":14},{"ruleId":"856","severity":1,"message":"857","line":69,"column":17,"nodeType":"757","messageId":"858","endLine":69,"endColumn":22},{"ruleId":"856","severity":1,"message":"857","line":70,"column":9,"nodeType":"757","messageId":"858","endLine":70,"endColumn":14},{"ruleId":"856","severity":1,"message":"857","line":70,"column":17,"nodeType":"757","messageId":"858","endLine":70,"endColumn":22},{"ruleId":"856","severity":1,"message":"857","line":71,"column":9,"nodeType":"757","messageId":"858","endLine":71,"endColumn":14},{"ruleId":"856","severity":1,"message":"857","line":71,"column":17,"nodeType":"757","messageId":"858","endLine":71,"endColumn":22},{"ruleId":"856","severity":1,"message":"857","line":72,"column":9,"nodeType":"757","messageId":"858","endLine":72,"endColumn":14},{"ruleId":"856","severity":1,"message":"857","line":72,"column":17,"nodeType":"757","messageId":"858","endLine":72,"endColumn":22},{"ruleId":"856","severity":1,"message":"857","line":73,"column":9,"nodeType":"757","messageId":"858","endLine":73,"endColumn":14},{"ruleId":"856","severity":1,"message":"857","line":73,"column":17,"nodeType":"757","messageId":"858","endLine":73,"endColumn":22},{"ruleId":"852","severity":1,"message":"853","line":73,"column":31,"nodeType":"810","messageId":"854","endLine":73,"endColumn":36,"fix":"899"},{"ruleId":"813","severity":1,"message":"814","line":78,"column":29,"nodeType":"815","messageId":"816","endLine":78,"endColumn":31},{"ruleId":"856","severity":1,"message":"857","line":79,"column":7,"nodeType":"757","messageId":"858","endLine":79,"endColumn":12},{"ruleId":"856","severity":1,"message":"857","line":80,"column":11,"nodeType":"757","messageId":"858","endLine":80,"endColumn":16},{"ruleId":"856","severity":1,"message":"857","line":82,"column":9,"nodeType":"757","messageId":"858","endLine":82,"endColumn":14},{"ruleId":"856","severity":1,"message":"857","line":82,"column":17,"nodeType":"757","messageId":"858","endLine":82,"endColumn":22},{"ruleId":"856","severity":1,"message":"857","line":83,"column":9,"nodeType":"757","messageId":"858","endLine":83,"endColumn":14},{"ruleId":"856","severity":1,"message":"857","line":83,"column":17,"nodeType":"757","messageId":"858","endLine":83,"endColumn":22},{"ruleId":"856","severity":1,"message":"857","line":84,"column":9,"nodeType":"757","messageId":"858","endLine":84,"endColumn":14},{"ruleId":"856","severity":1,"message":"857","line":84,"column":17,"nodeType":"757","messageId":"858","endLine":84,"endColumn":22},{"ruleId":"856","severity":1,"message":"857","line":85,"column":9,"nodeType":"757","messageId":"858","endLine":85,"endColumn":14},{"ruleId":"856","severity":1,"message":"857","line":85,"column":17,"nodeType":"757","messageId":"858","endLine":85,"endColumn":22},{"ruleId":"856","severity":1,"message":"857","line":86,"column":9,"nodeType":"757","messageId":"858","endLine":86,"endColumn":14},{"ruleId":"856","severity":1,"message":"857","line":86,"column":17,"nodeType":"757","messageId":"858","endLine":86,"endColumn":22},{"ruleId":"856","severity":1,"message":"857","line":87,"column":9,"nodeType":"757","messageId":"858","endLine":87,"endColumn":14},{"ruleId":"856","severity":1,"message":"857","line":87,"column":17,"nodeType":"757","messageId":"858","endLine":87,"endColumn":22},{"ruleId":"856","severity":1,"message":"857","line":88,"column":9,"nodeType":"757","messageId":"858","endLine":88,"endColumn":14},{"ruleId":"856","severity":1,"message":"857","line":88,"column":17,"nodeType":"757","messageId":"858","endLine":88,"endColumn":22},{"ruleId":"856","severity":1,"message":"857","line":89,"column":9,"nodeType":"757","messageId":"858","endLine":89,"endColumn":14},{"ruleId":"856","severity":1,"message":"857","line":89,"column":17,"nodeType":"757","messageId":"858","endLine":89,"endColumn":22},{"ruleId":"856","severity":1,"message":"857","line":96,"column":26,"nodeType":"757","messageId":"858","endLine":96,"endColumn":31},{"ruleId":"813","severity":1,"message":"823","line":99,"column":30,"nodeType":"815","messageId":"816","endLine":99,"endColumn":32},{"ruleId":"813","severity":1,"message":"823","line":100,"column":31,"nodeType":"815","messageId":"816","endLine":100,"endColumn":33},{"ruleId":"813","severity":1,"message":"823","line":102,"column":38,"nodeType":"815","messageId":"816","endLine":102,"endColumn":40},{"ruleId":"856","severity":1,"message":"857","line":108,"column":9,"nodeType":"757","messageId":"858","endLine":108,"endColumn":14},{"ruleId":"856","severity":1,"message":"857","line":109,"column":9,"nodeType":"757","messageId":"858","endLine":109,"endColumn":14},{"ruleId":"856","severity":1,"message":"857","line":109,"column":17,"nodeType":"757","messageId":"858","endLine":109,"endColumn":22},{"ruleId":"856","severity":1,"message":"857","line":110,"column":9,"nodeType":"757","messageId":"858","endLine":110,"endColumn":14},{"ruleId":"856","severity":1,"message":"857","line":110,"column":17,"nodeType":"757","messageId":"858","endLine":110,"endColumn":22},{"ruleId":"856","severity":1,"message":"857","line":111,"column":9,"nodeType":"757","messageId":"858","endLine":111,"endColumn":14},{"ruleId":"856","severity":1,"message":"857","line":111,"column":17,"nodeType":"757","messageId":"858","endLine":111,"endColumn":22},{"ruleId":"856","severity":1,"message":"857","line":112,"column":9,"nodeType":"757","messageId":"858","endLine":112,"endColumn":14},{"ruleId":"856","severity":1,"message":"857","line":112,"column":17,"nodeType":"757","messageId":"858","endLine":112,"endColumn":22},{"ruleId":"856","severity":1,"message":"857","line":113,"column":9,"nodeType":"757","messageId":"858","endLine":113,"endColumn":14},{"ruleId":"856","severity":1,"message":"857","line":113,"column":17,"nodeType":"757","messageId":"858","endLine":113,"endColumn":22},{"ruleId":"852","severity":1,"message":"853","line":113,"column":31,"nodeType":"810","messageId":"854","endLine":113,"endColumn":36,"fix":"900"},{"ruleId":"813","severity":1,"message":"814","line":118,"column":28,"nodeType":"815","messageId":"816","endLine":118,"endColumn":30},{"ruleId":"813","severity":1,"message":"814","line":139,"column":29,"nodeType":"815","messageId":"816","endLine":139,"endColumn":31},{"ruleId":"775","severity":1,"message":"776","line":140,"column":48,"nodeType":"777","messageId":"778","endLine":140,"endColumn":50},{"ruleId":"813","severity":1,"message":"823","line":142,"column":21,"nodeType":"815","messageId":"816","endLine":142,"endColumn":23},{"ruleId":"852","severity":1,"message":"853","line":154,"column":31,"nodeType":"810","messageId":"854","endLine":154,"endColumn":36,"fix":"901"},{"ruleId":"813","severity":1,"message":"814","line":160,"column":34,"nodeType":"815","messageId":"816","endLine":160,"endColumn":36},{"ruleId":"813","severity":1,"message":"823","line":205,"column":47,"nodeType":"815","messageId":"816","endLine":205,"endColumn":49},{"ruleId":"813","severity":1,"message":"823","line":205,"column":91,"nodeType":"815","messageId":"816","endLine":205,"endColumn":93},{"ruleId":"813","severity":1,"message":"823","line":208,"column":48,"nodeType":"815","messageId":"816","endLine":208,"endColumn":50},{"ruleId":"813","severity":1,"message":"823","line":208,"column":91,"nodeType":"815","messageId":"816","endLine":208,"endColumn":93},{"ruleId":"813","severity":1,"message":"823","line":212,"column":53,"nodeType":"815","messageId":"816","endLine":212,"endColumn":55},{"ruleId":"813","severity":1,"message":"823","line":212,"column":96,"nodeType":"815","messageId":"816","endLine":212,"endColumn":98},{"ruleId":"813","severity":1,"message":"823","line":216,"column":53,"nodeType":"815","messageId":"816","endLine":216,"endColumn":55},{"ruleId":"813","severity":1,"message":"823","line":216,"column":95,"nodeType":"815","messageId":"816","endLine":216,"endColumn":97},{"ruleId":"813","severity":1,"message":"823","line":220,"column":53,"nodeType":"815","messageId":"816","endLine":220,"endColumn":55},{"ruleId":"813","severity":1,"message":"823","line":220,"column":95,"nodeType":"815","messageId":"816","endLine":220,"endColumn":97},{"ruleId":"852","severity":1,"message":"853","line":234,"column":31,"nodeType":"810","messageId":"854","endLine":234,"endColumn":36,"fix":"902"},{"ruleId":"813","severity":1,"message":"814","line":240,"column":30,"nodeType":"815","messageId":"816","endLine":240,"endColumn":32},{"ruleId":"817","severity":1,"message":"818","line":241,"column":11,"nodeType":"757","messageId":"819","endLine":241,"endColumn":16},{"ruleId":"813","severity":1,"message":"823","line":263,"column":31,"nodeType":"815","messageId":"816","endLine":263,"endColumn":33},{"ruleId":"813","severity":1,"message":"823","line":265,"column":38,"nodeType":"815","messageId":"816","endLine":265,"endColumn":40},{"ruleId":"852","severity":1,"message":"853","line":276,"column":31,"nodeType":"810","messageId":"854","endLine":276,"endColumn":36,"fix":"903"},{"ruleId":"813","severity":1,"message":"823","line":284,"column":28,"nodeType":"815","messageId":"816","endLine":284,"endColumn":30},{"ruleId":"813","severity":1,"message":"823","line":284,"column":64,"nodeType":"815","messageId":"816","endLine":284,"endColumn":66},{"ruleId":"813","severity":1,"message":"823","line":285,"column":24,"nodeType":"815","messageId":"816","endLine":285,"endColumn":26},{"ruleId":"813","severity":1,"message":"823","line":285,"column":65,"nodeType":"815","messageId":"816","endLine":285,"endColumn":67},{"ruleId":"852","severity":1,"message":"853","line":292,"column":27,"nodeType":"810","messageId":"854","endLine":292,"endColumn":32,"fix":"904"},{"ruleId":"813","severity":1,"message":"814","line":301,"column":35,"nodeType":"815","messageId":"816","endLine":301,"endColumn":37},{"ruleId":"813","severity":1,"message":"823","line":305,"column":32,"nodeType":"815","messageId":"816","endLine":305,"endColumn":34},{"ruleId":"813","severity":1,"message":"823","line":306,"column":27,"nodeType":"815","messageId":"816","endLine":306,"endColumn":29},{"ruleId":"813","severity":1,"message":"823","line":307,"column":26,"nodeType":"815","messageId":"816","endLine":307,"endColumn":28},{"ruleId":"813","severity":1,"message":"823","line":308,"column":32,"nodeType":"815","messageId":"816","endLine":308,"endColumn":34},{"ruleId":"755","severity":1,"message":"796","line":1,"column":8,"nodeType":"757","messageId":"758","endLine":1,"endColumn":20},{"ruleId":"755","severity":1,"message":"905","line":12,"column":36,"nodeType":"757","messageId":"758","endLine":12,"endColumn":45},{"ruleId":"813","severity":1,"message":"814","line":24,"column":43,"nodeType":"815","messageId":"816","endLine":24,"endColumn":45},{"ruleId":"820","severity":1,"message":"821","line":33,"column":9,"nodeType":"822","endLine":33,"endColumn":23},{"ruleId":"813","severity":1,"message":"814","line":39,"column":32,"nodeType":"815","messageId":"816","endLine":39,"endColumn":34},{"ruleId":"813","severity":1,"message":"823","line":45,"column":24,"nodeType":"815","messageId":"816","endLine":45,"endColumn":26},{"ruleId":"813","severity":1,"message":"814","line":66,"column":28,"nodeType":"815","messageId":"816","endLine":66,"endColumn":30},{"ruleId":"755","severity":1,"message":"806","line":8,"column":3,"nodeType":"757","messageId":"758","endLine":8,"endColumn":16},{"ruleId":"755","severity":1,"message":"872","line":8,"column":29,"nodeType":"757","messageId":"758","endLine":8,"endColumn":48},{"ruleId":"755","severity":1,"message":"873","line":8,"column":50,"nodeType":"757","messageId":"758","endLine":8,"endColumn":67},{"ruleId":"755","severity":1,"message":"906","line":24,"column":10,"nodeType":"757","messageId":"758","endLine":24,"endColumn":21},{"ruleId":"755","severity":1,"message":"907","line":26,"column":7,"nodeType":"757","messageId":"758","endLine":26,"endColumn":12},{"ruleId":"813","severity":1,"message":"814","line":40,"column":40,"nodeType":"815","messageId":"816","endLine":40,"endColumn":42},{"ruleId":"813","severity":1,"message":"823","line":64,"column":33,"nodeType":"815","messageId":"816","endLine":64,"endColumn":35},{"ruleId":"813","severity":1,"message":"823","line":66,"column":40,"nodeType":"815","messageId":"816","endLine":66,"endColumn":42},{"ruleId":"813","severity":1,"message":"823","line":66,"column":68,"nodeType":"815","messageId":"816","endLine":66,"endColumn":70},{"ruleId":"813","severity":1,"message":"814","line":73,"column":31,"nodeType":"815","messageId":"816","endLine":73,"endColumn":33},{"ruleId":"817","severity":1,"message":"818","line":75,"column":11,"nodeType":"757","messageId":"819","endLine":75,"endColumn":16},{"ruleId":"813","severity":1,"message":"823","line":95,"column":28,"nodeType":"815","messageId":"816","endLine":95,"endColumn":30},{"ruleId":"813","severity":1,"message":"823","line":97,"column":29,"nodeType":"815","messageId":"816","endLine":97,"endColumn":31},{"ruleId":"813","severity":1,"message":"823","line":100,"column":36,"nodeType":"815","messageId":"816","endLine":100,"endColumn":38},{"ruleId":"813","severity":1,"message":"823","line":100,"column":64,"nodeType":"815","messageId":"816","endLine":100,"endColumn":66},{"ruleId":"813","severity":1,"message":"814","line":109,"column":21,"nodeType":"815","messageId":"816","endLine":109,"endColumn":23},{"ruleId":"817","severity":1,"message":"818","line":112,"column":11,"nodeType":"757","messageId":"819","endLine":112,"endColumn":16},{"ruleId":"813","severity":1,"message":"814","line":134,"column":29,"nodeType":"815","messageId":"816","endLine":134,"endColumn":31},{"ruleId":"775","severity":1,"message":"776","line":135,"column":39,"nodeType":"777","messageId":"778","endLine":135,"endColumn":41},{"ruleId":"813","severity":1,"message":"823","line":137,"column":21,"nodeType":"815","messageId":"816","endLine":137,"endColumn":23},{"ruleId":"813","severity":1,"message":"814","line":147,"column":41,"nodeType":"815","messageId":"816","endLine":147,"endColumn":43},{"ruleId":"813","severity":1,"message":"823","line":194,"column":47,"nodeType":"815","messageId":"816","endLine":194,"endColumn":49},{"ruleId":"813","severity":1,"message":"823","line":194,"column":91,"nodeType":"815","messageId":"816","endLine":194,"endColumn":93},{"ruleId":"813","severity":1,"message":"823","line":196,"column":48,"nodeType":"815","messageId":"816","endLine":196,"endColumn":50},{"ruleId":"813","severity":1,"message":"823","line":196,"column":91,"nodeType":"815","messageId":"816","endLine":196,"endColumn":93},{"ruleId":"813","severity":1,"message":"823","line":200,"column":53,"nodeType":"815","messageId":"816","endLine":200,"endColumn":55},{"ruleId":"813","severity":1,"message":"823","line":200,"column":96,"nodeType":"815","messageId":"816","endLine":200,"endColumn":98},{"ruleId":"813","severity":1,"message":"823","line":204,"column":53,"nodeType":"815","messageId":"816","endLine":204,"endColumn":55},{"ruleId":"813","severity":1,"message":"823","line":204,"column":95,"nodeType":"815","messageId":"816","endLine":204,"endColumn":97},{"ruleId":"813","severity":1,"message":"823","line":208,"column":53,"nodeType":"815","messageId":"816","endLine":208,"endColumn":55},{"ruleId":"813","severity":1,"message":"823","line":208,"column":95,"nodeType":"815","messageId":"816","endLine":208,"endColumn":97},{"ruleId":"813","severity":1,"message":"814","line":220,"column":34,"nodeType":"815","messageId":"816","endLine":220,"endColumn":36},{"ruleId":"817","severity":1,"message":"818","line":222,"column":11,"nodeType":"757","messageId":"819","endLine":222,"endColumn":16},{"ruleId":"755","severity":1,"message":"874","line":224,"column":11,"nodeType":"757","messageId":"758","endLine":224,"endColumn":25},{"ruleId":"755","severity":1,"message":"875","line":225,"column":11,"nodeType":"757","messageId":"758","endLine":225,"endColumn":20},{"ruleId":"755","severity":1,"message":"908","line":226,"column":11,"nodeType":"757","messageId":"758","endLine":226,"endColumn":23},{"ruleId":"755","severity":1,"message":"909","line":227,"column":11,"nodeType":"757","messageId":"758","endLine":227,"endColumn":23},{"ruleId":"755","severity":1,"message":"910","line":228,"column":11,"nodeType":"757","messageId":"758","endLine":228,"endColumn":25},{"ruleId":"755","severity":1,"message":"911","line":229,"column":11,"nodeType":"757","messageId":"758","endLine":229,"endColumn":25},{"ruleId":"813","severity":1,"message":"823","line":248,"column":30,"nodeType":"815","messageId":"816","endLine":248,"endColumn":32},{"ruleId":"813","severity":1,"message":"814","line":272,"column":33,"nodeType":"815","messageId":"816","endLine":272,"endColumn":35},{"ruleId":"813","severity":1,"message":"814","line":272,"column":73,"nodeType":"815","messageId":"816","endLine":272,"endColumn":75},{"ruleId":"813","severity":1,"message":"814","line":273,"column":39,"nodeType":"815","messageId":"816","endLine":273,"endColumn":41},{"ruleId":"755","severity":1,"message":"912","line":2,"column":8,"nodeType":"757","messageId":"758","endLine":2,"endColumn":13},{"ruleId":"913","severity":1,"message":"914","line":71,"column":13,"nodeType":"883","messageId":"816","endLine":72,"endColumn":28},{"ruleId":"755","severity":1,"message":"915","line":102,"column":17,"nodeType":"757","messageId":"758","endLine":102,"endColumn":18},{"ruleId":"755","severity":1,"message":"916","line":103,"column":17,"nodeType":"757","messageId":"758","endLine":103,"endColumn":18},{"ruleId":"755","severity":1,"message":"917","line":104,"column":17,"nodeType":"757","messageId":"758","endLine":104,"endColumn":18},{"ruleId":"918","severity":1,"message":"919","line":105,"column":29,"nodeType":"920","messageId":"816","endLine":105,"endColumn":33},{"ruleId":"779","severity":1,"message":"780","line":199,"column":17,"nodeType":"781","messageId":"782","endLine":221,"endColumn":18},{"ruleId":"775","severity":1,"message":"776","line":42,"column":40,"nodeType":"777","messageId":"778","endLine":42,"endColumn":42},{"ruleId":"775","severity":1,"message":"776","line":49,"column":29,"nodeType":"777","messageId":"778","endLine":49,"endColumn":31},{"ruleId":"813","severity":1,"message":"814","line":10,"column":12,"nodeType":"815","messageId":"816","endLine":10,"endColumn":14},{"ruleId":"813","severity":1,"message":"823","line":12,"column":20,"nodeType":"815","messageId":"816","endLine":12,"endColumn":22},{"ruleId":"813","severity":1,"message":"823","line":36,"column":24,"nodeType":"815","messageId":"816","endLine":36,"endColumn":26},{"ruleId":"921","severity":1,"message":"922","line":45,"column":5,"nodeType":"923","messageId":"924","endLine":47,"endColumn":4},"no-unused-vars","'BarChart' is defined but never used.","Identifier","unusedVar","'Circle' is defined but never used.","'SvgLayer' is defined but never used.","'ShapesKonva' is defined but never used.","'KonvaShaps' is defined but never used.","'UNCCanvas' is defined but never used.","'FileUpload' is defined but never used.","'Sidebar' is defined but never used.","no-native-reassign",["925"],"no-negated-in-lhs",["926"],"'logo' is defined but never used.","'Component' is defined but never used.","'Link' is defined but never used.","'Toggle' is defined but never used.","'Nav' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'listReactFiles' is defined but never used.","'getRectPointX' is defined but never used.","'getRectPointY' is defined but never used.","'useState' is defined but never used.","'Polyline' is defined but never used.","'Shape' is defined but never used.","'Ellipse' is defined but never used.","'Line' is defined but never used.","'Arc' is defined but never used.","'NavItem' is defined but never used.","'MenuItem' is defined but never used.","'FormControl' is defined but never used.","'getPloyPoints' is defined but never used.","'preFunctions' is defined but never used.","'UNCButton' is defined but never used.","'ShapesData' is defined but never used.","'XmlToJson' is defined but never used.","'getStateObject' is defined but never used.","'XMLData' is defined but never used.","'UNCDynamicText' is defined but never used.","'style' is defined but never used.","'geoGnomonic' is defined but never used.","'isDOMComponentElement' is defined but never used.","'androidToRgba' is defined but never used.","'he' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\c.","Literal","unnecessaryEscape",["927","928"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-redeclare","'value' is already defined.","redeclared","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","Expected '===' and instead saw '=='.","'lables' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'Konva' is defined but never used.","'ReactDOM' is defined but never used.","'render' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'Rect' is defined but never used.","'Text' is defined but never used.","'rectOjects' is assigned a value but never used.","'eleObjects' is assigned a value but never used.","'ShapeComponets' is defined but never used.","'LableComponets' is defined but never used.","'useEffect' is defined but never used.","'Stage' is defined but never used.","'Layer' is defined but never used.","'Group' is defined but never used.","'Image' is defined but never used.","no-regex-spaces","Spaces are hard to count. Use {2}.","multipleSpaces",{"range":"929","text":"930"},"no-use-before-define","'value' was used before it was defined.","usedBeforeDefined",{"range":"931","text":"930"},{"range":"932","text":"930"},{"range":"933","text":"930"},{"range":"934","text":"930"},{"range":"935","text":"930"},{"range":"936","text":"930"},"'parse' is defined but never used.","'xyz' is defined but never used.","'groupSort' is defined but never used.","'image' is defined but never used.","'text' is already defined.","'singleshapearray' is assigned a value but never used.","'tmp' is assigned a value but never used.","'gradientStartPoints' is defined but never used.","'gradientEndPoints' is defined but never used.","'fillLevelColor' is assigned a value but never used.","'direction' is assigned a value but never used.","'rate' is assigned a value but never used.","'startPoint' is already defined.","'endPoint' is already defined.","'pvalue' is already defined.","'color' is defined but never used.","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","'tagValue' is already defined.","Expected a 'break' statement before 'default'.","default","'point' is already defined.","'ration' is already defined.","'height' is already defined.","'width' is already defined.","'dynamcifill' is assigned a value but never used.","'startPoints' is defined but never used.","'endPoint' is defined but never used.","'interpolate' is defined but never used.","'display_on_off_text' is assigned a value but never used.","'setOnOffText' is assigned a value but never used.",{"range":"937","text":"930"},{"range":"938","text":"930"},{"range":"939","text":"930"},{"range":"940","text":"930"},{"range":"941","text":"930"},{"range":"942","text":"930"},{"range":"943","text":"930"},"'ProjectId' is assigned a value but never used.","'refTagValue' is assigned a value but never used.","'value' is assigned a value but never used.","'maximumPoint' is assigned a value but never used.","'minimumPoint' is assigned a value but never used.","'levelAtMaximum' is assigned a value but never used.","'levelAtMinimun' is assigned a value but never used.","'axios' is defined but never used.","no-duplicate-case","Duplicate case label.","'x' is assigned a value but never used.","'y' is assigned a value but never used.","'z' is assigned a value but never used.","no-eval","eval can be harmful.","CallExpression","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-global-assign","no-unsafe-negation",{"messageId":"944","fix":"945","desc":"946"},{"messageId":"947","fix":"948","desc":"949"},[867,869]," {2}",[2572,2574],[4069,4071],[5573,5575],[8482,8484],[9994,9996],[10418,10420],[880,882],[2541,2543],[3977,3979],[5436,5438],[8265,8267],[9734,9736],[10196,10198],"removeEscape",{"range":"950","text":"951"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"952","text":"953"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[3657,3658],"",[3657,3657],"\\"]