[{"F:\\Konvo Model\\src\\index.js":"1","F:\\Konvo Model\\src\\reportWebVitals.js":"2","F:\\Konvo Model\\src\\App.js":"3","F:\\Konvo Model\\src\\components\\Sidebar.js":"4","F:\\Konvo Model\\src\\components\\Circle.jsx":"5","F:\\Konvo Model\\src\\components\\Layer.jsx":"6","F:\\Konvo Model\\src\\components\\BarChart.jsx":"7","F:\\Konvo Model\\src\\components\\UNCCanvas.jsx":"8","F:\\Konvo Model\\src\\components\\KonvaShape.jsx":"9","F:\\Konvo Model\\src\\components\\ShapsKonva.jsx":"10","F:\\Konvo Model\\src\\components\\FileUpload.jsx":"11","F:\\Konvo Model\\src\\components\\UNCDynamicText.jsx":"12","F:\\Konvo Model\\src\\components\\UNCText.jsx":"13","F:\\Konvo Model\\src\\components\\CanvasUtils.js":"14","F:\\Konvo Model\\src\\components\\JSONUtil.js":"15","F:\\Konvo Model\\src\\components\\XmlToJson.es6.js":"16","F:\\Konvo Model\\src\\data\\shapesData.js":"17","F:\\Konvo Model\\src\\components\\UNCRectangle.jsx":"18","F:\\Konvo Model\\src\\components\\UNCEllipse.jsx":"19","F:\\Konvo Model\\src\\components\\UNCPipe.jsx":"20","F:\\Konvo Model\\src\\components\\UNCLabel.jsx":"21","F:\\Konvo Model\\src\\components\\UNCLine.jsx":"22","F:\\Konvo Model\\src\\components\\UNCButton.jsx":"23","F:\\Konvo Model\\src\\components\\UNCPolygon.jsx":"24","F:\\Konvo Model\\src\\components\\preFunctions.jsx":"25","F:\\Konvo Model\\src\\components\\APIUtil.jsx":"26"},{"size":1040,"mtime":1628343943526,"results":"27","hashOfConfig":"28"},{"size":362,"mtime":499162500000,"results":"29","hashOfConfig":"28"},{"size":491,"mtime":1620799344740,"results":"30","hashOfConfig":"28"},{"size":1596,"mtime":1617362483800,"results":"31","hashOfConfig":"28"},{"size":172,"mtime":1611998600000,"results":"32","hashOfConfig":"28"},{"size":228,"mtime":1611995916000,"results":"33","hashOfConfig":"28"},{"size":3044,"mtime":1628341788976,"results":"34","hashOfConfig":"28"},{"size":19946,"mtime":1628344515909,"results":"35","hashOfConfig":"28"},{"size":9889,"mtime":1614763188000,"results":"36","hashOfConfig":"28"},{"size":3901,"mtime":1616828535870,"results":"37","hashOfConfig":"28"},{"size":2551,"mtime":1614686498000,"results":"38","hashOfConfig":"28"},{"size":1693,"mtime":1628344087234,"results":"39","hashOfConfig":"28"},{"size":6824,"mtime":1628330961809,"results":"40","hashOfConfig":"28"},{"size":2763,"mtime":1616422614491,"results":"41","hashOfConfig":"28"},{"size":10827,"mtime":1628242491520,"results":"42","hashOfConfig":"28"},{"size":4974,"mtime":1576075852000,"results":"43","hashOfConfig":"28"},{"size":54542,"mtime":1615969843623,"results":"44","hashOfConfig":"28"},{"size":3447,"mtime":1628344640319,"results":"45","hashOfConfig":"28"},{"size":3236,"mtime":1628346612628,"results":"46","hashOfConfig":"28"},{"size":2894,"mtime":1628346593877,"results":"47","hashOfConfig":"28"},{"size":6728,"mtime":1628331407653,"results":"48","hashOfConfig":"28"},{"size":621,"mtime":1628345266821,"results":"49","hashOfConfig":"28"},{"size":1591,"mtime":1628342480743,"results":"50","hashOfConfig":"28"},{"size":2861,"mtime":1628323645498,"results":"51","hashOfConfig":"28"},{"size":7519,"mtime":1623046181912,"results":"52","hashOfConfig":"28"},{"size":2706,"mtime":1614685210000,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},"1z677i",{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"57"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"57"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"57"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":57,"fixableErrorCount":0,"fixableWarningCount":2,"source":"75","usedDeprecatedRules":"57"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"57"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"57"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"57"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"57"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":5,"source":"90","usedDeprecatedRules":"57"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"57"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"57"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"57"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"57"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":5,"source":"112","usedDeprecatedRules":"57"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"57"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"57"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"57"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"57"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"57"},"F:\\Konvo Model\\src\\index.js",["128","129","130","131","132","133","134","135"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport BarChart from \"./components/BarChart\";\nimport Circle from \"./components/Circle\";\nimport SvgLayer from \"./components/Layer\";\n\nimport ShapesKonva from \"./components/ShapsKonva\";\nimport KonvaShaps from \"./components/KonvaShape\";\nimport UNCCanvas from \"./components/UNCCanvas\";\nimport FileUpload from \"./components/FileUpload\";\nimport Sidebar from \"./components/Sidebar\";\n\nReactDOM.render(\n  <React.StrictMode>\n   <App/>\n \n    {/* <SvgLayer height=\"1000\" width=\"600\" >\n      <Circle ></Circle>\n    </SvgLayer> */}\n\n    {/* <KonvaShaps/> */}\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["136","137"],"F:\\Konvo Model\\src\\reportWebVitals.js",[],"F:\\Konvo Model\\src\\App.js",["138","139"],"import logo from './logo.svg';\nimport './App.css';\nimport {BrowserRouter as Router,Route,Switch} from 'react-router-dom'\nimport Sidebar from './components/Sidebar';\nimport UNCCanvas from './components/UNCCanvas';\nimport React from 'react';\n\nfunction App() {\n  return (\n  \n    <React.Fragment>\n      <Router>\n      {/* <Sidebar/> */}\n      <Switch>\n        <Route exact path='/' component={UNCCanvas}></Route>\n      </Switch>\n      </Router>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","F:\\Konvo Model\\src\\components\\Sidebar.js",["140","141","142","143"],"import React,{Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport SideNav, { Toggle, Nav, NavItem, NavIcon, NavText } from '@trendmicro/react-sidenav';\r\n\r\n// Be sure to include styles at some point, probably during your bootstraping\r\nimport '@trendmicro/react-sidenav/dist/react-sidenav.css';\r\n\r\n\r\n\r\n/* import {BrowserRouter as Router ,Route,Switch} from 'react-router-dom'; */\r\n\r\n\r\nclass Sidebar extends React.Component{\r\n    \r\n    render(){\r\n\r\n        return(\r\n            <SideNav\r\n    onSelect={(selected) => {\r\n        // Add your code here\r\n    }}\r\n>\r\n    <SideNav.Toggle />\r\n    <SideNav.Nav defaultSelected=\"home\">\r\n        <NavItem eventKey=\"home\">\r\n            <NavIcon>\r\n                <i className=\"fa fa-fw fa-home\" style={{ fontSize: '1.75em' }} />\r\n            </NavIcon>\r\n            <NavText>\r\n                Home\r\n            </NavText>\r\n        </NavItem>\r\n        <NavItem eventKey=\"charts\">\r\n            <NavIcon>\r\n                <i className=\"fa fa-fw fa-line-chart\" style={{ fontSize: '1.75em' }} />\r\n            </NavIcon>\r\n            <NavText>\r\n                Charts\r\n            </NavText>\r\n            <NavItem eventKey=\"charts/linechart\">\r\n                <NavText>\r\n                    Line Chart\r\n                </NavText>\r\n            </NavItem>\r\n            <NavItem eventKey=\"charts/barchart\">\r\n                <NavText>\r\n                    Bar Chart\r\n                </NavText>\r\n            </NavItem>\r\n        </NavItem>\r\n    </SideNav.Nav>\r\n</SideNav>\r\n            \r\n\r\n            \r\n        );\r\n    }\r\n}\r\n    export default Sidebar;","F:\\Konvo Model\\src\\components\\Circle.jsx",[],"F:\\Konvo Model\\src\\components\\Layer.jsx",[],"F:\\Konvo Model\\src\\components\\BarChart.jsx",["144","145","146","147"],"import React, {Component} from 'react';\r\nimport * as d3 from \"d3\";\r\nimport ShapesData from \"../data/shapesData\"\r\n\r\nclass BarChart extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {ShapesData};\r\n        this.dataset = [100, 200, 300, 400, 500];\r\n      }\r\n    \r\n    \r\n    componentDidMount() {\r\n      this.drawChart();\r\n    }\r\n      \r\n    drawChart() {\r\n      \r\n        let eccanvas= d3.select(\"body\").attr(\"style\", \"border: 2px solid gold\");//main body\r\n\r\n        let svg = eccanvas\r\n        .append('svg')\r\n        .attr('width', parseFloat(ShapesData.hmipage.width))\r\n        .attr('height', parseFloat(ShapesData.hmipage.height));\r\n\r\n        ShapesData.hmipage.component_instances.map((obj,i) =>  {\r\n          \r\n    svg.append('rect')\r\n      .attr('x', parseFloat(obj.x1))\r\n      .attr('y',parseFloat(obj.y1))\r\n      .attr('width', parseFloat(obj.x2))\r\n      .attr('height',parseFloat(obj.y2))\r\n      .attr('fill',\"white\")\r\n      .attr('stroke',\"10\")\r\n\r\n\r\n      obj.shape.filter(x=>x).map((shapeObject)=>{\r\n        switch(shapeObject.type)\r\n        {\r\n            case \"Rectangle\":\r\n                svg.append('rect')\r\n      .attr('x', parseFloat(shapeObject.rectangle.x1)+parseFloat(obj.x1))\r\n      .attr('y', parseFloat(shapeObject.rectangle.y1)+parseFloat(obj.y1))\r\n      .attr('width', parseFloat(shapeObject.rectangle.x2))\r\n      .attr('height', parseFloat(shapeObject.rectangle.y2))\r\n      .attr('fill', shapeObject.fill.fill)\r\n      .attr('stroke', parseFloat(shapeObject.line.line_width))\r\n        break;\r\n        }\r\n    })\r\n\r\n        }\r\n        \r\n\r\n        );\r\n        \r\n       \r\n//         let size = 500;\r\n//    let svg = eccanvas\r\n//                .append('svg')\r\n//                .attr('width', size)\r\n//                .attr('height', size);\r\n\r\n\r\n//                let rect_width = 95;\r\n//    svg.selectAll('rect')\r\n//       .data(this.dataset)\r\n//       .enter()\r\n//       .append('rect')\r\n//       .attr('x', (d, i) => 5 + i*(rect_width + 5))\r\n//       .attr('y', d => size- d)\r\n//       .attr('width', rect_width)\r\n//       .attr('height', d => d)\r\n//       .attr('fill', 'teal');\r\n\r\n    }\r\n    \r\n    getShapeObject(shapeObject,parentObj)\r\n    {\r\n        var obj=\"\";\r\n\r\n        switch(shapeObject.type)\r\n        {\r\n            case \"Rectangle\":\r\n                obj.append('rect')\r\n      .attr('x', parseFloat(shapeObject.rectangle.x1)+parseFloat(parentObj.x1))\r\n      .attr('y', parseFloat(shapeObject.rectangle.y1)+parseFloat(parentObj.y1))\r\n      .attr('width', parseFloat(shapeObject.rectangle.x2))\r\n      .attr('height', parseFloat(shapeObject.rectangle.y2))\r\n      .attr('fill', shapeObject.fill.fill)\r\n      .attr('stroke', parseFloat(shapeObject.line.line_width));\r\n                break;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n        // <svg id=\"ecscadaCanvas\" viewBox=\"0 0 100 50\" style={{\r\n        //     border: \"2px solid gold\"\r\n        //   }} />\r\n        <div id=\"ecscadaCavas\"></div>\r\n          )\r\n    }\r\n  }\r\n      \r\n  export default BarChart;","F:\\Konvo Model\\src\\components\\UNCCanvas.jsx",["148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204"],"import React, { Component } from \"react\"; \r\nimport listReactFiles from 'list-react-files'\r\nimport { getRectPointX, getRectPointY } from \"./CanvasUtils.js\";\r\nimport { useState } from 'react'\r\nimport {\r\n  Stage,\r\n  Polyline,\r\n  Shape,\r\n  Layer,\r\n  Rect,\r\n  Ellipse,\r\n  Text,\r\n  Circle,\r\n  Line,\r\n  Group,\r\n  Arc,\r\n  Image\r\n} from \"react-konva\";\r\nimport { Navbar, Nav, NavItem, NavDropdown, MenuItem ,Form ,FormControl,Button } from 'react-bootstrap';\r\nimport { getPloyPoints } from \"./JSONUtil.js\";\r\nimport UNCRectangle from \"./UNCRectangle\";\r\nimport preFunctions from \"./preFunctions\";\r\nimport UNCEllipse from \"./UNCEllipse\";\r\nimport UNCPipe from \"./UNCPipe\";\r\nimport UNCLine from \"./UNCLine\";\r\nimport UNCPolygon from \"./UNCPolygon\";\r\nimport UNCLabel from \"./UNCLabel\";\r\nimport UNCButton from \"./UNCButton\";\r\nimport ShapesData from \"../data/shapesData\";\r\nimport { XmlToJson } from \"./XmlToJson.es6\";\r\nimport { getStateObject, ShapeObjects } from \"./JSONUtil\";\r\nimport axios from 'axios';\r\n import XMLData from './templates/xmlFiles/template_4.pagex';\r\nimport UNCDynamicText from \"./UNCDynamicText.jsx\";\r\nimport { style } from \"d3-selection\";\r\nimport UNCText from \"./UNCText.jsx\";\r\nimport { geoGnomonic } from \"d3\";\r\nimport { isDOMComponentElement } from \"react-dom/cjs/react-dom-test-utils.production.min\";\r\n\r\n\r\nclass UNCCanvas extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      shapes: [],\r\n      lables: [],\r\n      stageScale: 1,\r\n      stageX: 0,\r\n      ProjectId:null,\r\n      stageY: 0,\r\n      loading :false,\r\n      currentXml:\"\",\r\n      imagesArray:[],\r\n      display_on_off_value:false,\r\n     randomValue:0,\r\n     xmlsList:[],\r\n      tagValue : {},\r\n      templateData : null,\r\n        image: null,\r\n        windowheight : null,\r\n        windowwidth : null ,\r\n          windowColor : null\r\n    };\r\n    this.myRef = React.createRef();\r\n    this.App = React.createRef();\r\n  }\r\n \r\n  componentDidMount() {\r\n    \r\n    const image = new window.Image();\r\n    image.src = \"assets/ecs.png\";\r\n    \r\n    image.onload = () => {\r\n      this.setState({\r\n        image: image\r\n      });\r\n    };\r\n    //Default Index Xml- HomePage----\r\n    this.handleSubmit(\"Home_Page\");\r\n    //Importing Xmls-------\r\n  this.importingXmls()\r\n  } \r\n\r\n\r\n\r\n\r\n    //This Function Convets AndroidColorCode to RgbaColorCode-----------------\r\n    androidToRgba(color){\r\n      const colorArray = []\r\n      for(let i=0; i<4; i++){\r\n        colorArray.push(color % 256)\r\n        color>>>=8\r\n      }\r\n      // this.vv();\r\n      const alpha = colorArray.pop() / 255\r\n      return `rgba(${colorArray.reverse()},${alpha})`\r\n    }\r\n  \r\n  \r\n    //Dynamic Importing of Xmls------------------------\r\n    importingXmls(){\r\n      function importAll(r) {\r\n        return r.keys().map(r);\r\n      }\r\n      var images = importAll(require.context('./Xml', false, /\\.(pagex)$/));\r\n      console.log(images)\r\n      this.setState({\r\n        xmlsList:images},() => {\r\n          console.log(this.state.xmlsList)\r\n        })    \r\n    }\r\n    \r\n\r\n\r\n    //This Loads  User Selected Xml \r\n  async handleSubmit(event) {\r\n    this.setState({\r\n      loading : true,\r\n      currentXml:event\r\n    })\r\n    console.log(event)\r\n      var parser = require('fast-xml-parser');\r\n      var he = require('he');\r\n      var options = {\r\n        attributeNamePrefix : \"\",\r\n        //attrNodeName: false,\r\n        //textNodeName : \"#text\",\r\n        ignoreAttributes : false,\r\n        ignoreNameSpace: false,\r\n        // attributeNamePrefix : \"\",\r\n        // attrNodeName: \"attr\", //default is 'false'\r\n        // textNodeName : \"\",\r\n        // ignoreAttributes : true,\r\n        // ignoreNameSpace : true,\r\n        // allowBooleanAttributes : false,\r\n        // parseNodeValue : true,\r\n        // parseAttributeValue : false,\r\n        // trimValues: true,\r\n        cdataTagName: \"__cdata\", //default is 'false'\r\n        cdataPositionChar: \"\\c\",\r\n        // parseTrueNumberOnly: false,\r\n        // arrayMode: false, //\"strict\"\r\n        // attrValueProcessor: (val, attrName) => he.decode(val, {isAttributeValue: true}),//default is a=>a\r\n        // tagValueProcessor : (val, tagName) => he.decode(val), //default is a=>a\r\n        // stopNodes: [\"parse-me-as-string\"]\r\n    };\r\n\r\n    try{\r\n      var value = require('./Xml/'+ event +'.pagex');\r\n    }catch{\r\n\r\n    }\r\n     var data = [];\r\n  console.log(value)\r\n    await axios.get( value.default, {\r\n      \"Content-Type\": \"application/xml; charset=utf-8\"\r\n   }) .then( (response) =>  {\r\n     console.log(response)\r\n     data = response.data;\r\n   }).catch(error => {\r\n    console.log(error.response)\r\n});\r\n\r\n    \r\n    // Page Convertion---------------------------------------------------------------------\r\n    var tObj = parser.getTraversalObj(data,options);\r\n    var jsonObj = parser.convertToJson(tObj,options);\r\n      console.log(\"jsonPageObj--------------------------------------------------------------\")\r\n     console.log(jsonObj)\r\n    \r\n     this.setState({\r\n       ProjectId:jsonObj.hmipage?.id\r\n     })\r\n\r\n   var  v = androidToRgba(jsonObj.hmipage.color);\r\n   console.log(v)\r\n\r\n\r\n   function androidToRgba(color){\r\n    const colorArray = []\r\n    for(let i=0; i<4; i++){\r\n      colorArray.push(color % 256)\r\n      color>>>=8\r\n    }\r\n    const alpha = colorArray.pop() / 255\r\n    return `rgba(${colorArray.reverse()},${alpha})`\r\n  }\r\n\r\n\r\n     this.setState({windowColor:v ?? null})\r\n     this.setState({windowheight:jsonObj.hmipage.height ?? \"1050\"})\r\n     this.setState({windowwidth:jsonObj.hmipage.width ?? \"1890\"})\r\n   \r\n\r\n    var pageShape = ShapeObjects(jsonObj);\r\n    // console.log(\"PageShapes ------------------------------------------------------------------\")\r\n    // console.log(pageShape);\r\n\r\n    // console.log(\"-------------------------JsonTemplateID-----------------------------\")\r\n    // console.log(jsonObj.hmipage.template_id)\r\n\r\n    var templateShapes = [];\r\n    // require('../' + this.props.termsAndCondition.pdfDocument);\r\n    \r\n    try{\r\n      var value = require('./templates/'+jsonObj.hmipage.template_id+'.pagex');\r\n    }catch{\r\n\r\n    }\r\n\r\n    // console.log(value)\r\n    if(value != undefined)\r\n       {\r\n    //  console.log(\"Entered If \"+value.default)\r\n     await axios.get( value.default, {\r\n      \"Content-Type\": \"application/xml; charset=utf-8\"\r\n   }) .then( (response) =>  {\r\n    //  console.log(response)\r\n        // console.log('Your xml file as string', response.data);\r\n      this.setState({templateData:response.data}, () => {\r\n        // console.log(this.state.templateData)\r\n         //Template Convertion-----------------------------------------------------------------------\r\n      var template = parser.getTraversalObj(this.state.templateData,options)\r\n      var templateJson = parser.convertToJson(template,options);\r\n      // console.log(\"jsonTemplateObj--------------------------------------------------------------\")\r\n       // console.log(templateJson)\r\n\r\n      templateShapes = ShapeObjects(templateJson)\r\n      // console.log(\"TemplateShapes ------------------------------------------------------------------\")\r\n      // console.log(templateShapes);\r\n      }) \r\n     } ) }else{\r\n      // console.log(\"NO File Detected!\")\r\n     }\r\n  \r\n      pageShape.map((val)=>{\r\n        templateShapes.push(val)\r\n      })\r\n\r\n      this.setState({\r\n          shapes:templateShapes},() => {\r\n            console.log(this.state.shapes)\r\n            this.setState({\r\n              loading:false\r\n            })\r\n          })    \r\n  }\r\n\r\n    //Render Images---------------------------------------------------------------------\r\n    renderImages(image, obj)\r\n    {\r\n      return  <Image x={parseFloat(image.x)} y={parseFloat(image.y)}\r\n          image= {this.state.image}\r\n      height ={parseFloat(image.box.bottom)}\r\n      width = {parseFloat(image.box.right)} />\r\n    }\r\n\r\n\r\n  //Render Shapes --------------------------------\r\n  renderShapes(shape, parentX, parentY) {\r\n    \r\n   if(shape) {\r\n    if(shape.type != undefined)\r\n    { \r\n    switch (shape.type) {\r\n      case \"Rectangle\":\r\n        return <UNCRectangle shape={shape} parentX={parentX} parentY={parentY} />;\r\n      case \"Ellipse\":\r\n        return <UNCEllipse shape={shape} parentX={parentX} parentY={parentY} />;\r\n      case \"Pipe\":      \r\n        return <UNCPipe shape={shape} parentX={parentX} parentY={parentY} />;\r\n      case \"Line\":        \r\n        return <UNCLine shape={shape} parentX={parentX} parentY={parentY} />;\r\n      case \"Polygon\":\r\n        return <UNCPolygon shape={shape} parentX={parentX} parentY={parentY} />;\r\n          case \"Button\":\r\n\r\n          return <UNCButton shape={shape} parentX={parentX} parentY={parentY} ProjectId={this.state.ProjectId}/>\r\n       }\r\n      }\r\n    }   \r\n  }\r\n\r\n  \r\n//Render Group-------------------------------------------------\r\nrenderGroupsMian(shape,Obj)\r\n{\r\n   if(shape.group)\r\n    {\r\n      console.log(\"-0-group\")\r\n      if(shape.group.length != undefined) {\r\n        return shape.group.map((group) =>\r\n        this.renderGroupsMian(group,Obj))\r\n      }else{\r\n        return   this.renderGroupsMian(shape.group,Obj) \r\n\r\n      }     \r\n    }\r\n\r\n\r\n    if(shape.text)\r\n    {\r\n      console.log(\"-0-text\")\r\n          if(shape.text.length != undefined )\r\n          {\r\n        return   shape.text.map((text) => this.renderGrouptext(text,Obj))\r\n          }\r\n          else{\r\n            return  this.renderGrouptext(shape.text,Obj)\r\n          }\r\n    }\r\n    \r\n\r\n     if(shape.shape)\r\n    {\r\n      console.log(\"-0-shape\")\r\n      if( shape.shape.length != undefined){\r\n    return    shape.shape.map((shape) =>\r\n        this.renderShapes(shape,Obj.x1,Obj.y1))\r\n      }else{\r\n\r\n     return   this.renderShapes(shape.shape,Obj.x1,Obj.y1) \r\n      }  \r\n    } \r\n}\r\n\r\n\r\n  //Direct Text-------------------\r\n   rendertext(text,parentX,parentY)\r\n  {\r\n   return  <UNCText text={text} parentX={parentX} parentY={parentY} />;\r\n        } \r\n  \r\n\r\n\r\n\r\n  //Group Text-------------------\r\n  renderGrouptext(text,obj)\r\n  {\r\n   \r\nvar val = \"\";  \r\nval = text.static_text;\r\n\r\n//Display Numeric----------------------------------------------\r\nif(text.display_numeric != undefined)\r\n{\r\nval = text.display_numeric.expression.__cdata ;\r\n//val = val.split(\"(\");\r\n// console.log(val)\r\n}\r\n\r\n//Display_on_off-----------------------------------------------\r\nelse if(text.display_on_off != undefined)\r\n{\r\nvar  cdataValue = text.display_on_off.__cdata ;\r\n   //this.timer = setInterval(() => this.displayOutput(),1000)  \r\n}\r\n\r\n// return  <UNCLabel text={text}  />;\r\n        return  <Text fontFamily={text.font_family} \r\n          \r\n        fontSize={text.font_size } \r\n             fill={this.androidToRgba(text.color)}\r\n             text={text.display_on_off != undefined?\r\n              this.state.display_on_off_value==true ?text.display_on_off.text_on:text.display_on_off.text_off:\r\n            val}\r\n \r\n             x = { parseFloat(obj.x1 ?? 0)+ parseFloat(text.box.axis_offset_left)+parseFloat(text.box.axis_anchor)+(parseFloat(text.box.left) )+parseFloat(10) }\r\n             y = { parseFloat(obj.y1 ?? 0)+ parseFloat(text.box.axis_offset_top)+parseFloat(text.box.axis_anchor)+((parseFloat(text.box.top))+parseFloat(20)) }  \r\n            //  x={ parseFloat(parentX)+ parseFloat(text.box.axis_anchor)+parseFloat(text.box.axis_offset_left)+((parseFloat(text.box.left))/2)}\r\n            //  y={ parseFloat(parentY)+parseFloat(text.box.axis_anchor)+parseFloat(text.box.axis_offset_top)+((parseFloat(text.box.top))/2)}\r\n         />\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n      //Labels ------------------------------------------------------------------\r\n      renderLabels(text,obj)\r\n      {\r\n        \r\n        return  <UNCLabel text={text}  />;\r\n              }\r\n            \r\n      \r\n      \r\n\r\n    \r\n\r\n\r\n  //Render--------------------------------------------------------------------------------------------------------------------------------------------\r\n  render() {\r\n    const { shapes, lables } = this.state;\r\n    const label =  this.state.loading == true ? <label>Loading.....</label> : <label>Loading.....</label>\r\n\r\n    return (\r\n     \r\n      <div id=\"stageContainer\"   width={this.state.windowwidth}\r\n      height={this.state.windowheight} style={{backgroundColor:this.state.windowColor}} >\r\n      <Navbar bg=\"dark\" variant=\"dark\">\r\n    <Navbar.Brand href=\"#home\"> \r\n    <img\r\n        src=\"assets/ecs.png\"\r\n        width=\"80\"\r\n        height=\"40\"\r\n        className=\"d-inline-block align-top\"\r\n      /></Navbar.Brand>\r\n    <Nav className=\"mr-auto\">\r\n      <Nav.Link  href=\"#Home_Page\" onClick={()=> this.handleSubmit(\"Home_Page\")}>Home</Nav.Link>\r\n    \r\n       {/* Dynamic Retriving of Xmls from the Folder -----------------------------------------------------------   */}\r\n      <NavDropdown title=\"Xml's\" id=\"basic-nav-dropdown\"> \r\n        {\r\n          this.state.xmlsList.map((xml) =>\r\n          {\r\n\r\n            var name = xml.default.replace(\"/static/media/\",\"\");\r\n           name = name.replace(\".pagex\",\"\");\r\n          name  =  name.split(\".\");\r\n\r\n            return   <NavDropdown.Item href=\"#\" onClick={()=> this.handleSubmit(name[0])}>{name[0]}</NavDropdown.Item>       \r\n          }\r\n          )\r\n\r\n        }\r\n       </NavDropdown>\r\n     \r\n      <Button variant=\"primary\">{this.state.ProjectId}</Button>{' '}\r\n    </Nav>\r\n    <Form inline>\r\n    {/* <Button variant=\"outline-info\">LatestAlarms</Button>{' '}\r\n    <Button variant=\"outline-info\">LatestEvents</Button>{' '} */}\r\n      <Button variant=\"outline-info\">Login</Button>\r\n    </Form>\r\n  </Navbar>\r\n\r\n    \r\n        <center><div style={{display: this.state.loading ? \"block\" : \"none\"}}>\r\n          <label>Loading...</label>\r\n          </div></center>\r\n      \r\n\r\n       <Stage\r\n          id=\"konvaStage\"\r\n          ref={this.myRef}\r\n          width={this.state.windowwidth}\r\n          height={this.state.windowheight}\r\n          containerId={\"stageContainer\"}\r\n          //  style={{marginLeft:\"250px\", backgroundColor:\"Grey\"}}\r\n\r\n          style={{display: this.state.loading ? \"none\" : \"block\",backgroundColor:\"this.state.windowColor\"}}\r\n          \r\n        >\r\n   \r\n          <Layer>\r\n            {shapes.length != undefined ? shapes.map((obj, i) => obj != undefined ?\r\n             (\r\n              <Group\r\n                key={\"Grp_\" + obj.objectNumber + i}\r\n\r\n               // id={obj.objectNumber}\r\n                x={0}\r\n                y={0}\r\n                // width={parseFloat(obj.x2 == undefined ? 0 : obj.x2)}\r\n                // height={parseFloat(obj.y2 == undefined ? 0 : obj.y2)}\r\n                 // fill={\"blue\"}\r\n                //draggable={true}\r\n              >\r\n\r\n\r\n {/* obj.shape--------------------------------------------------------- */}\r\n                {obj.shape === undefined ? (\r\n                  <Group />\r\n                ) : (\r\n                  obj.shape.length != undefined ?\r\n                  obj.shape.map((shape) =>\r\n                    this.renderShapes(shape, obj.x1, obj.y1)\r\n                  ) :this.renderShapes(obj.shape, obj.x1, obj.y1)\r\n                )}\r\n\r\n\r\n {/* obj.shapes--------------------------------------------------------- */}\r\n                {obj.shapes === undefined ? (\r\n                  <Group />\r\n                ) : (\r\n                  obj.shapes.map((shape) =>\r\n                    this.renderShapes(shape, obj.x1, obj.y1)\r\n                  )\r\n                )}\r\n\r\n               \r\n\r\n{/* Obj.text----------------------------------------------------------- */}\r\n\r\n                {/* {obj.text === undefined ?(\r\n                  <Group />\r\n                ):\r\n                obj.text.length != undefined ? \r\n                 obj.text.map((value) => {\r\n\r\n                  console.log(\"*****************************************************************************\")\r\n                  return  <UNCDynamicText shape={value} parentX={obj.x1} parentY={obj.y1} />\r\n                 }\r\n                  ):   <UNCDynamicText shape={obj.text} parentX={obj.x1} parentY={obj.y1} />\r\n                } */}\r\n\r\n                {obj.text === undefined ?(\r\n                  <Group />\r\n                ):\r\n                obj.text.length != undefined ? \r\n                 obj.text.map((value) =>   this.rendertext(value, obj.x1, obj.y1)\r\n                  ):   this.rendertext(obj.text, obj.x1, obj.y1)\r\n                }\r\n \r\n{/* //Obj.Labels---------------------------------------------------- */}\r\n                 {obj.labels === undefined ? (\r\n                  <Group />\r\n                ) :  (\r\n                  //MainLabels length Validation\r\n                obj.labels.length != undefined ?\r\n                //if\r\n                  obj.labels.map((text,i) =>  \r\n                    \r\n                     text.text.length != undefined ?\r\n                  \r\n                         text.text.map((text) =>\r\n                        \r\n                         this.renderLabels(text,obj))\r\n\r\n                     : this.renderLabels(text.text,obj))\r\n                     //else\r\n                :   obj.labels.text.length !=undefined ?\r\n\r\n                     obj.labels.text.map((text,i)=>\r\n                     this.renderLabels(text,obj)\r\n                     )\r\n                       :this.renderLabels(obj.labels.text,obj)\r\n                )} \r\n                \r\n {/* //obj.groups-------------------------------------------------------- */}\r\n\r\n             {\r\n             obj.group === undefined ? (\r\n                  <Group />\r\n                ) : (\r\n                  //if--1--------------------\r\n                 \r\n                  obj.group.length != undefined ?\r\n                      obj.group.map((val) => \r\n                     \r\n                        { \r\n                        if(val.text)\r\n                        { \r\n                          console.log(\"-0-text\")\r\n                          console.log(obj)\r\n                         if ( val.text.length != undefined) {\r\n                          return    val.text.map((text) => this.renderGrouptext(text,obj))\r\n\r\n                          }\r\n                          else \r\n                          {\r\n                           return  this.renderGrouptext(val.text,)\r\n                          }\r\n                        }\r\n\r\n                        if(val.group)\r\n                        { \r\n                          console.log(\"-0-group\")\r\n                         if ( val.group.length != undefined) {\r\n                          return   val.group.map((group) => this.renderGroupsMian(group,obj))\r\n                          }\r\n                          else \r\n                          {\r\n                           return  this.renderGroupsMian(val.group, obj)\r\n                          }\r\n                   \r\n                        }\r\n                        if(val.shape)\r\n                        {\r\n                          console.log(\"-0-shape\")\r\n\r\n                          if(val.shape.length != undefined) {\r\n                        return     val.shape.map((shape) =>\r\n                                this.renderShapes(shape,obj.x1,obj.y1)) \r\n                          }\r\n                           else\r\n                           {\r\n                         return  this.renderShapes(val.shape,obj.x1,obj.y1)\r\n                          \r\n                           }                                \r\n                        }        }\r\n                      ):   this.renderGroupsMian(obj.group,obj) \r\n                )   }\r\n\r\n\r\n {/* //obj.images-------------------------------------------------------- */}\r\n\r\n              {obj.image === undefined ? (\r\n                  <Group />\r\n                ) : (\r\n                  obj.image.length != undefined ?\r\n                  obj.image.map((image) =>\r\n                    this.renderImages(image, obj)\r\n                  ):   this.renderImages(obj.image, obj)\r\n                )}\r\n\r\n              </Group>\r\n            ):null  ):null }\r\n            \r\n          </Layer>\r\n        </Stage>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UNCCanvas;","F:\\Konvo Model\\src\\components\\KonvaShape.jsx",["205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225"],"import Konva from 'konva';\r\nimport React, { Component } from 'react'\r\nimport ReactDOM from \"react-dom\";\r\nimport { render } from 'react-dom';\r\nimport { Stage, Polyline, Shape,Layer, Rect,Ellipse, Text, Circle, Line,Group,Arc } from 'react-konva';\r\nimport ShapesData from \"../data/shapesData\"\r\n \r\n\r\nexport default class KonvaShaps extends  Component{\r\n    \r\n    constructor(props) {\r\n      super(props);\r\n      this.myRef = React.createRef();\r\n      this.state = {color:1};\r\n      this.shapesObjData=[]\r\n      \r\n    }\r\n\r\n      \r\n    componentDidMount() {\r\n        this.LoadShapes();\r\n      }\r\n\r\n      LoadShapes()\r\n      {\r\n        var shapeData=ShapesData.hmipage.shapes.shape\r\n        this.shapesObjData.push(shapeData)\r\n        let ciData= ShapesData.hmipage.component_instances.map((ci=> ci))\r\n        this.shapesObjData.push(ciData.map(xx=>xx.shap))\r\n        console.log(this.myRef.current.find(\"#4293782504\"))\r\n        this.setAnimation(this.myRef.current.find(\"#4293782504\"))\r\n\r\n      }\r\n\r\n\r\n      setAnimation(shape)\r\n      {\r\n         this.setState((x)=>x.id=2) \r\n        shape.to({\r\n            fi: shape.x,\r\n            fillLinearGradientStartPointY: shape.y,\r\n            duration: 0.5\r\n          });\r\n          this.setState.color++;\r\n         }\r\n\r\n   \r\n\r\n\r\n      getXPoint(shape)\r\n      {\r\n        switch(shape.type)\r\n        {\r\n            case \"Rectangle\":\r\n            return (parseFloat(shape.rectangle.x1)+parseFloat(shape.box.axis_offset_left));\r\n            case \"Ellipse\":\r\n                return (parseFloat(shape.ellipse.x1)+parseFloat(shape.box.axis_offset_left)+((parseFloat(shape.box.left)+parseFloat(shape.box.right))/2));\r\n        }\r\n\r\n      }\r\n\r\n      getYPoint(shape)\r\n      {\r\n        switch(shape.type)\r\n        {\r\n            case \"Rectangle\":\r\n            return (parseFloat(shape.rectangle.y1)+parseFloat(shape.box.axis_offset_top));\r\n            case \"Ellipse\":\r\n            return (parseFloat(shape.ellipse.y1)+parseFloat(shape.box.axis_offset_top)+((parseFloat(shape.box.top)+parseFloat(shape.box.bottom))/2));\r\n\r\n        }\r\n      }\r\n\r\n      getPloyPoints(shape,parentX,parentY)\r\n      {\r\n        var ptx=[]\r\n        console.log(shape.type);\r\n        switch(shape.type)\r\n        {\r\n            case \"Pipe\":\r\n            ptx=shape.pipe.points.map(o => ({x: o.x, y: o.y}))\r\n            break;\r\n            case \"Polygon\":\r\n            ptx=shape.polyline.points.map(o => ({x: o.x, y: o.y}))\r\n            break;\r\n\r\n        }\r\n        let ptArray=[]\r\n        ptx.forEach(element => {\r\n            ptArray.push(parseFloat(element.x)+parseFloat(parentX)+parseFloat(shape.box.axis_offset_left)+((parseFloat(shape.box.left))/2))\r\n            ptArray.push(parseFloat(element.y)+parseFloat(parentY)+parseFloat(shape.box.axis_offset_top)+((parseFloat(shape.box.top))/2))\r\n        });\r\n      \r\n       return ptArray;\r\n      }\r\n\r\n\r\n\r\n      renderLables(text,obj)\r\n      {\r\n        if(obj===null)\r\n        {\r\n            console.log(text)\r\n            obj={ \"zIndex\": \"0\",\r\n            \"objectNumber\": \"0\",\r\n            \"x1\": \"0\",\r\n            \"y1\": \"0\",\r\n            \"x2\": \"0\",\r\n            \"y2\": \"0\",\r\n            \"objectId\": \"\"}\r\n        }\r\n\r\n        return  <Text fontFamily={text.font_family} \r\n            fontSize={text.font_size}\r\n            fill={text.color}\r\n            text={text.static_text}\r\n            x={parseFloat(text.box.axis_offset_left)+((parseFloat(text.box.left))/2)}\r\n            y={parseFloat(text.box.axis_offset_top)+((parseFloat(text.box.top))/2)}\r\n        />\r\n      }\r\n\r\n      renderShapes(shape,obj)\r\n      {\r\n       \r\n        if(obj===null)\r\n        {\r\n            console.log(shape)\r\n            obj={ \"zIndex\": \"0\",\r\n            \"objectNumber\": \"0\",\r\n            \"x1\": \"0\",\r\n            \"y1\": \"0\",\r\n            \"x2\": \"0\",\r\n            \"y2\": \"0\",\r\n            \"objectId\": \"\"}\r\n        }\r\n            switch(shape.type)\r\n            {\r\n                case \"Rectangle\":\r\n                   return <Rect\r\n                    key={shape.object.object_id+Math.random()+\"_\"+obj.id}\r\n                    id={shape.object.object_id+Math.random()+\"_\"+obj.id}\r\n                    x={this.getXPoint(shape)+parseFloat(obj.x1)}\r\n                    y={this.getYPoint(shape)+parseFloat(obj.y1)}\r\n                    width={parseFloat(shape.rectangle.x2)}\r\n                    height={parseFloat(shape.rectangle.y2)}\r\n                    fill={shape.fill.fill}\r\n                    strokeWidth={parseFloat(shape.line.line_width)}\r\n                    shadowBlur={10}\r\n                    zIndex={parseFloat(shape.box.z_index)}\r\n                    fillLinearGradientStartPointX={this.getXPoint(shape)+parseFloat(obj.x1)}\r\n                    fillLinearGradientStartPointY={this.getYPoint(shape)+parseFloat(obj.y1)}\r\n                    fillLinearGradientColorStops={1,shape.gradient===undefined?\"nofill\":shape.gradient.gradient_color}\r\n                    cornerRadius= {parseFloat(shape.rectangle.corner_radius)}\r\n                    />\r\n                    \r\n\r\n\r\n                    break;\r\n\r\n                    case \"Ellipse\":\r\n                      return  <Ellipse\r\n                        key={shape.object.object_id+\"_Ellipse_\"+obj.key}\r\n                        id={shape.object.object_id+\"_\"+shape.ellipse.x2+\"c\"+obj.key}\r\n                        x={this.getXPoint(shape)+parseFloat(obj.x1)}\r\n                        y={this.getYPoint(shape)+parseFloat(obj.y1)}\r\n                        width={parseFloat(shape.ellipse.x2)}\r\n                        height={parseFloat(shape.ellipse.y2)}\r\n                        fill={shape.fill.fill}\r\n                        shadowBlur={10}\r\n                        strokeWidth={parseFloat(shape.line.line_width)}\r\n                        zIndex={parseFloat(shape.box.z_index)}\r\n                        //fillLinearGradientStartPointX={this.getXPoint(shape)+parseFloat(obj.x1)}\r\n                        //fillLinearGradientStartPointY={this.getYPoint(shape)+parseFloat(obj.y1)}\r\n                       // fillLinearGradientColorStops={1,shape.gradient===undefined?\"nofill\":shape.gradient.gradient_color}\r\n                        />\r\n                        break;\r\n\r\n                        case \"Polygon\":\r\n                       \r\n                        return    <Line key={\"Polygon_\"+obj.key}\r\n                    points={this.getPloyPoints(shape,obj.x1,obj.y1)} \r\n                    fill={shape.fill==undefined?\"nofill\":shape.fill.fill}\r\n                    stroke={shape.line.color}\r\n                    strokeWidth={shape.line.line_width}\r\n                    closed={parseInt(shape.polyline.closed)}\r\n                    // fillLinearGradientStartPointX={this.getXPoint(shape)+parseFloat(obj.x1)}\r\n                    // fillLinearGradientStartPointY={this.getYPoint(shape)+parseFloat(obj.y1)}\r\n                    // fillLinearGradientColorStops={1,shape.gradient===undefined?\"nofill\":shape.gradient.gradient_color}\r\n                    ></Line>\r\n\r\n\r\n                    case \"Pipe\":\r\n                       \r\n                        return    <Line id={\"Pipe_\"+Math.random()}\r\n                    points={this.getPloyPoints(shape,obj.x1,obj.y1)} \r\n                    fill={shape.fill==undefined?\"nofill\":shape.fill.fill}\r\n                    stroke={shape.line.color}\r\n                    strokeWidth={shape.line.line_width}\r\n                    draggable={true}\r\n                    closed={false}\r\n                    // fillLinearGradientStartPointX={this.getXPoint(shape)+parseFloat(obj.x1)}\r\n                    // fillLinearGradientStartPointY={this.getYPoint(shape)+parseFloat(obj.y1)}\r\n                    fillLinearGradientColorStops={1,shape.gradient===undefined?\"nofill\":shape.gradient.gradient_color}\r\n                    ></Line>\r\n\r\n                    case \"Line\":\r\n                       \r\n                        return    <Line id={\"Line_\"+Math.random()}\r\n                    points={this.getPloyPoints(shape,obj.x1,obj.y1)} \r\n                    fill={shape.fill==undefined?\"nofill\":shape.fill.fill}\r\n                    stroke={shape.line.color}\r\n                    strokeWidth={shape.line.line_width}\r\n                    draggable={true}\r\n                    ></Line>\r\n                    break;\r\n\r\n                    case \"text\":\r\n                        return <Text text=\"hello\" />\r\n                        break;\r\n\r\n            }\r\n      }\r\n\r\n    render() { \r\n\r\n        return(\r\n            <div id=\"stageContainer\">\r\n        <Stage id=\"konvaStage_11\" ref={this.myRef} width={1024} height={800}\r\n            containerId={\"stageContainer\"}>\r\n            <Layer>\r\n               \r\n                {ShapesData.hmipage.shapes.map((obj,i) => ( \r\n                    \r\n                     this.renderShapes(obj,null)   \r\n                  \r\n                ))\r\n                }\r\n                {\r\n                    ShapesData.hmipage.labels.map((obj,i) => ( \r\n                    \r\n                        this.renderLables(obj,null)  \r\n                 \r\n               ))  \r\n                }\r\n\r\n              \r\n            \r\n                {ShapesData.hmipage.component_instances.map((obj,i) => ( \r\n                 <Group\r\n                 id={obj.objectNumber}\r\n                key={obj+\"_Group_\"+i}\r\n                x={0}\r\n                x={0}\r\n                width={parseFloat(obj.x2)}\r\n                height={parseFloat(obj.y2)}\r\n                zIndex={i}\r\n                fill={\"#00D2FF\"} \r\n                draggable={true}\r\n                >\r\n                    {\r\n                        obj.shape.sort((a, b) => parseInt(a.z_index) > parseInt(b.z_index) ? 1 : -1).map((shape)=>(\r\n                                this.renderShapes(shape,obj)\r\n                        ))\r\n                    }\r\n                    </Group>\r\n                ))\r\n                }\r\n            </Layer>\r\n      </Stage>  \r\n      </div>\r\n        )\r\n    }\r\n}\r\n \r\n\r\n\r\n\r\n","F:\\Konvo Model\\src\\components\\ShapsKonva.jsx",["226","227","228","229","230","231","232","233","234","235","236"],"import React, { Component } from 'react'\r\nimport ReactDOM from \"react-dom\";\r\nimport { render } from 'react-dom';\r\nimport { Stage, Shape,Layer, Rect,Ellipse, Text, Circle, Line,Group,Arc } from 'react-konva';\r\nimport ShapesData from \"../data/shapesData\"\r\n\r\nexport default class ShapesKonva extends  Component{\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {};\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    render() { \r\n        let rectOjects = {};\r\n        let eleObjects = {};\r\n        //console.log(ShapesData.hmipage.component_instances.map); \r\n        return ( \r\n\r\n        \r\n            <Stage width={parseFloat(ShapesData.hmipage.width)} height={parseFloat(ShapesData.hmipage.height)}>\r\n            <Layer>\r\n\r\n\r\n \r\n          \r\n              \r\n           \r\n            \r\n                {/* <Line\r\n                stroke=\"red\"\r\n                strokeWidth={10}\r\n                lineJoin= 'round'\r\n                points= {\r\n                    [272,239,362,238,364,302,366,451]\r\n                }\r\n                fill=\"red\"\r\n                >\r\n                </Line> */}\r\n\r\n\r\n            {ShapesData.hmipage.component_instances.map((obj,i) => ( \r\n\r\n                  <Group\r\n                  key={obj+\"_Group_\"+i}\r\n                  x={parseFloat(obj.x1)}\r\n                  x={parseFloat(obj.y1)}\r\n                  width={parseFloat(obj.x2)}\r\n                  height={parseFloat(obj.y2)}\r\n                  z_index={i}\r\n                  draggable={true}\r\n                  >\r\n                {/* {obj.shape.filter(x=>x.type===\"Rectangle\").map((gio)=>(\r\n                <Rect\r\n                id={gio.object.object_id+i}\r\n                x={parseFloat(gio.rectangle.x1)+parseFloat(obj.x1)}\r\n                y={parseFloat(gio.rectangle.y1)+parseFloat(obj.y1)}\r\n                width={parseFloat(gio.rectangle.x2)}\r\n                height={parseFloat(gio.rectangle.y2)}\r\n                fill={gio.fill.fill}\r\n                strokeWidth={parseFloat(gio.line.line_width)}\r\n                stroke={gio.line.color}\r\n                shadowBlur={10}\r\n                draggable={true}\r\n                offset={20,6}\r\n              \r\n          \r\n\r\n          zindex={parseFloat(gio.box.z_index)}\r\n      \r\n              />\r\n\r\n\r\n              \r\n                ))} */}\r\n                  {obj.shape.filter(x=>x.type===\"Ellipse\").map((gio,j)=>(\r\n                <Ellipse\r\n                key={gio.object.object_id+\"_Ellipse_\"+j}\r\n                id={gio.object.object_id+\"_\"+gio.ellipse.x2+\"c\"+j}\r\n                x={parseFloat(gio.ellipse.x1)+parseFloat(obj.x1)}\r\n                y={parseFloat(gio.ellipse.y1)+parseFloat(obj.y1)}\r\n                width={parseFloat(gio.ellipse.x2)}\r\n                height={parseFloat(gio.ellipse.y2)}\r\n                fill={gio.fill.fill}\r\n                shadowBlur={10}\r\n                strokeWidth={parseFloat(gio.line.line_width)}\r\n                zindex={parseFloat(gio.box.z_index)}\r\n                offsetX={parseFloat(gio.box.axis_offset_left)}  //*-1-parseFloat(gio.box.left)+parseFloat(gio.box.right)-parseFloat(gio.box.axis_offset_right)}\r\n                offsety={parseFloat(gio.box.axis_offset_top)}\r\n              />\r\n                )\r\n                )\r\n                }\r\n\r\n{obj.shape.filter(x=>x.type===\"Polygon\").map((gio,p)=>(\r\n                  <Shape\r\n                  key={gio.object.object_id+\"_Shape\"+p}\r\n                  stroke=\"red\"\r\n                  strokeWidth={10}\r\n                  lineJoin= 'round'\r\n                  points={\r\n                    gio.polyline.points.map((pt)=> ((parseFloat(pt.x)+parseFloat(obj.x1)),(parseFloat(pt.y)+parseFloat(obj.y1))))\r\n                  } \r\n                                   \r\n                  fill=\"red\"\r\n                  >\r\n                  </Shape>\r\n                ))}\r\n                </Group>\r\n            ))}\r\n\r\n            </Layer>\r\n          </Stage>\r\n         );\r\n    }\r\n}\r\n \r\n\r\n\r\n\r\n","F:\\Konvo Model\\src\\components\\FileUpload.jsx",["237","238","239","240","241"],"import React, { Component } from \"react\";\r\nimport ShapesData from \"../data/shapesData\";\r\nimport { ShapeComponets, LableComponets } from \"./APIUtil\";\r\n\r\nclass FileUpload extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n    this.App = React.createRef();\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    console.log(event);\r\n    const file = this.App.files[0];\r\n    const reader = new FileReader();\r\n    reader.readAsText(file);\r\n    reader.onloadend = (evt) => {\r\n      const readerData = evt.target.result;\r\n      const parser = new DOMParser();\r\n      const xml = parser.parseFromString(readerData, \"text/xml\");\r\n      this.ShapesData = this.xmlToJson(xml.documentElement);\r\n      console.log(this.ShapesData);\r\n    };\r\n  }\r\n\r\n  xmlToJson(xml) {\r\n    // Create the return object\r\n    var obj = {};\r\n\r\n    if (xml.nodeType == 1) {\r\n      // element\r\n      // do attributes\r\n      if (xml.attributes.length > 0) {\r\n        obj[\"\"] = {};\r\n        for (var j = 0; j < xml.attributes.length; j++) {\r\n          var attribute = xml.attributes.item(j);\r\n          obj[attribute.nodeName] = attribute.nodeValue;\r\n        }\r\n      }\r\n    } else if (xml.nodeType == 3) {\r\n      // text\r\n      obj = xml.nodeValue;\r\n    }\r\n\r\n    // do children\r\n    if (xml.hasChildNodes()) {\r\n      for (var i = 0; i < xml.childNodes.length; i++) {\r\n        var item = xml.childNodes.item(i);\r\n        var nodeName = item.nodeName;\r\n        if (typeof obj[nodeName] == \"undefined\") {\r\n          obj[nodeName] = this.xmlToJson(item);\r\n        } else {\r\n          if (typeof obj[nodeName].push == \"undefined\") {\r\n            var old = obj[nodeName];\r\n            obj[nodeName] = [];\r\n            obj[nodeName].push(old);\r\n          }\r\n          obj[nodeName].push(this.xmlToJson(item));\r\n        }\r\n      }\r\n    }\r\n    return obj;\r\n  }\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"App\"\r\n        width={200}\r\n        height={300}\r\n        style={{ width: \"800px\", margin: \"auto\" }}\r\n      >\r\n        <p className=\"App-intro\">\r\n          Please Upload your XML file at the button below\r\n        </p>\r\n        <form onSubmit={(e) => this.handleSubmit(e)}>\r\n          <label>\r\n            Upload file:\r\n            <input\r\n              type=\"file\"\r\n              ref={(input) => {\r\n                this.App = input;\r\n              }}\r\n            />\r\n          </label>\r\n          <br />\r\n          <button type=\"submit\">Submit</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FileUpload;\r\n","F:\\Konvo Model\\src\\components\\UNCDynamicText.jsx",["242","243","244","245","246","247","248","249","250","251","252","253","254"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n    Stage,\r\n    Polyline,\r\n    Shape,\r\n    Layer,\r\n    Rect,\r\n    Ellipse,\r\n    Text,\r\n    Circle,\r\n    Line,\r\n    Group,\r\n    Arc,\r\n    Image\r\n  } from \"react-konva\";\r\n\r\n  const UNCDynamicText = (shapeElement) => {\r\n    const { shape, parentX, parentY } = shapeElement;\r\n  \r\n    console.log(shapeElement)\r\n//   const [hasError, setErrors] = useState(false); \r\n//   const [tagValues, setTagValues] = useState({});\r\n\r\n//   useEffect(() => {\r\n//     async function fetchData() {\r\n//       const res = await fetch(\"http://worldclockapi.com/api/json/est/now\");\r\n//       res\r\n//         .json()\r\n//         .then(res => setTagValues(res))\r\n//         .catch(err => setErrors(err));\r\n//     }\r\n\r\n//     fetchData();\r\n//   });\r\n\r\n\r\n//   if(obj===null)\r\n//   {\r\n//       console.log(text)\r\n//       obj={ \"zIndex\": \"0\",\r\n//       \"objectNumber\": \"0\",\r\n//       \"x1\": \"0\",\r\n//       \"y1\": \"0\",\r\n//       \"x2\": \"0\",\r\n//       \"y2\": \"0\",\r\n//       \"objectId\": \"\"}\r\n//   }\r\n//   else  {\r\n//     // console.log(\"obj is not null\")\r\n//   }\r\n\r\nconsole.log(shape.static_text)\r\n\r\n  return (\r\n    <Text \r\n  fontFamily={shape.font_family} \r\n    \r\n    fontSize={shape.font_size}\r\n\r\n        fill={\"black\"}\r\n      // text={JSON.stringify(tagValues['currentFileTime'])}\r\n\r\n       text= {shape.static_text}\r\n      \r\n  \r\n       x={ parseFloat(parentX)+ parseFloat(shape.box.axis_anchor)+parseFloat(shape.box.axis_offset_left)+((parseFloat(shape.box.left))/2)}\r\n       y={ parseFloat(parentY)+parseFloat(shape.box.axis_anchor)+parseFloat(shape.box.axis_offset_top)+((parseFloat(shape.box.top))/2)}\r\n    />\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default UNCDynamicText\r\n\r\n","F:\\Konvo Model\\src\\components\\UNCText.jsx",["255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277"],"import { Text } from \"react-konva\";\r\nimport { getPloyPoints } from \"./JSONUtil.js\";\r\nimport { useState ,useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction UNCText(shapeProps){\r\n  \r\n  const [hide, setHidden] = useState(true);\r\n  const [display_on_off_text, setOnOffText] = useState('');\r\n  const [display_numeric, setDisplayNumericValue] = useState(0);\r\n  const [display_array, setDisplayArray] = useState();\r\n\r\n  const { text,parentX,parentY} = shapeProps; \r\n  \r\n  var value = \" \";\r\n  \r\n  value = text.static_text.toString()\r\n  value =  value.replace(/&amp;/g,'')\r\n  value =  value.replace(/#xa;/g,'')    \r\n  value =  value.replace(/&/g,'')   \r\n  value =  value.replace(/#x9;/g,'') \r\n  value =  value.replace(/  /g,'') \r\n\r\n  useEffect(() => {\r\n    console.log(\"VAlue Cahanging\")\r\n  }, [display_on_off_text]);\r\n\r\n\r\n  \r\n  function androidToRgba(color){\r\n    const colorArray = []\r\n    for(let i=0; i<4; i++){\r\n      colorArray.push(color % 256)\r\n      color>>>=8\r\n    }\r\n    const alpha = colorArray.pop() / 255\r\n    return `rgba(${colorArray.reverse()},${alpha})`\r\n  }\r\n\r\n\r\n  //Display Numeric-----------------------------------------------------------------------------------------------------------\r\n  if(text.display_numeric != undefined)\r\n  {\r\n    value = text.display_numeric.expression.__cdata ;\r\n\r\n    if(value){\r\n\r\n    //Removing DataTypes ---Float,\r\n    value = value.replace(\"static\",\"\");\r\n     value = value.replace(\"int\",\"\");\r\n     value = value.replace(\"float\",\"\");\r\n     value = value.replace(\"double\",\"\");\r\n     value = value.replace(\"bool\",\"\");\r\n     value = value.replace(\"boolean\",\"\");\r\n  \r\n  \r\n     value = value.replace(/\\r\\n|\\n|\\r/gm ,\"$\");\r\n     var staticExpression = \"val=6.5;$if(_HTR_1A == 1)${$val = val + 1;$if(val >= 100)$val = 0;$return val;$}$else${$val = _DTms_0003+val;$return val;$}$;\";\r\n     \r\n  \r\n     axios({\r\n      method: 'post',\r\n      url: \"https://demo3412.herokuapp.com/tag\",\r\n      headers: {}, \r\n      data: {\r\n        tagname:value, // This is the body part\r\n      }\r\n    }).then((res)=>{\r\n      //console.log(display_numeric)  \r\n\r\n      var names = {};\r\n    \r\n      //    names = display_numeric;\r\n      //    console.log(names);\r\n      //    console.log(res.data.tagValue);\r\n      //  names[value] =res.data.tagValue;\r\n       setDisplayNumericValue(res.data.tagValue);\r\n  \r\n    });\r\n\r\n  }else\r\n  {\r\n    value = text.static_text.toString()\r\n    value =  value.replace(/&amp;/g,'')\r\n    value =  value.replace(/#xa;/g,'')    \r\n    value =  value.replace(/&/g,'')   \r\n    value =  value.replace(/#x9;/g,'') \r\n    value =  value.replace(/  /g,'') \r\n\r\n  }\r\n}\r\n\r\n\r\n  //Display_on_off-------------------------------------------------------------------------------------------------------\r\n   if(text.display_on_off != undefined)\r\n  {\r\n    value = text.display_on_off.__cdata;\r\n    if(value)\r\n    {\r\n      axios({\r\n        method: 'post',\r\n        url: \"https://demo3412.herokuapp.com/tag\",\r\n        headers: {}, \r\n        data: {\r\n          tagname:value, // This is the body part\r\n        }\r\n      }).then((res)=>{\r\n       \r\n     if(res.data.tagValue > 50)\r\n     {\r\n    \r\n     setOnOffText(previousState => text.display_on_off.text_on);\r\n     \r\n     }else{\r\n   \r\n  setOnOffText(previousState => text.display_on_off.text_off);\r\n     }\r\n      });\r\n\r\n    }else\r\n    {\r\n      value = text.static_text.toString()\r\n      value =  value.replace(/&amp;/g,'')\r\n      value =  value.replace(/#xa;/g,'')    \r\n      value =  value.replace(/&/g,'')   \r\n      value =  value.replace(/#x9;/g,'') \r\n      value =  value.replace(/  /g,'') \r\n    \r\n    }\r\n   \r\n  }\r\n\r\n\r\n  \r\n  //Hiddden_When-------------------------------------------------------------------------------------------------------------\r\n   if(text.security != undefined)\r\n  {\r\n    var value = text.object.security?.hidden_when?.__cdata ;\r\n    if(value)\r\n    {\r\n    axios({\r\n      method: 'post',\r\n      url: \"https://demo3412.herokuapp.com/tag\",\r\n      headers: {}, \r\n      data: {\r\n        tagname:value, // This is the body part\r\n      }\r\n    }).then((res)=>{\r\n  \r\n      //console.log(res.data.tagValue)\r\n   if(res.data.tagValue > 50)\r\n   {\r\n    setHidden(true)\r\n   }else{\r\n    setHidden(false)\r\n   }\r\n  })\r\n}else{\r\n  value = text.static_text.toString()\r\n  value =  value.replace(/&amp;/g,'')\r\n  value =  value.replace(/#xa;/g,'')    \r\n  value =  value.replace(/&/g,'')   \r\n  value =  value.replace(/#x9;/g,'') \r\n  value =  value.replace(/  /g,'')  \r\n}\r\n}  \r\n\r\n\r\n\r\n  //Display_array-----------------------------------------------------------------------------------------------------------\r\n   if(text.display_array != undefined)\r\n  {\r\n   \r\n     \r\n      // value = text.static_text.toString()\r\n      // value =  value.replace(/&amp;/g,'')\r\n      // value =  value.replace(/#xa;/g,'')    \r\n      // value =  value.replace(/&/g,'')   \r\n      // value =  value.replace(/#x9;/g,'') \r\n      // value =  value.replace(/  /g,'') \r\n      // console.log(value)\r\n     // setDisplayArray(val)\r\n    // // console.log(\"---------------------------------DirectText.display_array.index_expression.__cdata--------------------------------------\")\r\n    // // console.log(val)\r\n    // var first = 10;\r\n  \r\n    // if(val.includes(\"+\"))\r\n    // {\r\n    //     val = val.split(\"+\");\r\n  \r\n    //     if(val[0].includes(\"(\"))\r\n    //     {\r\n    //     first = preFunctions.mainFunction(val[0],this.state.ProjectId,text.object.object_id)\r\n    //     }else{\r\n    //       first = parseInt(val[0],10)\r\n  \r\n    //     }\r\n    // val = first  + parseInt(val[1],10)\r\n    // }\r\n  }\r\n  \r\n  if(text.display_numeric == undefined && \r\n    text.display_on_off == undefined &&\r\n     text.display_array == undefined)\r\n  {\r\n\r\n    value = text.static_text.toString()\r\n    value =  value.replace(/&amp;/g,'')\r\n    value =  value.replace(/#xa;/g,'')    \r\n    value =  value.replace(/&/g,'')   \r\n    value =  value.replace(/#x9;/g,'') \r\n    value =  value.replace(/  /g,'') \r\n  \r\n  }\r\n  \r\n  \r\n          return  <Text fontFamily={text.font_family}  \r\n         fontSize={text.font_size }\r\n              fill={androidToRgba(text.color)}\r\n              visible={ text.object.security != undefined ? hide :  true }\r\n              text={text.display_numeric != undefined ? text.display_numeric.expression.__cdata ?  display_numeric : value :\r\n                text.display_on_off != undefined ?  text.display_on_off?.__cdata ? display_on_off_text : value : text.display_array != undefined ? value:\r\n                value}\r\n                x={ parseFloat(parentX)+ parseFloat(text.box.axis_anchor)+parseFloat(text.box.axis_offset_left)+((parseFloat(text.box.left))/2)}\r\n                y={ parseFloat(parentY)+parseFloat(text.box.axis_anchor)+parseFloat(text.box.axis_offset_top)+((parseFloat(text.box.top))/2)}\r\n          />\r\n        }\r\n       \r\n\r\n\r\nexport default UNCText;\r\n","F:\\Konvo Model\\src\\components\\CanvasUtils.js",["278","279","280"],"export const getRectPointX = (shape, parentX) => {\r\n  parentX = parentX === undefined ? 0 : parentX;\r\n  switch (shape.type) {\r\n    case \"Rectangle\":\r\n      // console.log(parentX);\r\n      return (\r\n        parseFloat(shape.rectangle.x1) +\r\n        parseFloat(shape.box.axis_offset_left) +\r\n        parseFloat(parentX)\r\n      );\r\n    case \"Ellipse\":\r\n      return (\r\n        parseFloat(parentX) +parseFloat(shape.ellipse.x1) + parseFloat(shape.box.axis_offset_left) + (parseFloat(shape.box.left) + parseFloat(shape.box.right)) / 2\r\n      );\r\n    \r\n  }\r\n};\r\n\r\nexport const getRectPointY = (shape, parentY) => {\r\n  parentY = parentY === undefined ? 0 : parentY;\r\n  //console.log(shape.type);\r\n  switch (shape.type) {\r\n    case \"Rectangle\":\r\n      return (\r\n        parseFloat(parentY) +\r\n        parseFloat(shape.rectangle.y1) +\r\n        parseFloat(shape.box.axis_offset_top)\r\n      );\r\n    case \"Ellipse\":\r\n      return (\r\n        parseFloat(parentY) +\r\n        parseFloat(shape.ellipse.y1) +\r\n        parseFloat(shape.box.axis_offset_top) +\r\n        (parseFloat(shape.box.top) + parseFloat(shape.box.bottom)) / 2\r\n      );\r\n  }\r\n};\r\n\r\nexport const getPloyPoints = (shape, parentX, parentY) => {\r\n  // console.log(\"getPloyPoints\");\r\n  parentY = parentY === undefined ? 0 : parentY;\r\n  parentX = parentX === undefined ? 0 : parentX;\r\n  var ptx = [];\r\n  // console.log(shape.type);\r\n  switch (shape.type) {\r\n    case \"Pipe\":\r\n      if (Array.isArray(shape.pipe.points)) {\r\n        ptx = shape.pipe.points.map((o) => ({\r\n          x: parseFloat(o.x),\r\n          y: parseFloat(o.y),\r\n        }));\r\n      } else {\r\n        ptx = shape.pipe.points.point.map((g) => ({\r\n          x: parseFloat(g.x),\r\n          y: parseFloat(g.y),\r\n        }));\r\n      }\r\n      break;\r\n    case \"Polygon\":\r\n      if (Array.isArray(shape.polyline.points)) {\r\n        ptx = shape.polyline.points.map((o) => ({\r\n          x: parseFloat(o.x),\r\n          y: parseFloat(o.y),\r\n        }));\r\n      } else {\r\n        ptx = shape.polyline.points.point.map((g) => ({\r\n          x: parseFloat(g.x),\r\n          y: parseFloat(g.y),\r\n        }));\r\n      }\r\n      break;\r\n      case \"Line\":\r\n        ptx.push({ x: shape.box.left, y: shape.box.top });\r\n        ptx.push({ x: shape.box.right, y: shape.box.bottom });\r\n        break;\r\n  }\r\n\r\n  let ptArray = [];\r\n  ptx.forEach((element) => {\r\n    ptArray.push(\r\n      parseFloat(element.x) +\r\n        parseFloat(parentX) +\r\n        parseFloat(shape.box.axis_offset_left) +\r\n        parseFloat(shape.box.left) / 2\r\n    );\r\n    ptArray.push(\r\n      parseFloat(element.y) +\r\n        parseFloat(parentY) +\r\n        parseFloat(shape.box.axis_offset_top) +\r\n        parseFloat(shape.box.top) / 2\r\n    );\r\n  });\r\n  // console.log(ptArray);\r\n  return ptArray;\r\n};\r\n","F:\\Konvo Model\\src\\components\\JSONUtil.js",["281","282","283","284","285","286","287","288","289"],"import { image } from \"d3-fetch\";\r\n\r\nexport function ShapeObjects(shapesData) {\r\n\r\n  const { project } = shapesData;\r\n  if (project !== undefined) {\r\n    shapesData = project;\r\n  }\r\n  // const hmipage =\r\n  //   shapesData.hmipage === undefined ? shapesData : shapesData.hmipage;\r\n\r\n    var hmipage = [] ;\r\n  \r\n    if(shapesData.hmipage != undefined)\r\n    {\r\n      hmipage = shapesData.hmipage\r\n    }\r\n    else if(shapesData.hmipagetemplate != undefined)\r\n    {\r\n      hmipage = shapesData.hmipagetemplate\r\n    }else if(shapesData.component != undefined)\r\n    {\r\n      hmipage = shapesData.hmipagetemplate\r\n    }\r\n    else{\r\n      hmipage = shapesData;\r\n    }\r\n\r\n\r\n  const { shapes, component_instances, labels ,images ,groups} = hmipage; // Destructuring\r\n  // console.log(component_instances);\r\n\r\n  let emptyCompObj = {\r\n    uuid: \"{4c64b6e1-bb25-442a-abf7-6fa6c5694ff5}\",\r\n    zIndex: \"0\",\r\n    objectNumber: \"0\",\r\n    x1: \"0\",\r\n    y1: \"0\",\r\n    x2: \"0\",\r\n    y2: \"0\",\r\n    objectId: \"\",\r\n    shape: [],\r\n    description: [],\r\n  };\r\n\r\n  let shapeComponetsList = [];\r\n\r\n\r\n\r\n  //------ Shapes--------------------------------------------------------------------------------------------\r\n  if (shapes !== undefined) {\r\n    if (Array.isArray(shapes)) {\r\n      shapes.map((obj, i) => emptyCompObj.shape.push(obj));\r\n      emptyCompObj.shape.sort((a, b) =>\r\n        parseInt(a.box.z_index) > parseInt(b.box.z_index) ? 1 : -1\r\n      );\r\n      shapeComponetsList.push(emptyCompObj);\r\n    } else if (shapes.shape !== undefined) {\r\n      if(Array.isArray(shapes.shape)){\r\n        shapes.shape.map((obj, i) => emptyCompObj.shape.push(obj));\r\n        emptyCompObj.shape.sort((a, b) =>\r\n          parseInt(a.box.z_index) > parseInt(b.box.z_index) ? 1 : -1\r\n        );\r\n        shapeComponetsList.push(emptyCompObj);\r\n      }\r\n      else{\r\n        emptyCompObj.shape.push(shapes.shape);\r\n        shapeComponetsList.push(emptyCompObj);\r\n      }\r\n      // console.log(\"empty obj \");\r\n    }    \r\n    // console.log(\"After Adding Shapes--???????????????????????????\")\r\n    // console.log(shapeComponetsList)\r\n  }\r\n\r\n\r\n\r\n\r\n  //    //groups------------------------------------------------------------------------------------------------------------\r\n  //    if (groups !== undefined) {\r\n\r\n  //     // console.log(\"Images Dtaa---????????????????????????????\")\r\n  //     // console.log(groups);\r\n  //     // shapeComponetsList.push(groups);\r\n  \r\n  //    // if we have only groups\r\n  //   if (Array.isArray(groups)) {\r\n  //     groups.map((obj, i) => emptyCompObj.shape.push(obj)\r\n  //     );\r\n  //     // emptyCompObj.shape.sort((a, b) =>\r\n  //     //   parseInt(a.box.z_index) > parseInt(b.box.z_index) ? 1 : -1\r\n  //     // );\r\n  //     shapeComponetsList.push(emptyCompObj);\r\n  \r\n  //   } else if (groups.group !== undefined) {\r\n  //     if(Array.isArray(groups.group)){\r\n  //       groups.group.map((obj, i) => emptyCompObj.shape.push(obj));\r\n  //       // emptyCompObj.shape.sort((a, b) =>\r\n  //       //   parseInt(a.box.z_index) > parseInt(b.box.z_index) ? 1 : -1\r\n  //       // );\r\n  //       shapeComponetsList.push(emptyCompObj);\r\n  //     }\r\n  //     else{\r\n  //       emptyCompObj.shape.push(groups.group);\r\n  //       shapeComponetsList.push(emptyCompObj);\r\n  //     }\r\n  //     console.log(\"empty obj \");\r\n  //   }else if (groups.group.grup !== undefined) {\r\n  //     if(Array.isArray(groups.group.group)){\r\n  //       groups.group.group.map((obj, i) => emptyCompObj.shape.push(obj));\r\n  //       // emptyCompObj.shape.sort((a, b) =>\r\n  //       //   parseInt(a.box.z_index) > parseInt(b.box.z_index) ? 1 : -1\r\n  //       // );\r\n  //       shapeComponetsList.push(emptyCompObj);\r\n  //     }\r\n  //     else{\r\n  //       emptyCompObj.shape.push(groups.group.group);\r\n  //       shapeComponetsList.push(emptyCompObj);\r\n  //     }\r\n  //     console.log(\"empty obj \");\r\n  //   }\r\n  //   console.log(\"After Groups Dtaa---????????????????????????????\")\r\n  //   console.log(shapeComponetsList);\r\n  // }\r\n  \r\n  \r\n\r\n  //--------component instances-----------------------------------------------------------------------------------------------------\r\n  if (component_instances !== undefined) {\r\n    if (Array.isArray(component_instances))\r\n     {\r\n     \r\n      component_instances.map((obj, i) => {\r\n        if (obj.group === undefined) {\r\n          obj.shape.sort((a, b) =>\r\n            parseInt(a.box.z_index) > parseInt(b.box.z_index) ? 1 : -1\r\n          );\r\n          shapeComponetsList.push(obj);\r\n        } else {\r\n          obj.group.map((x) => {\r\n            x.shape.sort((a, b) =>\r\n              parseInt(a.box.z_index) > parseInt(b.box.z_index) ? 1 : -1\r\n            );\r\n            shapeComponetsList.push(x);\r\n          });\r\n        }\r\n      });\r\n    } \r\n    else if(Array.isArray(component_instances.componentInstance)){\r\n      let tempAry = component_instances.componentInstance.map(obj => obj)\r\n      tempAry.map((x) => {\r\n   if(Array.isArray(x)){\r\n    console.log(\"xxxxxxxxxxxxx\")\r\n    // console.log(x)\r\n       x.shape.sort((a, b) =>\r\n         parseInt(a.box.z_index) > parseInt(b.box.z_index) ? 1 : -1\r\n       );\r\n   }\r\n      shapeComponetsList.push(x);\r\n      }      \r\n    );\r\n     \r\n    }\r\n    else if (component_instances.componentInstance !== undefined) {\r\n      //declaring group variable if we get composite instances have <Group> node under compositeInstance\r\n      const { group } = component_instances.componentInstance;\r\n      console.log(\"group\")\r\n      console.log(\"labels-text\")\r\n      if (group !== undefined) {\r\n        group.shape.sort((a, b) =>\r\n          parseInt(a.box.z_index) > parseInt(b.box.z_index) ? 1 : -1\r\n        );\r\n        console.log(\"labels-text\")\r\n\r\n        shapeComponetsList.push(component_instances.componentInstance);\r\n      } else  {         \r\n       let singleshapearray = []; \r\n       if(Array.isArray(component_instances.componentInstance.shape))   //if composite instance contains mul \r\n       {\r\n        component_instances.componentInstance.shape.map((obj, i) => singleshapearray.push(obj));\r\n        //sorting values based on z_index\r\n        singleshapearray.sort((a, b) =>\r\n          parseInt(a.z_index) > parseInt(b.z_index) ? 1 : -1\r\n        );\r\n\r\n       }else{  //if composite instance contains only one object \r\n        singleshapearray.push(component_instances.componentInstance.shape)\r\n       }\r\n       //assigning singleshapearray to shape of composite instance\r\n       component_instances.componentInstance.shape=singleshapearray\r\n       //pushing the shape object values to shapeComponentsList array\r\n       shapeComponetsList.push(component_instances.componentInstance);\r\n      }\r\n      //\r\n    } else {\r\n      console.log(\"else\");\r\n    }\r\n    // console.log(\"After Adding Component_Instances--???????????????????????????\")\r\n    // console.log(shapeComponetsList)\r\n  }\r\n \r\n\r\n    \r\nif(groups != undefined)\r\n{\r\n  // console.log(\"Images Dtaa---????????????????????????????\")\r\n  // console.log(groups);\r\n\r\n  shapeComponetsList.push(groups);\r\n}\r\n\r\n\r\n  //------Labels----------------------------------------------------------------------------------------------------------------\r\n  if (labels !== undefined) {\r\n    let singleshapearray = []; \r\n    // if(Array.isArray(labels))   //labelcontains mul \r\n    // {\r\n    //   console.log(\"???????????????????????????????????????????????\")\r\n    //   console.log(\"Entering into if Statement \")\r\n    //   console.log(labels)\r\n    //  labels.text.map((obj, i) => singleshapearray.push(obj));\r\n    //  console.log(singleshapearray)\r\n\r\n    // //  singleshapearray.sort((a, b) =>\r\n    // //    parseInt(a.box.z_index) > parseInt(b.box.z_index) ? 1 : -1\r\n    // //  );\r\n\r\n    // }else{  //if label contains only one object \r\n    //  // console.log(labels)\r\n    //  console.log(\"???????????????????????????????????????????????\")\r\n    //  console.log(\"Entering into else Statement \")\r\n    //  console.log(labels)\r\n    //  console.log(singleshapearray)\r\n    //   // singleshapearray.push(labels.text)\r\n    //   labels.text.map((obj, i) => singleshapearray.push(obj));\r\n    //   console.log(singleshapearray)\r\n    // }\r\n\r\n\r\n    // if(labels.length  ==  undefined)\r\n    // {\r\n    //   console.log(\"Entered If --labels Length is Zero\")\r\n\r\n    // }else{\r\n    //   console.log(\"Entered else - labels length is \" +labels.length)\r\n\r\n    // }\r\n\r\n    // console.log(\"Label Dtaa---????????????????????????????\")\r\n    // console.log(labels);\r\n    \r\n    shapeComponetsList.push({\"labels\":labels});\r\n  \r\n}\r\n  else {         \r\n    let singleshapearray = []; \r\n    if(Array.isArray(labels))   //labelcontains mul \r\n    {\r\n      // console.log(labels)\r\n     labels.text.map((obj, i) => singleshapearray.push(obj));\r\n     singleshapearray.sort((a, b) =>\r\n       parseInt(a.box.z_index) > parseInt(b.box.z_index) ? 1 : -1\r\n     );\r\n\r\n    }else{  //if label contains only one object \r\n      // console.log(labels)\r\n      singleshapearray.push(labels) \r\n    }\r\n    \r\n    // labels.text=singleshapearray\r\n    shapeComponetsList.push(labels);\r\n  \r\n   }\r\n\r\n\r\n\r\n\r\n\r\n   \r\n  //Images------------------------------------------------------------------------------------------------------\r\n  if(images !==undefined){\r\n\r\n    // console.log(\"Images Dtaa---????????????????????????????\")\r\n    // console.log(images);\r\n\r\n    shapeComponetsList.push(images);\r\n  }\r\n  return shapeComponetsList;\r\n\r\n}\r\n\r\n\r\nexport function parseShapeObject(shapeObj) {\r\n  for (var i in shapeObj) {\r\n    if (!shapeObj[i] && typeof shapeObj[i] == \"object\") {\r\n      var temp = parseShapeAttributes(shapeObj[i]);\r\n      shapeObj[i] = { ...temp };\r\n      parseShapeObject(shapeObj[i]);\r\n    } else {\r\n    }\r\n  }\r\n  return shapeObj;\r\n}\r\n\r\nexport function parseShapeAttributes(shapeObj) {\r\n  const { _attributes } = shapeObj;\r\n  return _attributes;\r\n}\r\n\r\n\r\n\r\nexport function LableComponets(labels) {\r\n  let lableComponetsList = [];\r\n\r\n  if (labels !== undefined) {\r\n    if (Array.isArray(labels)) {\r\n      labels.map((obj, i) => lableComponetsList.push(obj));\r\n     \r\n      //positioning \r\n      labels.sort((a, b) =>\r\n      parseInt(a.box.z_index) > parseInt(b.box.z_index) ? 1 : -1\r\n    );\r\n    } else if (labels.text !== undefined) {\r\n      console.log(\"labels-text\")\r\n      lableComponetsList.push(labels.text);      \r\n    }\r\n\r\n    console.log(labels.text)\r\n    console.log(\"obj:\")\r\n    console.log(labels.text.box.z_index)\r\n  }\r\n  return lableComponetsList;\r\n}\r\n\r\nexport function getStateObject(shapeObj) {\r\n  const shapes = ShapeObjects(shapeObj)\r\n  const { project } = shapeObj;\r\n  if (project !== undefined) {\r\n    shapeObj = project;\r\n  }\r\n  const hmipage =\r\n  shapeObj.hmipage === undefined ? shapeObj : shapeObj.hmipage;\r\n\r\n  const { labels } = hmipage; // Destructuring\r\n  \r\n  let shapeObjects = {\r\n    shapes: shapes,\r\n   lables: LableComponets(labels),\r\n\r\n  };\r\n  return shapeObjects;\r\n}","F:\\Konvo Model\\src\\components\\XmlToJson.es6.js",["290","291","292","293","294","295"],"/**\n * Object to convert XML into a structured JSON object\n *\n * @class XmlToJson\n */\nexport class XmlToJson {\n\n\tconstructor(xml) {\n\t\tif (xml) {\n\t\t\treturn this.parse(xml);\n\t\t}\n\t}\n\n\t/**\n     * Adds an object value to a parent object\n     *\n     * @method addToParent\n     * @param {Object} parent\n     * @param {String} nodeName\n     * @param {Mixed} obj\n     * @return none\n     */\n\taddToParent(parent, nodeName, obj) {\n\t\t// If this is the first or only instance of the node name, assign it as\n\t\t// an object on the parent.\n\t\tif (!parent[nodeName]) {\n\t\t\tparent[nodeName] = obj;\n\t\t}\n\t\t// Else the parent knows about other nodes of the same name\n\t\telse {\n\t\t\t// If the parent has a property with the node name, but it is not an array,\n\t\t\t// store the contents of that property, convert the property to an array, and\n\t\t\t// assign what was formerly an object on the parent to the first member of the\n\t\t\t// array\n\t\t\tif (!Array.isArray(parent[nodeName])) {\n\t\t\t\tlet tmp = parent[nodeName];\n\t\t\t\tparent[nodeName] = [];\n\t\t\t\tparent[nodeName].push(tmp);\n\t\t\t}\n\n\t\t\t// Push the current object to the collection\n\t\t\tparent[nodeName].push(obj);\n\t\t}\n\t}\n\n\n\tconvertXMLStringToDoc(str) {\n\t\tlet xmlDoc = null;\n\n\t\tif (str && typeof str === 'string') {\n\t\t\t// Create a DOMParser\n\t\t\tlet parser = new DOMParser();\n\n\t\t\t// Use it to turn your xmlString into an XMLDocument\n\t\t\txmlDoc = parser.parseFromString(str, 'application/xml');\n\t\t}\n\n\t\treturn xmlDoc;\n\t}\n\n\n\t/**\n\t * Validates if an data is an XMLDocument\n\t *\n\t * @method isXML\n\t * @param {Mixed} data\n\t * @return {Boolean}\n\t */\n\tisXML(data) {\n\t\tlet documentElement = (data ? data.ownerDocument || data : 0).documentElement;\n\t\treturn documentElement ? documentElement.nodeName.toLowerCase() !== 'html' : false;\n\t}\n\n\n\t/**\n\t * Sends a chunk of XML to be parsed\n\t *\n\t * @method parse\n\t * @param {XMLXtring} xml\n\t * @return {JSON | Null}\n\t */\n\tparse(xml) {\n\t\tif (xml && typeof xml === 'string') {\n\t\t\txml = this.convertXMLStringToDoc(xml);\n\t\t}\n\n\t\treturn (xml && this.isXML(xml)) ? this.parseNode({}, xml.firstChild) : null;\n\t}\n\n\n\t/**\n\t * Reads through a node's attributes and assigns the values to a new object\n\t *\n\t * @method parseAttributes\n\t * @param {XMLNode} node\n\t * @return {Object}\n\t */\n\tparseAttributes(node) {\n\t\tlet attributes = node.attributes,\n\t\t\tobj = {};\n\n\t\t// If the node has attributes, assign the new object properties\n\t\t// corresponding to each attribute\n\t\tif (node.hasAttributes()) {\n\t\t\tfor (let i = 0; i < attributes.length; i++) {\n\t\t\t\tobj[attributes[i].name] = this.parseValue(attributes[i].value);\n\t\t\t}\n\t\t}\n\n\t\t// return the new object\n\t\treturn obj;\n\t}\n\n\n\t/**\n\t * Rips through child nodes and parses them\n\t *\n\t * @method parseChildren\n\t * @param {Object} parent\n\t * @param {XMLNodeMap} childNodes\n\t * @return none\n\t */\n\tparseChildren(parent, childNodes) {\n\t\t// If there are child nodes...\n\t\tif (childNodes.length > 0) {\n\t\t\t// Loop over all the child nodes\n\t\t\tfor (let i = 0; i < childNodes.length; i++) {\n\t\t\t\t// If the child node is a XMLNode, parse the node\n\t\t\t\tif (childNodes[i].nodeType == 1) {\n\t\t\t\t\tthis.parseNode(parent, childNodes[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\t/**\n\t * Converts a node into an object with properties\n\t *\n\t * @method parseNode\n\t * @param {Object} parent\n\t * @param {XMLNode} node\n\t * @return {Object}\n\t */\n\tparseNode(parent, node) {\n\t\tlet nodeName = node.nodeName,\n\t\t\tobj = Object.assign({}, this.parseAttributes(node)),\n\t\t\ttmp = null;\n\n\t\t// If there is only one text child node, there is no need to process the children\n\t\tif (node.childNodes.length == 1 && node.childNodes[0].nodeType == 3) {\n\t\t\t// If the node has attributes, then the object will already have properties.\n\t\t\t// Add a new property 'text' with the value of the text content\n\t\t\tif (node.hasAttributes()) {\n\t\t\t\tobj['text'] = this.parseValue(node.childNodes[0].nodeValue);\n\t\t\t}\n\t\t\t// If there are no attributes, then the parent[nodeName] property value is\n\t\t\t// simply the interpreted textual content\n\t\t\telse {\n\t\t\t\tobj = this.parseValue(node.childNodes[0].nodeValue);\n\t\t\t}\n\t\t}\n\t\t// Otherwise, there are child XMLNode elements, so process them\n\t\telse {\n\t\t\tthis.parseChildren(obj, node.childNodes);\n\t\t}\n\n\t\t// Once the object has been processed, add it to the parent\n\t\tthis.addToParent(parent, nodeName, obj)\n\n\t\t// Return the parent\n\t\treturn parent;\n\t};\n\n\n\t/**\n\t * Interprets a value and converts it to Boolean, Number or String based on content\n\t *\n\t * @method parseValue\n\t * @param {Mixed} val\n\t * @return {Mixed}\n\t */\n\tparseValue(val) {\n\t\t// Create a numeric value from the passed parameter\n\t\tlet num = Number(val);\n\n\t\t// If the value is 'true' or 'false', parse it as a Boolean and return it\n\t\tif (val.toLowerCase() === 'true' || val.toLowerCase() === 'false') {\n\t\t\treturn val.toLowerCase() == 'true';\n\t\t}\n\n\t\t// If the num parsed to a Number, return the numeric value\n\t\t// Else if the valuse passed has no length (an attribute without value) return null,\n\t\t// Else return the param as is\n\t\treturn (isNaN(num)) ? val : (val.length == 0) ? null : num;\n\t}\n}\n","F:\\Konvo Model\\src\\data\\shapesData.js",[],"F:\\Konvo Model\\src\\components\\UNCRectangle.jsx",["296","297","298","299","300"],"import { Rect } from \"react-konva\";\r\nimport { getRectPointX, getRectPointY } from \"./CanvasUtils.js\";\r\nimport { useState  } from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nconst UNCRectangle = (shapeElement) => {\r\nconst { shape, parentX, parentY } = shapeElement;\r\n\r\nconst [hide, setHide] = useState(0);\r\nconst [dynamcifill, setDynamicFill] = useState(0);\r\n\r\n function androidToRgba(color){\r\n  const colorArray = []\r\n  for(let i=0; i<4; i++){\r\n    colorArray.push(color % 256)\r\n    color>>>=8\r\n  }\r\n  const alpha = colorArray.pop() / 255\r\n  return `rgba(${colorArray.reverse()},${alpha})`\r\n}\r\n\r\n\r\n//Dynamci_fILL---------------------------------------------------------------\r\nif(shape.dynamic_fill != undefined)\r\n{\r\n  var value = shape.dynamic_fill?.on_off?.on_color_when?.__cdata\r\n  axios({\r\n    method: 'post',\r\n    url: \"https://demo3412.herokuapp.com/tag\",\r\n    headers: {}, \r\n    data: {\r\n      tagname:value, // This is the body part\r\n    }\r\n  }).then((res)=>{\r\n if(res.data.tagValue > 50)\r\n {\r\n   console.log(\"DynamicFill\")\r\n  //  this.androidToRgba(shape.dynamic_fill.on_off.on_color)\r\n  setDynamicFill(androidToRgba(shape.dynamic_fill?.on_off?.on_color))\r\n  \r\n }else{\r\n  console.log(\"NDynamicFill\")\r\n  setDynamicFill(androidToRgba(shape?.dynamic_fill.on_off?.off_color))\r\n }\r\n  \r\n  });\r\n}\r\n\r\n //hidden_When-------------------------------------------------------------------------------------\r\n if(shape.object.security != undefined)\r\n {\r\n   var value = shape.object.security.hidden_when.__cdata ;\r\n   axios({\r\n     method: 'post',\r\n     url: \"https://demo3412.herokuapp.com/tag\",\r\n     headers: {}, \r\n     data: {\r\n       tagname:value, // This is the body part\r\n     }\r\n   }).then((res)=>{\r\n     console.log(res.data.tagValue)\r\n    \r\n  if(res.data.tagValue > 50)\r\n  {\r\n   setHide(true)\r\n   console.log(\"Visible\")\r\n  }else{\r\n   setHide(false)\r\n   console.log(\"Not Visible\")\r\n  }\r\n   \r\n   });\r\n\r\n }\r\n\r\n  return (\r\n    <Rect\r\n    key={\"Rect_\" + shape.object.object_id + shape.object.object_number}\r\n    id={\"Rect_\" + shape.object.object_id + shape.object.object_number}\r\n\r\n    x={getRectPointX(shape, parentX)}\r\n    y={getRectPointY(shape, parentY)}\r\n    \r\n\r\n    width={parseFloat(shape.rectangle.x2)}\r\n    height={parseFloat(shape.rectangle.y2)}\r\n    visible={ shape.object.security != undefined ? hide :  true }\r\n\r\n    // fillLinearGradientStartPoint = {{x : 100, y : 50}}\r\n    // fillLinearGradientEndPoint = {{x : 100, y : 100}}\r\n    // fillLinearGradientColorStops={[0, shape.fill  ===  undefined ? \"white\" : shape.fill.fill ,1,shape.gradient === undefined ? \"white\" : shape.gradient.gradient_color]}\r\n\r\n    //  fill={ shape.dynamic_fill == undefined?  shape.fill == undefined ? \"\" : shape.fill.fill == \"#5b5b5b\" ? \"#c0c0c0\"  :shape.fill.fill:\r\n    //  this.state.display_on_off_value == true ?  this.androidToRgba(shape.dynamic_fill.on_off.on_color) : this.androidToRgba(shape.dynamic_fill.on_off?.off_color) }\r\n       fill = {shape.dynamic_fill != undefined ? dynamcifill : shape?.fill?.fill}\r\n      // strokeWidth={parseFloat(shape.line.line_width)}\r\n      // shadowBlur={10}\r\n    strokeWidth={parseFloat(shape.line.line_width)}\r\n   stroke = {\"White\"}\r\n   shadowBlur={10} \r\n    // fillLinearGradientColorStops={\r\n    //   (1,\r\n    //   shape.gradient === undefined ? \"nofill\" : shape.gradient.gradient_color)\r\n    // }\r\n    // cornerRadius={parseFloat(shape.rectangle.corner_radius)}\r\n  />\r\n  );\r\n};\r\n\r\nexport default UNCRectangle;\r\n","F:\\Konvo Model\\src\\components\\UNCEllipse.jsx",["301","302","303","304","305"],"import { Ellipse } from \"react-konva\";\r\nimport { getRectPointX, getRectPointY } from \"./CanvasUtils.js\";\r\nimport React, { useState } from 'react'\r\nimport axios from 'axios';\r\n\r\n\r\nconst UNCEllipse = (shapeProps) => {\r\n  const { shape, parentX, parentY } = shapeProps;\r\n\r\n\r\n  const [hide, setHide] = useState(0);\r\n  \r\n  const [dynamcifill, setDynamicFill] = useState(0);\r\n\r\n\r\n  function androidToRgba(color){\r\n   \r\n    const colorArray = []\r\n    for(let i=0; i<4; i++){\r\n      colorArray.push(color % 256)\r\n      color>>>=8\r\n    }\r\n   \r\n    const alpha = colorArray.pop() / 255\r\n    return `rgba(${colorArray.reverse()},${alpha})`\r\n  }\r\n \r\n\r\n  //Dynamic_Filll-----------------------------------------------------------------------\r\n  if(shape.dynamic_fill != undefined)\r\n  {\r\n    var value = shape.dynamic_fill.on_off.on_color_when\r\n    axios({\r\n      method: 'post',\r\n      url: \"https://demo3412.herokuapp.com/tag\",\r\n      headers: {}, \r\n      data: {\r\n        tagname:value, // This is the body part\r\n      }\r\n    }).then((res)=>{\r\n   if(res.data.tagValue > 80)\r\n   {\r\n     console.log(\"onColor\")\r\n    setDynamicFill(androidToRgba(shape.dynamic_fill.on_off.on_color))\r\n    \r\n   }else{\r\n    console.log(\"OffColor\")\r\n    setDynamicFill(androidToRgba(shape.dynamic_fill.on_off.off_color))\r\n   }\r\n    \r\n    });\r\n\r\n  }\r\n  \r\n  //hidden_When-------------------------------------------------------------------------------------\r\n  if(shape.object.security != undefined)\r\n  {\r\n    var value = shape.object.security.hidden_when.__cdata ;\r\n    axios({\r\n      method: 'post',\r\n      url: \"https://demo3412.herokuapp.com/tag\",\r\n      headers: {}, \r\n      data: {\r\n        tagname:value, // This is the body part\r\n      }\r\n    }).then((res)=>{\r\n      // console.log(res.data.tagValue)\r\n     \r\n   if(res.data.tagValue > 50)\r\n   {\r\n    setHide(true)\r\n    console.log(\"Visible\")\r\n   }else{\r\n    setHide(false)\r\n    console.log(\"Not Visible\")\r\n   }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Ellipse\r\n      key={\"Ellipse_\" + shape.object.object_id + shape.object.object_number}\r\n      id={\"Ellipse_\" + shape.object.object_id + shape.object.object_number}\r\n     \r\n      x={getRectPointX(shape, parentX)}\r\n      y={getRectPointY(shape, parentY)}\r\n\r\n      \r\n      width={parseFloat(shape.ellipse.x2)}\r\n      height={parseFloat(shape.ellipse.y2)}\r\n\r\n      visible={ shape.object.security != undefined ? hide :  true }\r\n\r\n      // fill={ shape.dynamic_fill == undefined?  shape.fill == undefined ? \"\" : shape.fill.fill == \"#5b5b5b\" ? \"#c0c0c0\"  :shape.fill.fill:\r\n      // this.state.display_on_off_value == true ?  this.androidToRgba(shape.dynamic_fill.on_off.on_color) : this.androidToRgba(shape.dynamic_fill.on_off?.off_color) }\r\n\r\n       fill={shape.dynamic_fill != undefined ? dynamcifill  :shape?.fill?.fill}\r\n \r\n      stroke={\"black\"}\r\n      draggable={false}\r\n      shadowBlur={10}\r\n      strokeWidth={parseFloat(shape.line.line_width)}\r\n      //fillLinearGradientStartPointX={this.getXPoint(shape)+parseFloat(obj.x1)}\r\n      //fillLinearGradientStartPointY={this.getYPoint(shape)+parseFloat(obj.y1)}\r\n      // fillLinearGradientColorStops={1,shape.gradient===undefined?\"nofill\":shape.gradient.gradient_color}\r\n    />\r\n  );\r\n};\r\n\r\nexport default UNCEllipse;\r\n","F:\\Konvo Model\\src\\components\\UNCPipe.jsx",["306","307","308","309","310"],"F:\\Konvo Model\\src\\components\\UNCLabel.jsx",["311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334"],"import { Text } from \"react-konva\";\r\nimport { getPloyPoints } from \"./JSONUtil.js\";\r\nimport { useState ,useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction UNCLabel(shapeProps){\r\n  \r\n  const [hide, setHidden] = useState(true);\r\n  const [display_on_off_text, setOnOffText] = useState('');\r\n  const [display_numeric, setDisplayNumericValue] = useState(0);\r\n  const [display_array, setDisplayArray] = useState();\r\n\r\n  const { text} = shapeProps; \r\n  \r\n  var value = \" \";\r\n  \r\n  value = text.static_text.toString()\r\n  value =  value.replace(/&amp;/g,'')\r\n  value =  value.replace(/#xa;/g,'')    \r\n  value =  value.replace(/&/g,'')   \r\n  value =  value.replace(/#x9;/g,'') \r\n  value =  value.replace(/  /g,'') \r\n\r\n  // useEffect(() => {\r\n  //   console.log(\"VAlue Cahanging\")\r\n  // }, [display_on_off_text]);\r\n\r\n\r\n  \r\n  function androidToRgba(color){\r\n    const colorArray = []\r\n    for(let i=0; i<4; i++){\r\n      colorArray.push(color % 256)\r\n      color>>>=8\r\n    }\r\n    const alpha = colorArray.pop() / 255\r\n    return `rgba(${colorArray.reverse()},${alpha})`\r\n  }\r\n\r\n\r\n  //Display Numeric-----------------------------------------------------------------------------------------------------------\r\n  if(text.display_numeric != undefined)\r\n  {\r\n    value = text.display_numeric.expression.__cdata ;\r\n\r\n    if(value){\r\n\r\n    //Removing DataTypes ---Float,\r\n    value = value.replace(\"static\",\"\");\r\n     value = value.replace(\"int\",\"\");\r\n     value = value.replace(\"float\",\"\");\r\n     value = value.replace(\"double\",\"\");\r\n     value = value.replace(\"bool\",\"\");\r\n     value = value.replace(\"boolean\",\"\");\r\n  \r\n  \r\n     value = value.replace(/\\r\\n|\\n|\\r/gm ,\"$\");\r\n     var staticExpression = \"val=6.5;$if(_HTR_1A == 1)${$val = val + 1;$if(val >= 100)$val = 0;$return val;$}$else${$val = _DTms_0003+val;$return val;$}$;\";\r\n     \r\n  \r\n     axios({\r\n      method: 'post',\r\n      url: \"https://demo3412.herokuapp.com/tag\",\r\n      headers: {}, \r\n      data: {\r\n        tagname:value, // This is the body part\r\n      }\r\n    }).then((res)=>{\r\n      //console.log(display_numeric)  \r\n\r\n      var names = {};\r\n    \r\n      //    names = display_numeric;\r\n      //    console.log(names);\r\n      //  names[value] =res.data.tagValue;\r\n       setDisplayNumericValue(res.data.tagValue);\r\n  \r\n    });\r\n  \r\n\r\n  }else\r\n  {\r\n    value = text.static_text.toString()\r\n    value =  value.replace(/&amp;/g,'')\r\n    value =  value.replace(/#xa;/g,'')    \r\n    value =  value.replace(/&/g,'')   \r\n    value =  value.replace(/#x9;/g,'') \r\n    value =  value.replace(/  /g,'') \r\n\r\n  }\r\n}\r\n\r\n\r\n  //Display_on_off-------------------------------------------------------------------------------------------------------\r\n   if(text.display_on_off != undefined)\r\n  {\r\n    value = text.display_on_off.__cdata;\r\n    if(value)\r\n    {\r\n      axios({\r\n        method: 'post',\r\n        url: \"https://demo3412.herokuapp.com/tag\",\r\n        headers: {}, \r\n        data: {\r\n          tagname:value, // This is the body part\r\n        }\r\n      }).then((res)=>{\r\n       \r\n     if(res.data.tagValue > 50)\r\n     {\r\n    \r\n     setOnOffText(previousState => text.display_on_off.text_on);\r\n     \r\n     }else{\r\n   \r\n  setOnOffText(previousState => text.display_on_off.text_off);\r\n     }\r\n      });\r\n\r\n    }else\r\n    {\r\n      value = text.static_text.toString()\r\n      value =  value.replace(/&amp;/g,'')\r\n      value =  value.replace(/#xa;/g,'')    \r\n      value =  value.replace(/&/g,'')   \r\n      value =  value.replace(/#x9;/g,'') \r\n      value =  value.replace(/  /g,'') \r\n    \r\n    }\r\n   \r\n  }\r\n\r\n\r\n  \r\n  //Hiddden_When-------------------------------------------------------------------------------------------------------------\r\n   if(text.security != undefined)\r\n  {\r\n    var value = text.object.security?.hidden_when?.__cdata ;\r\n    if(value)\r\n    {\r\n    axios({\r\n      method: 'post',\r\n      url: \"https://demo3412.herokuapp.com/tag\",\r\n      headers: {}, \r\n      data: {\r\n        tagname:value, // This is the body part\r\n      }\r\n    }).then((res)=>{\r\n  \r\n      //console.log(res.data.tagValue)\r\n   if(res.data.tagValue > 50)\r\n   {\r\n    setHidden(true)\r\n   }else{\r\n    setHidden(false)\r\n   }\r\n  })\r\n}else{\r\n  value = text.static_text.toString()\r\n  value =  value.replace(/&amp;/g,'')\r\n  value =  value.replace(/#xa;/g,'')    \r\n  value =  value.replace(/&/g,'')   \r\n  value =  value.replace(/#x9;/g,'') \r\n  value =  value.replace(/  /g,'')  \r\n}\r\n}  \r\n\r\n\r\n\r\n  //Display_array-----------------------------------------------------------------------------------------------------------\r\n   if(text.display_array != undefined)\r\n  {\r\n   \r\n     \r\n      // value = text.static_text.toString()\r\n      // value =  value.replace(/&amp;/g,'')\r\n      // value =  value.replace(/#xa;/g,'')    \r\n      // value =  value.replace(/&/g,'')   \r\n      // value =  value.replace(/#x9;/g,'') \r\n      // value =  value.replace(/  /g,'') \r\n      // console.log(value)\r\n     // setDisplayArray(val)\r\n    // // console.log(\"---------------------------------DirectText.display_array.index_expression.__cdata--------------------------------------\")\r\n    // // console.log(val)\r\n    // var first = 10;\r\n  \r\n    // if(val.includes(\"+\"))\r\n    // {\r\n    //     val = val.split(\"+\");\r\n  \r\n    //     if(val[0].includes(\"(\"))\r\n    //     {\r\n    //     first = preFunctions.mainFunction(val[0],this.state.ProjectId,text.object.object_id)\r\n    //     }else{\r\n    //       first = parseInt(val[0],10)\r\n  \r\n    //     }\r\n    // val = first  + parseInt(val[1],10)\r\n    // }\r\n  }\r\n  \r\n  if(text.display_numeric == undefined && \r\n    text.display_on_off == undefined &&\r\n     text.display_array == undefined)\r\n  {\r\n\r\n    value = text.static_text.toString()\r\n    value =  value.replace(/&amp;/g,'')\r\n    value =  value.replace(/#xa;/g,'')    \r\n    value =  value.replace(/&/g,'')   \r\n    value =  value.replace(/#x9;/g,'') \r\n    value =  value.replace(/  /g,'') \r\n  \r\n  }\r\n  \r\n  \r\n          return  <Text fontFamily={text.font_family}  \r\n         fontSize={text.font_size }\r\n              fill={androidToRgba(text.color)}\r\n              visible={ text.object.security != undefined ? hide :  true }\r\n              text={text.display_numeric != undefined ? text.display_numeric.expression.__cdata ?  display_numeric : value :\r\n                text.display_on_off != undefined ?  text.display_on_off?.__cdata ? display_on_off_text : value : text.display_array != undefined ? value:\r\n                value}\r\n            x = {parseFloat(text.box.axis_offset_left)+parseFloat(text.box.axis_anchor)+(parseFloat(text.box.left)) }\r\n            y = {parseFloat(text.box.axis_offset_top)+parseFloat(text.box.axis_anchor)+((parseFloat(text.box.top))) }  \r\n          />\r\n        }\r\n      \r\n\r\n\r\nexport default UNCLabel;\r\n","F:\\Konvo Model\\src\\components\\UNCLine.jsx",["335","336"],"import { Line } from \"react-konva\";\r\nimport { getPloyPoints } from \"./CanvasUtils.js\";\r\n\r\nconst UNCLine = (shapeProps) => {\r\n  const { shape, parentX, parentY } = shapeProps;\r\n\r\n  \r\n  return (\r\n    <Line\r\n      key={\"Line_\" + shape.object.object_id + shape.object.object_number}\r\n      id={\"Line_\" + Math.random()}\r\n      points={getPloyPoints(shape, parentX, parentY)}\r\n      fill={shape.fill == undefined ? \"\" : shape.fill.fill == \"#5b5b5b\" ? \"#c0c0c0\"  :shape.fill.fill}\r\n      stroke={shape.line.color}\r\n      strokeWidth={parseInt(shape.line.line_width)}\r\n       \r\n    ></Line>\r\n  );\r\n};\r\n\r\nexport default UNCLine;\r\n","F:\\Konvo Model\\src\\components\\UNCButton.jsx",["337","338","339","340","341","342","343","344","345","346","347","348","349"],"import preFunctions from \"./preFunctions\";\r\nimport {\r\n  Stage,\r\n  Polyline,\r\n  Shape,\r\n  Layer,\r\n  Rect,\r\n  Ellipse,\r\n  Text,\r\n  Circle,\r\n  Line,\r\n  Group,\r\n  Arc,\r\n  Image\r\n} from \"react-konva\";\r\n// import \"konva/lib/shapes\";\r\nimport { getRectPointX, getRectPointY } from \"./CanvasUtils.js\";\r\nimport React, { Component } from \"react\";\r\nimport { render } from \"react-dom\"; \r\nconst UNCButton = (shapeElement) => {\r\n  const { shape, parentX, parentY,ProjectId } = shapeElement;\r\n\r\n  \r\nvar finalLabel = \"\";\r\nvar buttonLabel = \"\" ;\r\n buttonLabel = shape?.input_touch?.up?.command?.__cdata.toString();\r\n var objectId= shape.object.object_id\r\n\r\n\r\nfinalLabel = preFunctions.mainFunction(buttonLabel,ProjectId,objectId)\r\n\r\n  return (\r\n          <Group>\r\n   \r\n         <Rect\r\n      id={\"But\" + shape.object.object_id + shape.object.object_number}\r\n\r\n     x={ parseFloat(parentX)+ parseFloat(shape.box.axis_offset_left)+((parseFloat(shape.box.left))/2)}\r\n     y={ parseFloat(parentY) +parseFloat(shape.box.axis_offset_top)+((parseFloat(shape.box.top))/2)}\r\n     \r\n        width={parseFloat(shape.box.right)}\r\n      height={parseFloat(shape.box.bottom)}\r\n\r\n     fill ='white'\r\n  strokeWidth={2}\r\n     stroke = { \"grey\" }\r\n\r\n\r\n      />\r\n      <Text  \r\n        x={ parseFloat(parentX)+ parseFloat(shape.box.axis_offset_left)+((parseFloat(shape.box.left))+parseFloat(0)/2)}\r\n       y={ parseFloat(parentY) +parseFloat(shape.box.axis_offset_top)+((parseFloat(shape.box.top))+parseFloat(20)/2)}\r\n       text = {finalLabel}\r\n      ></Text>\r\n\r\n          </Group>\r\n      );\r\n};\r\n\r\n\r\nexport default UNCButton;\r\n","F:\\Konvo Model\\src\\components\\UNCPolygon.jsx",["350","351","352","353","354"],"import { Line } from \"react-konva\";\r\nimport { getPloyPoints } from \"./CanvasUtils.js\";\r\nimport { useState  } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst UNCPolygon = (shapeProps) => {\r\n  const { shape, parentX, parentY } = shapeProps;\r\n  \r\n\r\n  \r\nconst [hide, setHide] = useState(0);\r\nconst [dynamcifill, setDynamicFill] = useState(0);\r\n\r\n  function androidToRgba(color){\r\n    const colorArray = []\r\n    for(let i=0; i<4; i++){\r\n      colorArray.push(color % 256)\r\n      color>>>=8\r\n    }\r\n    const alpha = colorArray.pop() / 255\r\n    return `rgba(${colorArray.reverse()},${alpha})`\r\n  }\r\n\r\n  //Dynamci_fILL---------------------------------------------------------------\r\nif(shape.dynamic_fill != undefined)\r\n{\r\n  var value = shape.dynamic_fill.on_off.on_color_when\r\n  axios({\r\n    method: 'post',\r\n    url: \"https://demo3412.herokuapp.com/tag\",\r\n    headers: {}, \r\n    data: {\r\n      tagname:value, // This is the body part\r\n    }\r\n  }).then((res)=>{\r\n if(res.data.tagValue > 50)\r\n {\r\n   console.log(\"DynamicFill\")\r\n  //  this.androidToRgba(shape.dynamic_fill.on_off.on_color)\r\n  setDynamicFill(androidToRgba(shape.dynamic_fill.on_off.on_color))\r\n  \r\n }else{\r\n  console.log(\"NDynamicFill\")\r\n  setDynamicFill(androidToRgba(shape.dynamic_fill.on_off.off_color))\r\n }\r\n  \r\n  });\r\n}\r\n\r\n //hidden_When-------------------------------------------------------------------------------------\r\n if(shape.object.security != undefined)\r\n {\r\n   var value = shape.object.security.hidden_when.__cdata ;\r\n   axios({\r\n     method: 'post',\r\n     url: \"https://demo3412.herokuapp.com/tag\",\r\n     headers: {}, \r\n     data: {\r\n       tagname:value, // This is the body part\r\n     }\r\n   }).then((res)=>{\r\n     console.log(res.data.tagValue)\r\n    \r\n  if(res.data.tagValue > 50)\r\n  {\r\n   setHide(true)\r\n   console.log(\"Visible\")\r\n  }else{\r\n   setHide(false)\r\n   console.log(\"Not Visible\")\r\n  }\r\n   });\r\n }\r\n\r\n  return (\r\n    <Line\r\n      key={\"Polygon_\" + shape.object.object_id + shape.object.object_number}\r\n      id={\"Polygon_\" + shape.object.object_id + shape.object.object_number}\r\n      points={getPloyPoints(shape, parentX, parentY)}\r\n\r\n     // fill={shape.fill == undefined ? \"\" : shape.fill.fill == \"#5b5b5b\" ? \"#c0c0c0\"  :shape.fill.fill}\r\n     fill = {shape.dynamic_fill != undefined ? dynamcifill : shape?.fill?.fill}\r\n      visible={ shape.object.security != undefined ? hide :  true }\r\n       stroke={\"black\"}\r\n      strokeWidth={parseInt(shape.line.line_width)}\r\n      draggable={true}\r\n      closed={parseInt(shape.polyline.closed)}\r\n      // fillLinearGradientStartPointX={this.getXPoint(shape)+parseFloat(obj.x1)}\r\n      // fillLinearGradientStartPointY={this.getYPoint(shape)+parseFloat(obj.y1)}\r\n      // fillLinearGradientColorStops={1,shape.gradient===undefined?\"nofill\":shape.gradient.gradient_color}\r\n    ></Line>\r\n  );\r\n};\r\n\r\nexport default UNCPolygon;\r\n","F:\\Konvo Model\\src\\components\\preFunctions.jsx",["355","356","357","358","359","360","361"],"import { Component } from \"react\";\r\nimport axios from 'axios';\r\n\r\n\r\nclass preFunctions extends Component{\r\n\r\n      static mainFunction(param,projectId,ObjectId) {\r\n\r\n        // var api = 'http://worldclockapi.com/api/json/est/now';\r\n      \r\n        // console.log(\"====================================\")\r\n        // console.log(api);\r\n        //  var val = \"\";\r\n\r\n        // var res =   axios.get(api).then(res => {           \r\n        //      val = res.data.currentFileTime ;\r\n        //      console.log(val)\r\n        //       } )\r\n\r\n        if(param != null )\r\n        {\r\n        var res = param.split(\"(\")\r\n   //     console.log(projectId+\"_\"+ObjectId+\"_\"+param)\r\n          switch(res[0])\r\n         {\r\n            //Page / Gul Interactions Functions---------------------------\r\n            case \"openPage\":\r\n                    //dll code \r\n             return res[1];\r\n             case \"openEcPopup\":\r\n             return res[1];\r\n             case \"mapEcPopup\":\r\n             return res[1];\r\n             case \"openAlarmPage\":\r\n             return res[0];\r\n             case \"openEventPage\":\r\n             return res[0];\r\n             case \"openHistoryAlarmPage\":\r\n            return res[0];\r\n            case \"openDayWiseAlarmPage\":\r\n            return res[0];\r\n            case \"openTrendPage\":\r\n            return res[0];\r\n            case \"openTelemetry\":\r\n            return res[1];\r\n            case \"openStandardReportDialog\":\r\n            return res[1];\r\n            case \"openMiniTrendPopup\":\r\n            return res[1];\r\n            case \"standardPopup\":\r\n            return res[1];\r\n            case \"openPreviousPage\":\r\n            return res[1];\r\n            case \"openNextPage\":\r\n            return res[1];\r\n            case \"openFilteredAlarmPage\":\r\n            return res[1];\r\n\r\n\r\n            //Security Functions-------------------------------------\r\n            case \"login\" :\r\n                return \"Login\" ;\r\n            case \"displayTime\" :\r\n                return 1  ;\r\n            case \"logoff\" :\r\n                return \"Logff\" ;\r\n\r\n            //Date & Time Functions------------------------------------\r\n            case \"displayDateTime\" :\r\n                return 1 ;\r\n            case \"displayTime\" :\r\n                return 1  ;\r\n            case \"displayDate\" :\r\n                return 1 ;\r\n\r\n            //Alarm & Event Functions------------------------------------\r\n            case \"sendAlarmAckByAll\" :\r\n                return  1;\r\n            case \"sendAlarmAckByPointId\" :\r\n                 return  1;\r\n            case \"sendAlarmAckByArea\" :\r\n                 return  res[1]; \r\n            case \"sendAlarmAckByDevice\" :\r\n                 return  1;\r\n            case \"sendAlarmAckByPriority\" :\r\n                     return  1;\r\n            case \"sendAlarmAckByAreaTag\" :\r\n                    return  1;\r\n            case \"sendAlarmAckBySystem\" :\r\n                    return  1; \r\n            case \"sendAlarmAckByAnalog\" :\r\n                    return  1;\r\n            case \"sendAlarmAckByDigital\" :\r\n                    return  1;\r\n            case \"getAreaAlarmStatus\" :\r\n                    return  100;\r\n            case \"getUnAckActiveAlarmCount\" :\r\n\r\n                    return  75; \r\n            case \"getAckActiveAlarmCount\" :\r\n\r\n            var x= 10;\r\n            var y = 20;\r\n            var z = 30\r\n                    return  eval(\"x + y + z\");\r\n            case \"getUnAckNormalAlarmCount\" :\r\n                    return  25;\r\n            case \"alarmByIndex\" :\r\n                    return  1; \r\n            case \"getAlarmAckStatus\" :\r\n                    return  1;\r\n            case \"messageByIndex\" :\r\n                    return  1;\r\n            case \"getAlarmPriorityByIndex\" :\r\n                    return  1;\r\n            case \"run_applicaiton\" :\r\n                    return  1; \r\n\r\n\r\n            //Miscellaneous Functions-------------------------------------\r\n            case \"getActiveServer\" :\r\n                    return  1;\r\n            case \"getMyHostName\" :\r\n                    return  1;\r\n            case \"getServerMode\" :\r\n                    return  75; \r\n            case \"inputString\" :\r\n                    return  100;\r\n            case \"inputNumber\" :\r\n                    return  25;\r\n            case \"inputNumaricValue\" :\r\n                    return  1; \r\n            case \"inputAnalogValue\" :\r\n                    return  1;\r\n            case \"getLastServerMessage\" :\r\n                    return  1;\r\n            case \"showMessage\" :\r\n                    return  1;\r\n            case \"displayVersion\" :\r\n                    return  1; \r\n            case \"quitHmi\" :\r\n                    return  100;\r\n            case \"commandBoxConfirmation\" :\r\n                    return  25;\r\n            case \"showMessageBox\" :\r\n                    return  1; \r\n            case \"waitForMsec\" :\r\n                    return  1;\r\n        \r\n            //ECSCADA Interface Functions--------------------------------\r\n            case \"tagAnalogValue\" :\r\n                return  1;\r\n            case \"tagDigitalValue\" :\r\n                    return  5; \r\n            case \"sendDigitalCommand\" :\r\n                    return  0;\r\n            case \"sendAnalogCommand\" :\r\n                    return  25;\r\n            case \"sendAnalogManualValue\" :\r\n                    return  1; \r\n            case \"sendDigitalManualValue\" :\r\n                    return  1;\r\n            case \"sendAnalogCalValue\" :\r\n                    return  1;\r\n            case \"sendDigitalCalValue\" :\r\n                    return  1;\r\n            case \"scanIn\" :\r\n                    return  1; \r\n            case \"scanOut\" :\r\n                return  1;\r\n            case \"demandScan\" :\r\n                    return  75; \r\n            case \"alarmInhibit\" :\r\n                    return  100;\r\n            case \"getTagName\" :\r\n                    return  25;\r\n            case \"getTagDesc \" :\r\n                    return  1; \r\n            case \"sendSecureAnalogCommand\" :\r\n                    return  1;\r\n            case \"sendSecureDigitalCommand\" :\r\n                    return  1;\r\n            case \"sendAnalogDirectManualValue\" :\r\n                    return  1;\r\n            case \"sendDigitalDirectManualValue\" :\r\n                    return  1; \r\n             case \"sendSecureTPLCAOCommand\" :\r\n                    return  1; \r\n            case \"sendSecureTPLCDOCommand\" :\r\n                return  1;\r\n            default :\r\n         }\r\n        }\r\n        }\r\n\r\n        static designLevelFunction(tag,projectId,ObjectId)\r\n        {       \r\n           console.log(projectId+\"_\"+ObjectId+\"_\"+tag)\r\n                switch(tag)\r\n                {\r\n                        case \"hidden_when\": \r\n                        //Call projectId_objectId_tag Dll unction and\r\n                        // get the Value return that value \r\n                        return false;\r\n\r\n                        case \"displayNumber\":\r\n                        //tagAnalogValue(AI_2AW2_L)\r\n                        return 56890.5;\r\n\r\n                        case \"displayString\":\r\n                        return \"DisplayString\";\r\n\r\n                        case \"dynamicfilllevel\":\r\n                        return 45.3;\r\n\r\n                        case \"dynamicFillArray\":\r\n                        return   78.5;\r\n\r\n                        case \"onTouchCommand\":\r\n                        return this.mainFunction(\"OPenPage(TEST_2A_S3,2)\",projectId,ObjectId)\r\n                }\r\n\r\n        }\r\n}\r\nexport default preFunctions;","F:\\Konvo Model\\src\\components\\APIUtil.jsx",["362","363"],"import ShapesData from \"../data/shapesData\";\r\n\r\nconst hmipage =\r\n  ShapesData.hmipage === undefined ? ShapesData : ShapesData.hmipage;\r\n\r\nconst { shapes, component_instances, labels } = hmipage; // Destructuring\r\n\r\nexport function ShapeComponets() {\r\n  let emptyCompObj = {\r\n    uuid: \"{4c64b6e1-bb25-442a-abf7-6fa6c5694ff5}\",\r\n    zIndex: \"0\",\r\n    objectNumber: \"0\",\r\n    x1: \"0\",\r\n    y1: \"0\",\r\n    x2: \"0\",\r\n    y2: \"0\",\r\n    objectId: \"\",\r\n    shape: [],\r\n    description: [],\r\n  };\r\n\r\n  let shapeComponetsList = [];\r\n\r\n  //if we have only Shapes\r\n  if (shapes !== undefined) {\r\n    if (Array.isArray(shapes)) {\r\n      shapes.map((obj, i) => emptyCompObj.shape.push(obj));\r\n\r\n      emptyCompObj.shape.sort((a, b) =>\r\n        parseInt(a.z_index) > parseInt(b.z_index) ? 1 : -1\r\n      );\r\n      shapeComponetsList.push(emptyCompObj);\r\n    } else if (shapes.shape !== undefined) {\r\n      emptyCompObj.shape.push(shapes.shape);\r\n      shapeComponetsList.push(emptyCompObj);\r\n    }\r\n  }\r\n\r\n  //component instances\r\n  if (component_instances !== undefined) {\r\n    if (Array.isArray(component_instances)) {\r\n      component_instances.map((obj, i) => {\r\n        if (obj.group === undefined) {\r\n          obj.shape.sort((a, b) =>\r\n            parseInt(a.box.z_index) > parseInt(b.box.z_index) ? 1 : -1\r\n          );\r\n          shapeComponetsList.push(obj);\r\n        } else {\r\n          obj.group.map((x) => {\r\n            x.shape.sort((a, b) =>\r\n              parseInt(a.box.z_index) > parseInt(b.box.z_index) ? 1 : -1\r\n            );\r\n            shapeComponetsList.push(x);\r\n          });\r\n        }\r\n      });\r\n    } else if (component_instances.componentInstance !== undefined) {\r\n      const { group } = component_instances.componentInstance;\r\n      if (group !== undefined) {\r\n        group.shape.sort((a, b) =>\r\n          parseInt(a.box.z_index) > parseInt(b.box.z_index) ? 1 : -1\r\n        );\r\n        shapeComponetsList.push(group);\r\n      } else {\r\n        component_instances.componentInstance.shape.sort((a, b) =>\r\n          parseInt(a.box.z_index) > parseInt(b.box.z_index) ? 1 : -1\r\n        );\r\n        console.log(component_instances.componentInstance.shape);\r\n        shapeComponetsList.push(component_instances.componentInstance);\r\n      }\r\n      //\r\n    } else {\r\n      console.log(\"else\");\r\n    }\r\n  }\r\n\r\n  return shapeComponetsList;\r\n}\r\n\r\nexport function LableComponets() {\r\n  let lableComponetsList = [];\r\n\r\n  if (labels !== undefined) {\r\n    if (Array.isArray(ShapesData.hmipage.labels)) {\r\n      labels.map((obj, i) => lableComponetsList.push(obj));\r\n    } else if (labels.text !== undefined) {\r\n      lableComponetsList.push(labels.text);\r\n    }\r\n  }\r\n\r\n  return lableComponetsList;\r\n}\r\n",{"ruleId":"364","severity":1,"message":"365","line":7,"column":8,"nodeType":"366","messageId":"367","endLine":7,"endColumn":16},{"ruleId":"364","severity":1,"message":"368","line":8,"column":8,"nodeType":"366","messageId":"367","endLine":8,"endColumn":14},{"ruleId":"364","severity":1,"message":"369","line":9,"column":8,"nodeType":"366","messageId":"367","endLine":9,"endColumn":16},{"ruleId":"364","severity":1,"message":"370","line":11,"column":8,"nodeType":"366","messageId":"367","endLine":11,"endColumn":19},{"ruleId":"364","severity":1,"message":"371","line":12,"column":8,"nodeType":"366","messageId":"367","endLine":12,"endColumn":18},{"ruleId":"364","severity":1,"message":"372","line":13,"column":8,"nodeType":"366","messageId":"367","endLine":13,"endColumn":17},{"ruleId":"364","severity":1,"message":"373","line":14,"column":8,"nodeType":"366","messageId":"367","endLine":14,"endColumn":18},{"ruleId":"364","severity":1,"message":"374","line":15,"column":8,"nodeType":"366","messageId":"367","endLine":15,"endColumn":15},{"ruleId":"375","replacedBy":"376"},{"ruleId":"377","replacedBy":"378"},{"ruleId":"364","severity":1,"message":"379","line":1,"column":8,"nodeType":"366","messageId":"367","endLine":1,"endColumn":12},{"ruleId":"364","severity":1,"message":"374","line":4,"column":8,"nodeType":"366","messageId":"367","endLine":4,"endColumn":15},{"ruleId":"364","severity":1,"message":"380","line":1,"column":15,"nodeType":"366","messageId":"367","endLine":1,"endColumn":24},{"ruleId":"364","severity":1,"message":"381","line":2,"column":9,"nodeType":"366","messageId":"367","endLine":2,"endColumn":13},{"ruleId":"364","severity":1,"message":"382","line":3,"column":19,"nodeType":"366","messageId":"367","endLine":3,"endColumn":25},{"ruleId":"364","severity":1,"message":"383","line":3,"column":27,"nodeType":"366","messageId":"367","endLine":3,"endColumn":30},{"ruleId":"384","severity":1,"message":"385","line":26,"column":60,"nodeType":"386","messageId":"387","endLine":26,"endColumn":62},{"ruleId":"384","severity":1,"message":"385","line":37,"column":47,"nodeType":"386","messageId":"387","endLine":37,"endColumn":49},{"ruleId":"388","severity":1,"message":"389","line":38,"column":9,"nodeType":"390","messageId":"391","endLine":49,"endColumn":10},{"ruleId":"388","severity":1,"message":"389","line":82,"column":9,"nodeType":"390","messageId":"391","endLine":93,"endColumn":10},{"ruleId":"364","severity":1,"message":"392","line":2,"column":8,"nodeType":"366","messageId":"367","endLine":2,"endColumn":22},{"ruleId":"364","severity":1,"message":"393","line":3,"column":10,"nodeType":"366","messageId":"367","endLine":3,"endColumn":23},{"ruleId":"364","severity":1,"message":"394","line":3,"column":25,"nodeType":"366","messageId":"367","endLine":3,"endColumn":38},{"ruleId":"364","severity":1,"message":"395","line":4,"column":10,"nodeType":"366","messageId":"367","endLine":4,"endColumn":18},{"ruleId":"364","severity":1,"message":"396","line":7,"column":3,"nodeType":"366","messageId":"367","endLine":7,"endColumn":11},{"ruleId":"364","severity":1,"message":"397","line":8,"column":3,"nodeType":"366","messageId":"367","endLine":8,"endColumn":8},{"ruleId":"364","severity":1,"message":"398","line":10,"column":3,"nodeType":"366","messageId":"367","endLine":10,"endColumn":7},{"ruleId":"364","severity":1,"message":"399","line":11,"column":3,"nodeType":"366","messageId":"367","endLine":11,"endColumn":10},{"ruleId":"364","severity":1,"message":"368","line":13,"column":3,"nodeType":"366","messageId":"367","endLine":13,"endColumn":9},{"ruleId":"364","severity":1,"message":"400","line":14,"column":3,"nodeType":"366","messageId":"367","endLine":14,"endColumn":7},{"ruleId":"364","severity":1,"message":"401","line":16,"column":3,"nodeType":"366","messageId":"367","endLine":16,"endColumn":6},{"ruleId":"364","severity":1,"message":"402","line":19,"column":23,"nodeType":"366","messageId":"367","endLine":19,"endColumn":30},{"ruleId":"364","severity":1,"message":"403","line":19,"column":45,"nodeType":"366","messageId":"367","endLine":19,"endColumn":53},{"ruleId":"364","severity":1,"message":"404","line":19,"column":61,"nodeType":"366","messageId":"367","endLine":19,"endColumn":72},{"ruleId":"364","severity":1,"message":"405","line":20,"column":10,"nodeType":"366","messageId":"367","endLine":20,"endColumn":23},{"ruleId":"364","severity":1,"message":"406","line":22,"column":8,"nodeType":"366","messageId":"367","endLine":22,"endColumn":20},{"ruleId":"364","severity":1,"message":"407","line":29,"column":8,"nodeType":"366","messageId":"367","endLine":29,"endColumn":18},{"ruleId":"364","severity":1,"message":"408","line":30,"column":10,"nodeType":"366","messageId":"367","endLine":30,"endColumn":19},{"ruleId":"364","severity":1,"message":"409","line":31,"column":10,"nodeType":"366","messageId":"367","endLine":31,"endColumn":24},{"ruleId":"364","severity":1,"message":"410","line":33,"column":9,"nodeType":"366","messageId":"367","endLine":33,"endColumn":16},{"ruleId":"364","severity":1,"message":"411","line":34,"column":8,"nodeType":"366","messageId":"367","endLine":34,"endColumn":22},{"ruleId":"364","severity":1,"message":"412","line":35,"column":10,"nodeType":"366","messageId":"367","endLine":35,"endColumn":15},{"ruleId":"364","severity":1,"message":"413","line":37,"column":10,"nodeType":"366","messageId":"367","endLine":37,"endColumn":21},{"ruleId":"364","severity":1,"message":"414","line":38,"column":10,"nodeType":"366","messageId":"367","endLine":38,"endColumn":31},{"ruleId":"364","severity":1,"message":"415","line":123,"column":11,"nodeType":"366","messageId":"367","endLine":123,"endColumn":13},{"ruleId":"416","severity":1,"message":"417","line":140,"column":29,"nodeType":"418","messageId":"419","endLine":140,"endColumn":30,"suggestions":"420"},{"ruleId":"421","severity":1,"message":"422","line":155,"column":11,"nodeType":"423","messageId":"424","endLine":157,"endColumn":12,"fix":"425"},{"ruleId":"426","severity":1,"message":"427","line":206,"column":11,"nodeType":"366","messageId":"428","endLine":206,"endColumn":16},{"ruleId":"429","severity":1,"message":"430","line":212,"column":14,"nodeType":"431","messageId":"432","endLine":212,"endColumn":16},{"ruleId":"421","severity":1,"message":"422","line":215,"column":12,"nodeType":"423","messageId":"424","endLine":217,"endColumn":12,"fix":"433"},{"ruleId":"384","severity":1,"message":"385","line":236,"column":26,"nodeType":"386","messageId":"387","endLine":236,"endColumn":28},{"ruleId":"429","severity":1,"message":"430","line":263,"column":19,"nodeType":"431","messageId":"432","endLine":263,"endColumn":21},{"ruleId":"388","severity":1,"message":"389","line":265,"column":5,"nodeType":"390","messageId":"391","endLine":279,"endColumn":9},{"ruleId":"429","severity":1,"message":"430","line":291,"column":29,"nodeType":"431","messageId":"432","endLine":291,"endColumn":31},{"ruleId":"429","severity":1,"message":"430","line":304,"column":32,"nodeType":"431","messageId":"432","endLine":304,"endColumn":34},{"ruleId":"429","severity":1,"message":"430","line":317,"column":30,"nodeType":"431","messageId":"432","endLine":317,"endColumn":32},{"ruleId":"429","severity":1,"message":"430","line":345,"column":25,"nodeType":"431","messageId":"432","endLine":345,"endColumn":27},{"ruleId":"429","severity":1,"message":"430","line":353,"column":29,"nodeType":"431","messageId":"432","endLine":353,"endColumn":31},{"ruleId":"364","severity":1,"message":"434","line":355,"column":6,"nodeType":"366","messageId":"367","endLine":355,"endColumn":16},{"ruleId":"429","severity":1,"message":"430","line":364,"column":40,"nodeType":"431","messageId":"432","endLine":364,"endColumn":42},{"ruleId":"429","severity":1,"message":"435","line":365,"column":46,"nodeType":"431","messageId":"432","endLine":365,"endColumn":48},{"ruleId":"364","severity":1,"message":"436","line":395,"column":21,"nodeType":"366","messageId":"367","endLine":395,"endColumn":27},{"ruleId":"429","severity":1,"message":"435","line":396,"column":39,"nodeType":"431","messageId":"432","endLine":396,"endColumn":41},{"ruleId":"437","severity":1,"message":"438","line":404,"column":5,"nodeType":"439","endLine":409,"endColumn":9},{"ruleId":"429","severity":1,"message":"430","line":458,"column":28,"nodeType":"431","messageId":"432","endLine":458,"endColumn":30},{"ruleId":"429","severity":1,"message":"430","line":458,"column":70,"nodeType":"431","messageId":"432","endLine":458,"endColumn":72},{"ruleId":"429","severity":1,"message":"430","line":477,"column":36,"nodeType":"431","messageId":"432","endLine":477,"endColumn":38},{"ruleId":"429","severity":1,"message":"430","line":512,"column":33,"nodeType":"431","messageId":"432","endLine":512,"endColumn":35},{"ruleId":"429","severity":1,"message":"430","line":522,"column":35,"nodeType":"431","messageId":"432","endLine":522,"endColumn":37},{"ruleId":"429","severity":1,"message":"430","line":526,"column":39,"nodeType":"431","messageId":"432","endLine":526,"endColumn":41},{"ruleId":"429","severity":1,"message":"430","line":534,"column":44,"nodeType":"431","messageId":"432","endLine":534,"endColumn":46},{"ruleId":"429","severity":1,"message":"430","line":550,"column":36,"nodeType":"431","messageId":"432","endLine":550,"endColumn":38},{"ruleId":"384","severity":1,"message":"440","line":551,"column":43,"nodeType":"386","messageId":"441","endLine":551,"endColumn":45},{"ruleId":"429","severity":1,"message":"430","line":558,"column":47,"nodeType":"431","messageId":"432","endLine":558,"endColumn":49},{"ruleId":"429","severity":1,"message":"430","line":571,"column":48,"nodeType":"431","messageId":"432","endLine":571,"endColumn":50},{"ruleId":"429","severity":1,"message":"430","line":584,"column":47,"nodeType":"431","messageId":"432","endLine":584,"endColumn":49},{"ruleId":"429","severity":1,"message":"430","line":603,"column":36,"nodeType":"431","messageId":"432","endLine":603,"endColumn":38},{"ruleId":"364","severity":1,"message":"442","line":1,"column":8,"nodeType":"366","messageId":"367","endLine":1,"endColumn":13},{"ruleId":"364","severity":1,"message":"443","line":3,"column":8,"nodeType":"366","messageId":"367","endLine":3,"endColumn":16},{"ruleId":"364","severity":1,"message":"444","line":4,"column":10,"nodeType":"366","messageId":"367","endLine":4,"endColumn":16},{"ruleId":"364","severity":1,"message":"396","line":5,"column":17,"nodeType":"366","messageId":"367","endLine":5,"endColumn":25},{"ruleId":"364","severity":1,"message":"397","line":5,"column":27,"nodeType":"366","messageId":"367","endLine":5,"endColumn":32},{"ruleId":"364","severity":1,"message":"368","line":5,"column":60,"nodeType":"366","messageId":"367","endLine":5,"endColumn":66},{"ruleId":"364","severity":1,"message":"401","line":5,"column":79,"nodeType":"366","messageId":"367","endLine":5,"endColumn":82},{"ruleId":"388","severity":1,"message":"389","line":52,"column":9,"nodeType":"390","messageId":"391","endLine":58,"endColumn":10},{"ruleId":"388","severity":1,"message":"389","line":64,"column":9,"nodeType":"390","messageId":"391","endLine":71,"endColumn":10},{"ruleId":"388","severity":1,"message":"389","line":78,"column":9,"nodeType":"390","messageId":"391","endLine":87,"endColumn":10},{"ruleId":"388","severity":1,"message":"389","line":136,"column":13,"nodeType":"390","messageId":"391","endLine":221,"endColumn":14},{"ruleId":"445","severity":1,"message":"446","line":152,"column":52,"nodeType":"447","messageId":"448","endLine":152,"endColumn":53},{"ruleId":"449","severity":1,"message":"450","line":158,"column":21,"nodeType":"451","messageId":"452","endLine":158,"endColumn":27},{"ruleId":"449","severity":1,"message":"450","line":176,"column":25,"nodeType":"451","messageId":"452","endLine":176,"endColumn":31},{"ruleId":"429","severity":1,"message":"435","line":182,"column":37,"nodeType":"431","messageId":"432","endLine":182,"endColumn":39},{"ruleId":"429","severity":1,"message":"435","line":196,"column":37,"nodeType":"431","messageId":"432","endLine":196,"endColumn":39},{"ruleId":"445","severity":1,"message":"446","line":203,"column":52,"nodeType":"447","messageId":"448","endLine":203,"endColumn":53},{"ruleId":"429","severity":1,"message":"435","line":210,"column":37,"nodeType":"431","messageId":"432","endLine":210,"endColumn":39},{"ruleId":"449","severity":1,"message":"450","line":215,"column":21,"nodeType":"451","messageId":"452","endLine":215,"endColumn":27},{"ruleId":"449","severity":1,"message":"450","line":219,"column":25,"nodeType":"451","messageId":"452","endLine":219,"endColumn":31},{"ruleId":"453","severity":1,"message":"454","line":253,"column":17,"nodeType":"455","endLine":253,"endColumn":22},{"ruleId":"364","severity":1,"message":"443","line":2,"column":8,"nodeType":"366","messageId":"367","endLine":2,"endColumn":16},{"ruleId":"364","severity":1,"message":"444","line":3,"column":10,"nodeType":"366","messageId":"367","endLine":3,"endColumn":16},{"ruleId":"364","severity":1,"message":"398","line":4,"column":30,"nodeType":"366","messageId":"367","endLine":4,"endColumn":34},{"ruleId":"364","severity":1,"message":"456","line":4,"column":44,"nodeType":"366","messageId":"367","endLine":4,"endColumn":48},{"ruleId":"364","severity":1,"message":"368","line":4,"column":50,"nodeType":"366","messageId":"367","endLine":4,"endColumn":56},{"ruleId":"364","severity":1,"message":"400","line":4,"column":58,"nodeType":"366","messageId":"367","endLine":4,"endColumn":62},{"ruleId":"364","severity":1,"message":"401","line":4,"column":69,"nodeType":"366","messageId":"367","endLine":4,"endColumn":72},{"ruleId":"364","severity":1,"message":"457","line":18,"column":13,"nodeType":"366","messageId":"367","endLine":18,"endColumn":23},{"ruleId":"364","severity":1,"message":"458","line":19,"column":13,"nodeType":"366","messageId":"367","endLine":19,"endColumn":23},{"ruleId":"453","severity":1,"message":"454","line":50,"column":19,"nodeType":"455","endLine":50,"endColumn":41},{"ruleId":"445","severity":1,"message":"446","line":105,"column":90,"nodeType":"447","messageId":"448","endLine":105,"endColumn":91},{"ruleId":"364","severity":1,"message":"407","line":2,"column":8,"nodeType":"366","messageId":"367","endLine":2,"endColumn":18},{"ruleId":"364","severity":1,"message":"459","line":3,"column":10,"nodeType":"366","messageId":"367","endLine":3,"endColumn":24},{"ruleId":"364","severity":1,"message":"460","line":3,"column":26,"nodeType":"366","messageId":"367","endLine":3,"endColumn":40},{"ruleId":"429","severity":1,"message":"435","line":31,"column":22,"nodeType":"431","messageId":"432","endLine":31,"endColumn":24},{"ruleId":"429","severity":1,"message":"435","line":41,"column":29,"nodeType":"431","messageId":"432","endLine":41,"endColumn":31},{"ruleId":"364","severity":1,"message":"395","line":1,"column":17,"nodeType":"366","messageId":"367","endLine":1,"endColumn":25},{"ruleId":"364","severity":1,"message":"461","line":1,"column":27,"nodeType":"366","messageId":"367","endLine":1,"endColumn":36},{"ruleId":"364","severity":1,"message":"462","line":3,"column":5,"nodeType":"366","messageId":"367","endLine":3,"endColumn":10},{"ruleId":"364","severity":1,"message":"396","line":4,"column":5,"nodeType":"366","messageId":"367","endLine":4,"endColumn":13},{"ruleId":"364","severity":1,"message":"397","line":5,"column":5,"nodeType":"366","messageId":"367","endLine":5,"endColumn":10},{"ruleId":"364","severity":1,"message":"463","line":6,"column":5,"nodeType":"366","messageId":"367","endLine":6,"endColumn":10},{"ruleId":"364","severity":1,"message":"398","line":7,"column":5,"nodeType":"366","messageId":"367","endLine":7,"endColumn":9},{"ruleId":"364","severity":1,"message":"399","line":8,"column":5,"nodeType":"366","messageId":"367","endLine":8,"endColumn":12},{"ruleId":"364","severity":1,"message":"368","line":10,"column":5,"nodeType":"366","messageId":"367","endLine":10,"endColumn":11},{"ruleId":"364","severity":1,"message":"400","line":11,"column":5,"nodeType":"366","messageId":"367","endLine":11,"endColumn":9},{"ruleId":"364","severity":1,"message":"464","line":12,"column":5,"nodeType":"366","messageId":"367","endLine":12,"endColumn":10},{"ruleId":"364","severity":1,"message":"401","line":13,"column":5,"nodeType":"366","messageId":"367","endLine":13,"endColumn":8},{"ruleId":"364","severity":1,"message":"465","line":14,"column":5,"nodeType":"366","messageId":"367","endLine":14,"endColumn":10},{"ruleId":"364","severity":1,"message":"405","line":2,"column":10,"nodeType":"366","messageId":"367","endLine":2,"endColumn":23},{"ruleId":"364","severity":1,"message":"466","line":11,"column":10,"nodeType":"366","messageId":"367","endLine":11,"endColumn":23},{"ruleId":"364","severity":1,"message":"467","line":11,"column":25,"nodeType":"366","messageId":"367","endLine":11,"endColumn":40},{"ruleId":"468","severity":1,"message":"469","line":22,"column":26,"nodeType":"418","messageId":"470","endLine":22,"endColumn":31,"fix":"471"},{"ruleId":"429","severity":1,"message":"430","line":42,"column":27,"nodeType":"431","messageId":"432","endLine":42,"endColumn":29},{"ruleId":"364","severity":1,"message":"472","line":58,"column":10,"nodeType":"366","messageId":"367","endLine":58,"endColumn":26},{"ruleId":"473","severity":1,"message":"474","line":58,"column":29,"nodeType":"418","messageId":"475","endLine":58,"endColumn":156},{"ruleId":"364","severity":1,"message":"476","line":71,"column":11,"nodeType":"366","messageId":"367","endLine":71,"endColumn":16},{"ruleId":"468","severity":1,"message":"469","line":88,"column":28,"nodeType":"418","messageId":"470","endLine":88,"endColumn":33,"fix":"477"},{"ruleId":"429","severity":1,"message":"430","line":95,"column":27,"nodeType":"431","messageId":"432","endLine":95,"endColumn":29},{"ruleId":"468","severity":1,"message":"469","line":127,"column":30,"nodeType":"418","messageId":"470","endLine":127,"endColumn":35,"fix":"478"},{"ruleId":"429","severity":1,"message":"430","line":136,"column":21,"nodeType":"431","messageId":"432","endLine":136,"endColumn":23},{"ruleId":"426","severity":1,"message":"427","line":138,"column":9,"nodeType":"366","messageId":"428","endLine":138,"endColumn":14},{"ruleId":"468","severity":1,"message":"469","line":164,"column":26,"nodeType":"418","messageId":"470","endLine":164,"endColumn":31,"fix":"479"},{"ruleId":"429","severity":1,"message":"430","line":171,"column":26,"nodeType":"431","messageId":"432","endLine":171,"endColumn":28},{"ruleId":"429","severity":1,"message":"435","line":202,"column":27,"nodeType":"431","messageId":"432","endLine":202,"endColumn":29},{"ruleId":"429","severity":1,"message":"435","line":203,"column":25,"nodeType":"431","messageId":"432","endLine":203,"endColumn":27},{"ruleId":"429","severity":1,"message":"435","line":204,"column":25,"nodeType":"431","messageId":"432","endLine":204,"endColumn":27},{"ruleId":"468","severity":1,"message":"469","line":212,"column":28,"nodeType":"418","messageId":"470","endLine":212,"endColumn":33,"fix":"480"},{"ruleId":"429","severity":1,"message":"430","line":220,"column":46,"nodeType":"431","messageId":"432","endLine":220,"endColumn":48},{"ruleId":"429","severity":1,"message":"430","line":221,"column":42,"nodeType":"431","messageId":"432","endLine":221,"endColumn":44},{"ruleId":"429","severity":1,"message":"430","line":222,"column":37,"nodeType":"431","messageId":"432","endLine":222,"endColumn":39},{"ruleId":"429","severity":1,"message":"430","line":222,"column":133,"nodeType":"431","messageId":"432","endLine":222,"endColumn":135},{"ruleId":"388","severity":1,"message":"389","line":3,"column":3,"nodeType":"390","messageId":"391","endLine":16,"endColumn":4},{"ruleId":"388","severity":1,"message":"389","line":22,"column":3,"nodeType":"390","messageId":"391","endLine":36,"endColumn":4},{"ruleId":"388","severity":1,"message":"389","line":45,"column":3,"nodeType":"390","messageId":"391","endLine":76,"endColumn":4},{"ruleId":"364","severity":1,"message":"481","line":1,"column":10,"nodeType":"366","messageId":"367","endLine":1,"endColumn":15},{"ruleId":"429","severity":1,"message":"430","line":14,"column":27,"nodeType":"431","messageId":"432","endLine":14,"endColumn":29},{"ruleId":"429","severity":1,"message":"430","line":18,"column":40,"nodeType":"431","messageId":"432","endLine":18,"endColumn":42},{"ruleId":"429","severity":1,"message":"430","line":21,"column":35,"nodeType":"431","messageId":"432","endLine":21,"endColumn":37},{"ruleId":"384","severity":1,"message":"385","line":133,"column":40,"nodeType":"386","messageId":"387","endLine":133,"endColumn":42},{"ruleId":"384","severity":1,"message":"385","line":140,"column":29,"nodeType":"386","messageId":"387","endLine":140,"endColumn":31},{"ruleId":"384","severity":1,"message":"385","line":151,"column":23,"nodeType":"386","messageId":"387","endLine":151,"endColumn":25},{"ruleId":"429","severity":1,"message":"430","line":204,"column":11,"nodeType":"431","messageId":"432","endLine":204,"endColumn":13},{"ruleId":"364","severity":1,"message":"482","line":215,"column":9,"nodeType":"366","messageId":"367","endLine":215,"endColumn":25},{"ruleId":"429","severity":1,"message":"435","line":129,"column":32,"nodeType":"431","messageId":"432","endLine":129,"endColumn":34},{"ruleId":"364","severity":1,"message":"483","line":148,"column":4,"nodeType":"366","messageId":"367","endLine":148,"endColumn":7},{"ruleId":"429","severity":1,"message":"435","line":151,"column":30,"nodeType":"431","messageId":"432","endLine":151,"endColumn":32},{"ruleId":"429","severity":1,"message":"435","line":151,"column":66,"nodeType":"431","messageId":"432","endLine":151,"endColumn":68},{"ruleId":"429","severity":1,"message":"435","line":189,"column":29,"nodeType":"431","messageId":"432","endLine":189,"endColumn":31},{"ruleId":"429","severity":1,"message":"435","line":195,"column":43,"nodeType":"431","messageId":"432","endLine":195,"endColumn":45},{"ruleId":"429","severity":1,"message":"430","line":25,"column":23,"nodeType":"431","messageId":"432","endLine":25,"endColumn":25},{"ruleId":"429","severity":1,"message":"430","line":51,"column":27,"nodeType":"431","messageId":"432","endLine":51,"endColumn":29},{"ruleId":"426","severity":1,"message":"427","line":53,"column":8,"nodeType":"366","messageId":"428","endLine":53,"endColumn":13},{"ruleId":"429","severity":1,"message":"430","line":88,"column":37,"nodeType":"431","messageId":"432","endLine":88,"endColumn":39},{"ruleId":"429","severity":1,"message":"430","line":96,"column":35,"nodeType":"431","messageId":"432","endLine":96,"endColumn":37},{"ruleId":"429","severity":1,"message":"430","line":30,"column":25,"nodeType":"431","messageId":"432","endLine":30,"endColumn":27},{"ruleId":"429","severity":1,"message":"430","line":56,"column":28,"nodeType":"431","messageId":"432","endLine":56,"endColumn":30},{"ruleId":"426","severity":1,"message":"427","line":58,"column":9,"nodeType":"366","messageId":"428","endLine":58,"endColumn":14},{"ruleId":"429","severity":1,"message":"430","line":92,"column":39,"nodeType":"431","messageId":"432","endLine":92,"endColumn":41},{"ruleId":"429","severity":1,"message":"430","line":97,"column":33,"nodeType":"431","messageId":"432","endLine":97,"endColumn":35},{"ruleId":"429","severity":1,"message":"430","line":23,"column":23,"nodeType":"431","messageId":"432","endLine":23,"endColumn":25},{"ruleId":"429","severity":1,"message":"430","line":49,"column":27,"nodeType":"431","messageId":"432","endLine":49,"endColumn":29},{"ruleId":"426","severity":1,"message":"427","line":51,"column":8,"nodeType":"366","messageId":"428","endLine":51,"endColumn":13},{"ruleId":"429","severity":1,"message":"430","line":82,"column":39,"nodeType":"431","messageId":"432","endLine":82,"endColumn":41},{"ruleId":"429","severity":1,"message":"430","line":84,"column":33,"nodeType":"431","messageId":"432","endLine":84,"endColumn":35},{"ruleId":"364","severity":1,"message":"405","line":2,"column":10,"nodeType":"366","messageId":"367","endLine":2,"endColumn":23},{"ruleId":"364","severity":1,"message":"461","line":3,"column":20,"nodeType":"366","messageId":"367","endLine":3,"endColumn":29},{"ruleId":"364","severity":1,"message":"466","line":11,"column":10,"nodeType":"366","messageId":"367","endLine":11,"endColumn":23},{"ruleId":"364","severity":1,"message":"467","line":11,"column":25,"nodeType":"366","messageId":"367","endLine":11,"endColumn":40},{"ruleId":"468","severity":1,"message":"469","line":22,"column":26,"nodeType":"418","messageId":"470","endLine":22,"endColumn":31,"fix":"484"},{"ruleId":"429","severity":1,"message":"430","line":42,"column":27,"nodeType":"431","messageId":"432","endLine":42,"endColumn":29},{"ruleId":"364","severity":1,"message":"472","line":58,"column":10,"nodeType":"366","messageId":"367","endLine":58,"endColumn":26},{"ruleId":"473","severity":1,"message":"474","line":58,"column":29,"nodeType":"418","messageId":"475","endLine":58,"endColumn":156},{"ruleId":"364","severity":1,"message":"476","line":71,"column":11,"nodeType":"366","messageId":"367","endLine":71,"endColumn":16},{"ruleId":"468","severity":1,"message":"469","line":88,"column":28,"nodeType":"418","messageId":"470","endLine":88,"endColumn":33,"fix":"485"},{"ruleId":"429","severity":1,"message":"430","line":95,"column":27,"nodeType":"431","messageId":"432","endLine":95,"endColumn":29},{"ruleId":"468","severity":1,"message":"469","line":127,"column":30,"nodeType":"418","messageId":"470","endLine":127,"endColumn":35,"fix":"486"},{"ruleId":"429","severity":1,"message":"430","line":136,"column":21,"nodeType":"431","messageId":"432","endLine":136,"endColumn":23},{"ruleId":"426","severity":1,"message":"427","line":138,"column":9,"nodeType":"366","messageId":"428","endLine":138,"endColumn":14},{"ruleId":"468","severity":1,"message":"469","line":164,"column":26,"nodeType":"418","messageId":"470","endLine":164,"endColumn":31,"fix":"487"},{"ruleId":"429","severity":1,"message":"430","line":171,"column":26,"nodeType":"431","messageId":"432","endLine":171,"endColumn":28},{"ruleId":"429","severity":1,"message":"435","line":202,"column":27,"nodeType":"431","messageId":"432","endLine":202,"endColumn":29},{"ruleId":"429","severity":1,"message":"435","line":203,"column":25,"nodeType":"431","messageId":"432","endLine":203,"endColumn":27},{"ruleId":"429","severity":1,"message":"435","line":204,"column":25,"nodeType":"431","messageId":"432","endLine":204,"endColumn":27},{"ruleId":"468","severity":1,"message":"469","line":212,"column":28,"nodeType":"418","messageId":"470","endLine":212,"endColumn":33,"fix":"488"},{"ruleId":"429","severity":1,"message":"430","line":220,"column":46,"nodeType":"431","messageId":"432","endLine":220,"endColumn":48},{"ruleId":"429","severity":1,"message":"430","line":221,"column":42,"nodeType":"431","messageId":"432","endLine":221,"endColumn":44},{"ruleId":"429","severity":1,"message":"430","line":222,"column":37,"nodeType":"431","messageId":"432","endLine":222,"endColumn":39},{"ruleId":"429","severity":1,"message":"430","line":222,"column":133,"nodeType":"431","messageId":"432","endLine":222,"endColumn":135},{"ruleId":"429","severity":1,"message":"435","line":13,"column":24,"nodeType":"431","messageId":"432","endLine":13,"endColumn":26},{"ruleId":"429","severity":1,"message":"435","line":13,"column":60,"nodeType":"431","messageId":"432","endLine":13,"endColumn":62},{"ruleId":"364","severity":1,"message":"462","line":3,"column":3,"nodeType":"366","messageId":"367","endLine":3,"endColumn":8},{"ruleId":"364","severity":1,"message":"396","line":4,"column":3,"nodeType":"366","messageId":"367","endLine":4,"endColumn":11},{"ruleId":"364","severity":1,"message":"397","line":5,"column":3,"nodeType":"366","messageId":"367","endLine":5,"endColumn":8},{"ruleId":"364","severity":1,"message":"463","line":6,"column":3,"nodeType":"366","messageId":"367","endLine":6,"endColumn":8},{"ruleId":"364","severity":1,"message":"399","line":8,"column":3,"nodeType":"366","messageId":"367","endLine":8,"endColumn":10},{"ruleId":"364","severity":1,"message":"368","line":10,"column":3,"nodeType":"366","messageId":"367","endLine":10,"endColumn":9},{"ruleId":"364","severity":1,"message":"400","line":11,"column":3,"nodeType":"366","messageId":"367","endLine":11,"endColumn":7},{"ruleId":"364","severity":1,"message":"401","line":13,"column":3,"nodeType":"366","messageId":"367","endLine":13,"endColumn":6},{"ruleId":"364","severity":1,"message":"465","line":14,"column":3,"nodeType":"366","messageId":"367","endLine":14,"endColumn":8},{"ruleId":"364","severity":1,"message":"393","line":17,"column":10,"nodeType":"366","messageId":"367","endLine":17,"endColumn":23},{"ruleId":"364","severity":1,"message":"394","line":17,"column":25,"nodeType":"366","messageId":"367","endLine":17,"endColumn":38},{"ruleId":"364","severity":1,"message":"380","line":18,"column":17,"nodeType":"366","messageId":"367","endLine":18,"endColumn":26},{"ruleId":"364","severity":1,"message":"444","line":19,"column":10,"nodeType":"366","messageId":"367","endLine":19,"endColumn":16},{"ruleId":"429","severity":1,"message":"430","line":25,"column":23,"nodeType":"431","messageId":"432","endLine":25,"endColumn":25},{"ruleId":"429","severity":1,"message":"430","line":51,"column":27,"nodeType":"431","messageId":"432","endLine":51,"endColumn":29},{"ruleId":"426","severity":1,"message":"427","line":53,"column":8,"nodeType":"366","messageId":"428","endLine":53,"endColumn":13},{"ruleId":"429","severity":1,"message":"430","line":82,"column":33,"nodeType":"431","messageId":"432","endLine":82,"endColumn":35},{"ruleId":"429","severity":1,"message":"430","line":83,"column":39,"nodeType":"431","messageId":"432","endLine":83,"endColumn":41},{"ruleId":"364","severity":1,"message":"489","line":2,"column":8,"nodeType":"366","messageId":"367","endLine":2,"endColumn":13},{"ruleId":"490","severity":1,"message":"491","line":71,"column":13,"nodeType":"492","messageId":"432","endLine":72,"endColumn":28},{"ruleId":"364","severity":1,"message":"493","line":102,"column":17,"nodeType":"366","messageId":"367","endLine":102,"endColumn":18},{"ruleId":"364","severity":1,"message":"494","line":103,"column":17,"nodeType":"366","messageId":"367","endLine":103,"endColumn":18},{"ruleId":"364","severity":1,"message":"495","line":104,"column":17,"nodeType":"366","messageId":"367","endLine":104,"endColumn":18},{"ruleId":"496","severity":1,"message":"497","line":105,"column":29,"nodeType":"498","messageId":"432","endLine":105,"endColumn":33},{"ruleId":"388","severity":1,"message":"389","line":199,"column":17,"nodeType":"390","messageId":"391","endLine":221,"endColumn":18},{"ruleId":"384","severity":1,"message":"385","line":42,"column":40,"nodeType":"386","messageId":"387","endLine":42,"endColumn":42},{"ruleId":"384","severity":1,"message":"385","line":49,"column":29,"nodeType":"386","messageId":"387","endLine":49,"endColumn":31},"no-unused-vars","'BarChart' is defined but never used.","Identifier","unusedVar","'Circle' is defined but never used.","'SvgLayer' is defined but never used.","'ShapesKonva' is defined but never used.","'KonvaShaps' is defined but never used.","'UNCCanvas' is defined but never used.","'FileUpload' is defined but never used.","'Sidebar' is defined but never used.","no-native-reassign",["499"],"no-negated-in-lhs",["500"],"'logo' is defined but never used.","'Component' is defined but never used.","'Link' is defined but never used.","'Toggle' is defined but never used.","'Nav' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'listReactFiles' is defined but never used.","'getRectPointX' is defined but never used.","'getRectPointY' is defined but never used.","'useState' is defined but never used.","'Polyline' is defined but never used.","'Shape' is defined but never used.","'Rect' is defined but never used.","'Ellipse' is defined but never used.","'Line' is defined but never used.","'Arc' is defined but never used.","'NavItem' is defined but never used.","'MenuItem' is defined but never used.","'FormControl' is defined but never used.","'getPloyPoints' is defined but never used.","'preFunctions' is defined but never used.","'ShapesData' is defined but never used.","'XmlToJson' is defined but never used.","'getStateObject' is defined but never used.","'XMLData' is defined but never used.","'UNCDynamicText' is defined but never used.","'style' is defined but never used.","'geoGnomonic' is defined but never used.","'isDOMComponentElement' is defined but never used.","'he' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\c.","Literal","unnecessaryEscape",["501","502"],"no-whitespace-before-property","Unexpected whitespace before property then.","MemberExpression","unexpectedWhitespace",{"range":"503","text":"504"},"no-redeclare","'value' is already defined.","redeclared","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",{"range":"505","text":"504"},"'cdataValue' is assigned a value but never used.","Expected '===' and instead saw '=='.","'lables' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'Konva' is defined but never used.","'ReactDOM' is defined but never used.","'render' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Text' is defined but never used.","'rectOjects' is assigned a value but never used.","'eleObjects' is assigned a value but never used.","'ShapeComponets' is defined but never used.","'LableComponets' is defined but never used.","'useEffect' is defined but never used.","'Stage' is defined but never used.","'Layer' is defined but never used.","'Group' is defined but never used.","'Image' is defined but never used.","'display_array' is assigned a value but never used.","'setDisplayArray' is assigned a value but never used.","no-regex-spaces","Spaces are hard to count. Use {2}.","multipleSpaces",{"range":"506","text":"507"},"'staticExpression' is assigned a value but never used.","no-template-curly-in-string","Unexpected template string expression.","unexpectedTemplateExpression","'names' is assigned a value but never used.",{"range":"508","text":"507"},{"range":"509","text":"507"},{"range":"510","text":"507"},{"range":"511","text":"507"},"'image' is defined but never used.","'singleshapearray' is assigned a value but never used.","'tmp' is assigned a value but never used.",{"range":"512","text":"507"},{"range":"513","text":"507"},{"range":"514","text":"507"},{"range":"515","text":"507"},{"range":"516","text":"507"},"'axios' is defined but never used.","no-duplicate-case","Duplicate case label.","SwitchCase","'x' is assigned a value but never used.","'y' is assigned a value but never used.","'z' is assigned a value but never used.","no-eval","eval can be harmful.","CallExpression","no-global-assign","no-unsafe-negation",{"messageId":"517","fix":"518","desc":"519"},{"messageId":"520","fix":"521","desc":"522"},[4467,4469],".",[6295,6297],[725,727]," {2}",[2595,2597],[3568,3570],[4441,4443],[5921,5923],[710,712],[2548,2550],[3521,3523],[4394,4396],[5874,5876],"removeEscape",{"range":"523","text":"524"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"525","text":"526"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[3900,3901],"",[3900,3900],"\\"]